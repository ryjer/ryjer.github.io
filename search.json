[{"title":"Debian 10、CentOS8、Rocky8等linux系统配置普通用户sudo权限","url":"/posts/a158220239.html","content":"<blockquote>\n<p>配置 linux 权限是熟悉 linux 所必须的。各大linux发行版的默认软件仓库对各软件包配置了详细而严格的权限限制。如果不能熟悉 linux 的权限控制，就会因此出现很多问题。<br>直接使用 root 用户管理系统是非常方便的，但也是非常危险的。标准的做法是使用具有 sudo 权限的普通用户管理系统。这里记录一下在 Debian 10 系统下手动配置一个具有 sudo 权限的linux 普通用户的过程。<br>sudo 是较为通用的软件包，其他的 linux 发行版与 Debian 基本相同，甚至没有任何区别。可以直接参考本文</p>\n</blockquote>\n<span id=\"more\"></span>\n\n<p>原文链接: <a href=\"http://blog.ryjer.com/posts/a158220239.html\">http://blog.ryjer.com/posts/a158220239.html</a></p>\n<h1 id=\"1、准备工作——安装sudo\"><a href=\"#1、准备工作——安装sudo\" class=\"headerlink\" title=\"1、准备工作——安装sudo\"></a>1、准备工作——安装sudo</h1><p>sudo 是 super user do 的意思，表示临时借用超级用户（super user）的权限执行（do）一次命令。</p>\n<p>但官方的 debian 系统可能默认没有安装 sudo 软件，因而也没有sudo命令的配置文件 <strong>/etc/sudoers</strong>。其他发行版一般都会默认安装sudo。</p>\n<p>Debian 需要切换到 root 用户后用<code>apt-get</code>手动安装 sudo 软件。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">apt install sudo</span><br></pre></td></tr></table></figure>\n\n<p>RHEL 系的发行版（CentOS Rocky）则需要切换到 root 用户后用<code>dnf</code>手动安装 <code>sudo</code> ，但通常 RHEL系会预装 <strong>sudo</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">dnf install sudo</span><br></pre></td></tr></table></figure>\n\n<p>接下来，其他用户就可以使用 sudo 命令了。</p>\n<h1 id=\"2、原理\"><a href=\"#2、原理\" class=\"headerlink\" title=\"2、原理\"></a>2、原理</h1><h2 id=\"2-1-sudo配置文件—debian10\"><a href=\"#2-1-sudo配置文件—debian10\" class=\"headerlink\" title=\"2.1 sudo配置文件—debian10\"></a>2.1 sudo配置文件—debian10</h2><p>sudo 命令使用 <code>/etc/sudoers</code> 配置文件管理 <strong>用户</strong> 和 <strong>用户组</strong> 的sudo权限。Debian 10 中 sudo 默认的配置文件内容如下：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># This file MUST be edited with the &#x27;visudo&#x27; command as root.</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># Please consider adding local content in /etc/sudoers.d/ instead of</span></span><br><span class=\"line\"><span class=\"comment\"># directly modifying this file.</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># See the man page for details on how to write a sudoers file.</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\">Defaults        env_reset</span><br><span class=\"line\">Defaults        mail_badpass</span><br><span class=\"line\">Defaults        secure_path=<span class=\"string\">&quot;/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Host alias specification</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># User alias specification</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Cmnd alias specification</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># User privilege specification # 用户权限</span></span><br><span class=\"line\">root    ALL=(ALL:ALL) ALL</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Allow members of group sudo to execute any command # 用户组权限</span></span><br><span class=\"line\">%sudo   ALL=(ALL:ALL) ALL</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># See sudoers(5) for more information on &quot;#include&quot; directives:</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#includedir /etc/sudoers.d</span></span><br></pre></td></tr></table></figure>\n\n<p>其中，第20行开始为 <strong>用户sudo权限</strong> ，这里为root用户提供了sudo权限（虽然root用户并不需要）。第23行以 <code>%</code> 开始的为 <strong>用户组权限</strong>，这里创建了 <strong>sudo</strong> 用户组，该组中的用户将拥有sudo权限。</p>\n<p>为了方便管理，我们可以将普通用户添加 <strong>sudo</strong> 附加用户组，便可以使其拥有 sudo 权限。如果单独为一个个用户添加 sudo 权限会非常难以管理。</p>\n<h2 id=\"2-2-sudo配置文件—Rocky8\"><a href=\"#2-2-sudo配置文件—Rocky8\" class=\"headerlink\" title=\"2.2 sudo配置文件—Rocky8\"></a>2.2 sudo配置文件—Rocky8</h2><p>rocky8 的sudo是默认安装的，其配置文件与 debian10 有所不同，我刚装完一个rocky8后的配置文件如下</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">## Sudoers allows particular users to run various commands as</span></span><br><span class=\"line\"><span class=\"comment\">## the root user, without needing the root password.</span></span><br><span class=\"line\"><span class=\"comment\">##</span></span><br><span class=\"line\"><span class=\"comment\">## Examples are provided at the bottom of the file for collections</span></span><br><span class=\"line\"><span class=\"comment\">## of related commands, which can then be delegated out to particular</span></span><br><span class=\"line\"><span class=\"comment\">## users or groups.</span></span><br><span class=\"line\"><span class=\"comment\">## </span></span><br><span class=\"line\"><span class=\"comment\">## This file must be edited with the &#x27;visudo&#x27; command.</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## Host Aliases</span></span><br><span class=\"line\"><span class=\"comment\">## Groups of machines. You may prefer to use hostnames (perhaps using </span></span><br><span class=\"line\"><span class=\"comment\">## wildcards for entire domains) or IP addresses instead.</span></span><br><span class=\"line\"><span class=\"comment\"># Host_Alias     FILESERVERS = fs1, fs2</span></span><br><span class=\"line\"><span class=\"comment\"># Host_Alias     MAILSERVERS = smtp, smtp2</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## User Aliases</span></span><br><span class=\"line\"><span class=\"comment\">## These aren&#x27;t often necessary, as you can use regular groups</span></span><br><span class=\"line\"><span class=\"comment\">## (ie, from files, LDAP, NIS, etc) in this file - just use %groupname </span></span><br><span class=\"line\"><span class=\"comment\">## rather than USERALIAS</span></span><br><span class=\"line\"><span class=\"comment\"># User_Alias ADMINS = jsmith, mikem</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## Command Aliases</span></span><br><span class=\"line\"><span class=\"comment\">## These are groups of related commands...</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## Networking</span></span><br><span class=\"line\"><span class=\"comment\"># Cmnd_Alias NETWORKING = /sbin/route, /sbin/ifconfig, /bin/ping, /sbin/dhclient, /usr/bin/net, /sbin/iptables, /usr/bin/rfcomm, /usr/bin/wvdial, /sbin/iwconfig, /sbin/mii-tool</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## Installation and management of software</span></span><br><span class=\"line\"><span class=\"comment\"># Cmnd_Alias SOFTWARE = /bin/rpm, /usr/bin/up2date, /usr/bin/yum</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## Services</span></span><br><span class=\"line\"><span class=\"comment\"># Cmnd_Alias SERVICES = /sbin/service, /sbin/chkconfig, /usr/bin/systemctl start, /usr/bin/systemctl stop, /usr/bin/systemctl reload, /usr/bin/systemctl restart, /usr/bin/systemctl status, /usr/bin/systemctl enable, /usr/bin/systemctl disable</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## Updating the locate database</span></span><br><span class=\"line\"><span class=\"comment\"># Cmnd_Alias LOCATE = /usr/bin/updatedb</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## Storage</span></span><br><span class=\"line\"><span class=\"comment\"># Cmnd_Alias STORAGE = /sbin/fdisk, /sbin/sfdisk, /sbin/parted, /sbin/partprobe, /bin/mount, /bin/umount</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## Delegating permissions</span></span><br><span class=\"line\"><span class=\"comment\"># Cmnd_Alias DELEGATING = /usr/sbin/visudo, /bin/chown, /bin/chmod, /bin/chgrp </span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## Processes</span></span><br><span class=\"line\"><span class=\"comment\"># Cmnd_Alias PROCESSES = /bin/nice, /bin/kill, /usr/bin/kill, /usr/bin/killall</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## Drivers</span></span><br><span class=\"line\"><span class=\"comment\"># Cmnd_Alias DRIVERS = /sbin/modprobe</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Defaults specification</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># Refuse to run if unable to disable echo on the tty.</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\">Defaults   !visiblepw</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># Preserving HOME has security implications since many programs</span></span><br><span class=\"line\"><span class=\"comment\"># use it when searching for configuration files. Note that HOME</span></span><br><span class=\"line\"><span class=\"comment\"># is already set when the the env_reset option is enabled, so</span></span><br><span class=\"line\"><span class=\"comment\"># this option is only effective for configurations where either</span></span><br><span class=\"line\"><span class=\"comment\"># env_reset is disabled or HOME is present in the env_keep list.</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\">Defaults    always_set_home</span><br><span class=\"line\">Defaults    match_group_by_gid</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Prior to version 1.8.15, groups listed in sudoers that were not</span></span><br><span class=\"line\"><span class=\"comment\"># found in the system group database were passed to the group</span></span><br><span class=\"line\"><span class=\"comment\"># plugin, if any. Starting with 1.8.15, only groups of the form</span></span><br><span class=\"line\"><span class=\"comment\"># %:group are resolved via the group plugin by default.</span></span><br><span class=\"line\"><span class=\"comment\"># We enable always_query_group_plugin to restore old behavior.</span></span><br><span class=\"line\"><span class=\"comment\"># Disable this option for new behavior.</span></span><br><span class=\"line\">Defaults    always_query_group_plugin</span><br><span class=\"line\"></span><br><span class=\"line\">Defaults    env_reset</span><br><span class=\"line\">Defaults    env_keep =  <span class=\"string\">&quot;COLORS DISPLAY HOSTNAME HISTSIZE KDEDIR LS_COLORS&quot;</span></span><br><span class=\"line\">Defaults    env_keep += <span class=\"string\">&quot;MAIL PS1 PS2 QTDIR USERNAME LANG LC_ADDRESS LC_CTYPE&quot;</span></span><br><span class=\"line\">Defaults    env_keep += <span class=\"string\">&quot;LC_COLLATE LC_IDENTIFICATION LC_MEASUREMENT LC_MESSAGES&quot;</span></span><br><span class=\"line\">Defaults    env_keep += <span class=\"string\">&quot;LC_MONETARY LC_NAME LC_NUMERIC LC_PAPER LC_TELEPHONE&quot;</span></span><br><span class=\"line\">Defaults    env_keep += <span class=\"string\">&quot;LC_TIME LC_ALL LANGUAGE LINGUAS _XKB_CHARSET XAUTHORITY&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># Adding HOME to env_keep may enable a user to run unrestricted</span></span><br><span class=\"line\"><span class=\"comment\"># commands via sudo.</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># Defaults   env_keep += &quot;HOME&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">Defaults    secure_path = /sbin:/bin:/usr/sbin:/usr/bin</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## Next comes the main part: which users can run what software on </span></span><br><span class=\"line\"><span class=\"comment\">## which machines (the sudoers file can be shared between multiple</span></span><br><span class=\"line\"><span class=\"comment\">## systems).</span></span><br><span class=\"line\"><span class=\"comment\">## Syntax:</span></span><br><span class=\"line\"><span class=\"comment\">##</span></span><br><span class=\"line\"><span class=\"comment\">## \tuser\tMACHINE=COMMANDS</span></span><br><span class=\"line\"><span class=\"comment\">##</span></span><br><span class=\"line\"><span class=\"comment\">## The COMMANDS section may have other options added to it.</span></span><br><span class=\"line\"><span class=\"comment\">##</span></span><br><span class=\"line\"><span class=\"comment\">## Allow root to run any commands anywhere </span></span><br><span class=\"line\">root\tALL=(ALL) \tALL</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## Allows members of the &#x27;sys&#x27; group to run networking, software, </span></span><br><span class=\"line\"><span class=\"comment\">## service management apps and more.</span></span><br><span class=\"line\"><span class=\"comment\"># %sys ALL = NETWORKING, SOFTWARE, SERVICES, STORAGE, DELEGATING, PROCESSES, LOCATE, DRIVERS</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## Allows people in group wheel to run all commands</span></span><br><span class=\"line\">%wheel\tALL=(ALL)\tALL</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## Same thing without a password</span></span><br><span class=\"line\"><span class=\"comment\"># %wheel\tALL=(ALL)\tNOPASSWD: ALL</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## Allows members of the users group to mount and unmount the </span></span><br><span class=\"line\"><span class=\"comment\">## cdrom as root</span></span><br><span class=\"line\"><span class=\"comment\"># %users  ALL=/sbin/mount /mnt/cdrom, /sbin/umount /mnt/cdrom</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## Allows members of the users group to shutdown this system</span></span><br><span class=\"line\"><span class=\"comment\"># %users  localhost=/sbin/shutdown -h now</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## Read drop-in files from /etc/sudoers.d (the # here does not mean a comment)</span></span><br><span class=\"line\"><span class=\"comment\">#includedir /etc/sudoers.d</span></span><br></pre></td></tr></table></figure>\n\n<p>从 107 行可看出，其默认sudo用户组为 <code>wheel</code> 而不是 debian 10中的  <code>sudo</code> ，而且格式也不相同</p>\n<p>查看一下拥有sudo权限的用户 <code>me</code> 的群组看看</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">~<span class=\"comment\"># groups me</span></span><br><span class=\"line\">me : me wheel</span><br></pre></td></tr></table></figure>\n\n<p>可见确实是 wheel 群组授予了其 sudo 权限</p>\n<h1 id=\"3、添加用户—useradd命令\"><a href=\"#3、添加用户—useradd命令\" class=\"headerlink\" title=\"3、添加用户—useradd命令\"></a>3、添加用户—useradd命令</h1><p>可以使用 useradd 命令创建新用户，系统会自动创建一个同名组（<strong>me用户组</strong>）。其格式如下：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">useradd 选项 用户名</span><br><span class=\"line\"><span class=\"comment\"># 多个选项，用户名要在最后</span></span><br><span class=\"line\">useradd 选项1 选项2 选项3 选项4 用户名</span><br></pre></td></tr></table></figure>\n\n<p>常用参数：</p>\n<ul>\n<li>-s 指定用户登录 shell，这里指定为 bash</li>\n<li>-d 指定一个已经存在的目录为主目录</li>\n<li>-m 指定并创建主目录(main)，这里指定为 /home/me</li>\n<li>-g 指定用户所属用户组(group)。</li>\n<li>-G 指定<strong>附加</strong>用户组</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 添加新用户 me，指定登录shell为 /bin/bash，主目录为 /home/me</span></span><br><span class=\"line\">useradd -s /bin/bash -m /home/me me</span><br></pre></td></tr></table></figure>\n\n<p>如果你想同时指定不同命的用户组和附加组，可以这样。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">useradd -s /bin/bash -g we –G adm,root me</span><br></pre></td></tr></table></figure>\n\n<p>该命令创建了用户 <strong>me</strong> 。使用 <strong>-s</strong> 参数指定了其登录 shell 为 <strong>/bin/bash</strong>；使用 <strong>-g</strong> 参数指定属于不同名的 <strong>we</strong> 用户组；并用 <strong>-G</strong> 参数指定了两个附加组 <strong>adm</strong> 和 <strong>root</strong>，指定多个附加组时用逗号 “,” 分割各个附加组名。</p>\n<p>如果你想偷下懒，可以使用adduser命令，该命令是useradd的简化版(但可以满足90%的需求)。该命令会自动配置 /home 下的用户同名主目录和默认 shell</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">adduser me</span><br></pre></td></tr></table></figure>\n\n<p>执行完该命令后，会在配置文件 <strong>/etc/passwd</strong> 中添加<strong>me</strong>用户的记录。并在 <strong>/etc/group</strong> 配置文件中添加一个me用户组记录。在 <strong>/etc/shadow</strong> 配置文件中记录加密密码（说是密码不太准确）。</p>\n<h1 id=\"4、-修改密码—passwd命令\"><a href=\"#4、-修改密码—passwd命令\" class=\"headerlink\" title=\"4、 修改密码—passwd命令\"></a>4、 修改密码—passwd命令</h1><p>刚刚创建的新用户没有密码，不太安全。可以使用passwd 命令为其修改密码。以下为修改用户 <code>me</code> 的密码：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">passwd me</span><br></pre></td></tr></table></figure>\n\n<p>然后就会提示你输入密码进行修改了</p>\n<h1 id=\"5、-修改账号—usermod命令\"><a href=\"#5、-修改账号—usermod命令\" class=\"headerlink\" title=\"5、 修改账号—usermod命令\"></a>5、 修改账号—usermod命令</h1><h2 id=\"添加附加用户组，授予-sudo-权限\"><a href=\"#添加附加用户组，授予-sudo-权限\" class=\"headerlink\" title=\"添加附加用户组，授予 sudo 权限\"></a>添加附加用户组，授予 sudo 权限</h2><p>修改用户账号就是更改用户的有关属性记录，如用户号、主目录、用户组、登录Shell等。这些记录信息分散在各个配置文件中（/etc/passwd 用户信息, /etc/shadow 加密密码信息, /etc/group 用户组信息），使用usermod 可以统一管理修改这几个配置文件。usermod 命令格式如下：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">usermod 选项 用户名</span><br></pre></td></tr></table></figure>\n\n<p>其常用选项参数与 useradd 相同，有些版本的usermod命令还会提供额外功能选项（如修改用户名等）：</p>\n<ul>\n<li>-s 指定用户登录 shell，这里指定为 bash</li>\n<li>-d 指定一个已经存在的目录为主目录</li>\n<li>-m 指定并创建主目录(main)，这里指定为 /home/me</li>\n<li>-g 指定用户所属用户组(group)。</li>\n<li>-a 把用户追加（append）到某些组中，仅与-G选项一起使用 </li>\n<li>-G 指定<strong>附加</strong>用户组（Group）</li>\n</ul>\n<p>注意，usermod 修改用户账户前。需保证该用户下没有任何进程执行，特别注意shell进程（这意味着对应用户需要退出所有登录）。</p>\n<p>为普通用户添加 sudo 权限可以通过将对应用户添加到拥有sudo权限的用户组中实现，比如在debian10 中的 <strong>sudo</strong> 用户组：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 将me用户 添加到 sudo 用户组</span></span><br><span class=\"line\">usermod -a -G sudo me</span><br><span class=\"line\"><span class=\"comment\"># 你要是比较闲的话，再添加一个 adm 伪用户组，注意这不是必须的</span></span><br><span class=\"line\">usermod -aG adm me</span><br></pre></td></tr></table></figure>\n\n<p>或者说 rocky8 中的 <strong>wheel</strong> 群组</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 将me用户 添加到 wheel 用户组</span></span><br><span class=\"line\">usermod -a -G wheel me </span><br></pre></td></tr></table></figure>\n\n<p>执行完后，使用 groups命令检查</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">groups me</span><br></pre></td></tr></table></figure>\n\n<p>该命令会显示 me 用户所属的多个用户组（可能有很多），debian10中应该有 sudo 和 adm，rocky8中应该有 wheel</p>\n<h1 id=\"6、删除用户——userdel命令\"><a href=\"#6、删除用户——userdel命令\" class=\"headerlink\" title=\"6、删除用户——userdel命令\"></a>6、删除用户——userdel命令</h1><p>与 useradd 命令向对应，有一个 userdel 命令用于删除用户。其使用格式如下：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">userdel 选项 用户名</span><br></pre></td></tr></table></figure>\n\n<p>常用的选项参数是 <strong>-r</strong> ，这是<strong>递归</strong>的意思。表示将该用户的所有的配置信息（主要是/etc/passwd, /etc/shadow, /etc/group等）以及用户主目录全部删除。这基本上已经是算是清除干净了。</p>\n<h1 id=\"7、-参考资料\"><a href=\"#7、-参考资料\" class=\"headerlink\" title=\"7、 参考资料\"></a>7、 参考资料</h1><p><a href=\"https://www.runoob.com/linux/linux-user-manage.html\">菜鸟教程用户管理</a></p>\n","categories":["权限管理","Linux"],"tags":["sudo","linux 权限管理","linux","rocky","centos","debian"]},{"title":"linux学习第01步：CentOS 7操作系统的下载和安装","url":"/posts/a198a07572.html","content":"<p>原文链接：<a href=\"http://blog.ryjer.com/posts/a198a07572.html\">http://blog.ryjer.com/posts/a198a07572.html</a></p>\n<h1 id=\"一、CentOS是什么\"><a href=\"#一、CentOS是什么\" class=\"headerlink\" title=\"一、CentOS是什么\"></a>一、CentOS是什么</h1><p><strong>太长不看版</strong>：CentOS （<a href=\"http://www.centos.org/\">官网链接</a>）是主流的linux服务器操作系统（在中国更主流），要是服务器不知道选什么就选他好了。当你不知道应该选择什么时，跟随主流总是没错的。</p>\n<h2 id=\"1、为什么选择CentOS-7版本而不是更新的CentOS-8？\"><a href=\"#1、为什么选择CentOS-7版本而不是更新的CentOS-8？\" class=\"headerlink\" title=\"1、为什么选择CentOS 7版本而不是更新的CentOS 8？\"></a>1、为什么选择CentOS 7版本而不是更新的CentOS 8？</h2><p>​    CentOS 的最新版本是CentOS 8，但是CentOS的维护方——红帽（RedHat）宣布CentOS 8的生命周期将于2021年底(11/30)结束。接替CentOS 8的后续版本则是稳定性存疑的CentOS Stream（可以将其视为Redhat踩雷版），而上一版本CentOS 7剩余的生命周期则可以一直到<strong>2024/06/30</strong>。</p>\n<span id=\"more\"></span>\n\n<h2 id=\"2、CentOS-7生命周期结束后怎么办？\"><a href=\"#2、CentOS-7生命周期结束后怎么办？\" class=\"headerlink\" title=\"2、CentOS 7生命周期结束后怎么办？\"></a>2、CentOS 7生命周期结束后怎么办？</h2><p>​    由于linux内核和相关核心软件包都来源于自由软件运动，大量使用了保护源码自由的GPL 授权（GUN 通用软件授权）。因此CentOS 的源码（本质上是红帽linux 即RedHat linux的源码）必须是开放的，当之前好用免费的CentOS消失后，开源社区总是会很快出现一个填补对应生态位的新产品。而且往往是之前产品的创始人最先跳出来。</p>\n<p>​    而CentOS 8宣布2021年后不再有后续稳定版本提供时，CentOS的创始人很快就宣布将退出对应替代品 <strong>Rocky linux</strong>（<a href=\"http://rockylinux.org/\">官网链接</a>）。取名Rocky是为了纪念另一位CentOS的创始人。但该发行版还在开发中。</p>\n<h2 id=\"3、还有其他稳定的linux发行版选择吗？\"><a href=\"#3、还有其他稳定的linux发行版选择吗？\" class=\"headerlink\" title=\"3、还有其他稳定的linux发行版选择吗？\"></a>3、还有其他稳定的linux发行版选择吗？</h2><p>​    <strong>长话短说</strong>：选<strong>Debian（<a href=\"http://www.debian.org/\">官网链接</a>）</strong>，提供CentOS的云服务商也会提供Debian。因为Debian是另一种广为使用的服务器操作系统。</p>\n<p>​    除了老牌的RedHat linux 和RedHat 衍生的CentOS，其实还有另一个广泛用于服务器的老牌linux发行版——Debian。Debian是完全由社区维护的linux发行版，因此和CentOS一样可以免费使用。而各大云服务商也会直接提供Debian的镜像，因此在购买云服务时可以直接选择Debian作为操作系统。Debian 的稳定性与Redhat 和 CentOS不相上下（甚至更为稳定），完全可以使用Debian作为CentOS的替代品。但要注意的是，Debian稳定版追求稳定性，因此其默认的apt-get提供的软件包都是稳定性久经考验但较为老旧的版本。</p>\n<h1 id=\"二、安装CentOS-linux\"><a href=\"#二、安装CentOS-linux\" class=\"headerlink\" title=\"二、安装CentOS linux\"></a>二、安装CentOS linux</h1><p>​    这里假设你是使用物理机或者虚拟机安装的CentOS进行学习，如果是云服务商的话在购买时直接选择CentOS 7 就好了。即使购买时选了其他的系统也不用担心，买完也可以在控制台选择更换操作系统（或镜像）。如果你的云服务器已经是CentOS了，你可以直接跳到下一步。</p>\n<h2 id=\"1-下载CentOS-7镜像\"><a href=\"#1-下载CentOS-7镜像\" class=\"headerlink\" title=\"1. 下载CentOS 7镜像\"></a>1. 下载CentOS 7镜像</h2><p>​    现代的操作系统一般会以 .iso 镜像的格式发布。iso镜像原本是为光盘设计的，但经过适当的转换也可以复制到U盘（实际上现在都是使用U盘安装系统）等任意其他存储设备上。iso镜像文件也可以被虚拟机软件的<strong>虚拟光驱</strong>直接装载使用。</p>\n<h2 id=\"2、自主安装\"><a href=\"#2、自主安装\" class=\"headerlink\" title=\"2、自主安装\"></a>2、自主安装</h2><p>​    若是想偷懒，直接跳到下面的 <strong>3、下载链接</strong></p>\n<ul>\n<li>打开CentOS官网（<a href=\"https://www.centos.org/\">CentOS官网链接</a>），你的界面应该如下所示</li>\n</ul>\n<p><img src=\"https://raw.githubusercontent.com/ryjer/imgbed/master/images/20210723115726-6b403eac450b3d9f578e4ff8f28fb60c-fc396a53.png\" alt=\"image-20210723115723448\"></p>\n<ul>\n<li>点击图中箭头所指的 CentOS linux 按钮，进入<a href=\"https://www.centos.org/centos-linux/\">版本选择页面</a></li>\n</ul>\n<p><img src=\"https://raw.githubusercontent.com/ryjer/imgbed/master/images/20210723115913-3092d119c0233b4bb03c31b0ec8d7c72-80b4882c.png\" alt=\"image-20210723115908846\"></p>\n<ul>\n<li>点击图中箭头所指的 <strong>7</strong>，选择CentOS 7版本。</li>\n</ul>\n<p><img src=\"https://raw.githubusercontent.com/ryjer/imgbed/master/images/20210723120104-a908df4013041c8d6ff79cf6a4fedce5-1f8661eb.png\" alt=\"image-20210723120102683\"></p>\n<ul>\n<li>点击箭头所指的 <code>x86_64</code>，这里的x86_64指的是处理器指令集架构，如果你懂的话不用我解释，会出现以下页面（不包括红字、红框、红箭头）</li>\n</ul>\n<p><img src=\"https://raw.githubusercontent.com/ryjer/imgbed/master/images/20210723120617-62fdc2da06dda084175af890dab8e66c-675241c1.png\" alt=\"image-20210723120614688\"></p>\n<p>上图中显示的就是中国国内的各个镜像，你可以选择一个点击进入镜像选择下载页面。一般第一个就可以了（比如上面的阿里云）</p>\n<h2 id=\"3、下载链接\"><a href=\"#3、下载链接\" class=\"headerlink\" title=\"3、下载链接\"></a>3、下载链接</h2><p><a href=\"http://mirrors.ustc.edu.cn/centos/7.9.2009/isos/x86_64/\">中国科学技术大学CentOS 7镜像</a></p>\n<p><a href=\"https://mirrors.tuna.tsinghua.edu.cn/centos/7.9.2009/isos/x86_64/\">清华大学CentOS 7镜像</a></p>\n<p><a href=\"http://mirrors.aliyun.com/centos/7.9.2009/isos/x86_64/\">阿里云CentOS 7镜像</a></p>\n<p><a href=\"http://mirrors.huaweicloud.com/centos/7.9.2009/isos/x86_64/\">华为云 CentOS 7 镜像</a></p>\n<p><a href=\"http://mirrors.163.com/centos/7.9.2009/isos/x86_64/\">网易云 CentOS 7镜像</a></p>\n<p>​        以上镜像地址均为CentOS官网指定的镜像<a href=\"http://isoredirect.centos.org/centos/7/isos/x86_64/\">CentOS 镜像列表</a>，你可以打开后直接选择一个版本下载。但你可能对选择哪个版本有所疑惑，下面有各版本的区别的介绍。</p>\n<p>当你打开以上链接后，出现的选项通常是如下几个：</p>\n<p><img src=\"https://raw.githubusercontent.com/ryjer/imgbed/master/images/20210304231306.png\" alt=\"image-20210304231305017\"></p>\n<p>其中会有DVD、Everything、Minimal、NetInstall四个版本，每个版本提供了直接下载的 .iso镜像和 .torrent bt种子文件。各个版本之间的主要区别在于包含的软件包数量</p>\n<blockquote>\n<p>DVD 版本包含常用的绝大部分软件包<br>Everything 包含CentOS官方维护的几乎所有软件包<br>Minimal 是最小的意思，包含最少的必要软件包，但没有图形界面。<br>NetInstall 是网络安装的意思，你需要的软件包都需要连接网络下载，所以体积最小。如果你安装时有网络的话可以选择这个，但不建议新手选择这个</p>\n</blockquote>\n<p>建议新手选择<strong>CentOS-7-x86_64-DVD-2009.iso</strong>，镜像大小为4GB左右，这个能满足绝大部分人的需求。</p>\n","categories":["Linux"],"tags":["linux","CentOS","操作系统"]},{"title":"linux学习第00步：linux操作系统介绍与Windows10下VirtualBox虚拟机的安装使用","url":"/posts/a17b71d465.html","content":"<p>原文链接：<a href=\"http://blog.ryjer.com/posts/a17b71d465.html\">http://blog.ryjer.com/posts/a17b71d465.html</a></p>\n<h1 id=\"一、什么是linux系统？\"><a href=\"#一、什么是linux系统？\" class=\"headerlink\" title=\"一、什么是linux系统？\"></a>一、什么是linux系统？</h1><h2 id=\"1、操作系统分类与桌面图形界面\"><a href=\"#1、操作系统分类与桌面图形界面\" class=\"headerlink\" title=\"1、操作系统分类与桌面图形界面\"></a>1、操作系统分类与桌面图形界面</h2><p>​        所有的操作系统都是可以直接安装在物理机上的。如果你使用过U盘或光盘安装过Windows系统的话，linux系统也可以使用相同的方法进行安装。</p>\n<p>​        但是，Window操作系统的主要市场是<strong>桌面操作系统市场</strong>，该市场的另一大操作系统是苹果公司的Mac系统。</p>\n<p>​        所谓<strong>桌面操作系统</strong>就是提供桌面图形界面（对应还有智能手机的图形界面）的操作系统，其使用核心是图形界面（GUI）。相信大家都使用过windows系统。桌面操作系统通过图形界面和一套简单的逻辑成功掩盖了底层复杂的操作逻辑，使得没有任何计算机相关知识的人也可以很快上手使用强大的现代计算机。（事实上，移动操作系统的图形界面在这方面做得更好，感谢乔布斯）</p>\n<span id=\"more\"></span>\n\n<p>​        linux系统也可以提供图形界面，从而成为一种桌面操作系统。但这并不是linux的主要应用市场，因而软件生态匮乏。远远比不了专业的桌面系统，如Window和Mac OS。所以我不建议你使用linux作为主力桌面系统，同样也不建议你使用windows作为服务器操作系统。</p>\n<h2 id=\"2、linux系统主要应用领域\"><a href=\"#2、linux系统主要应用领域\" class=\"headerlink\" title=\"2、linux系统主要应用领域\"></a>2、linux系统主要应用领域</h2><p>​        长话短说：<strong>服务器操作系统市场</strong>。只要你想操作服务器，基本上就离不开linux系统。</p>\n<p>​        linux的主要市场是<strong>服务器操作系统</strong>和<strong>嵌入式操作系统</strong>，基本上除了桌面市场外都会广泛使用linux系统（包括变种的安卓）。服务器听起来就是专业设备，因而其使用的操作系统也是为专业人员设计的。其主要人机交互方式为<strong>命令</strong>，或者是Shell（你暂时不用管shell是什么）命令。基本上，所有的linux操作都是通过命令完成的，而且服务器也不会浪费宝贵的内存和CPU资源来运行一个图形界面。</p>\n<p>​        一个有意思的问题是——命令是什么？对于没有使用过命令的用户来说，这是很难解释的问题，就像对盲人描述一个大象的样子一样。而对于熟悉命令的人来说，却是个不言自明的概念。对于什么是命令，在以后的篇章中会讲，在此先略过。</p>\n<p>​        要想学习linux，我建议从Window系统（Mac系统我就不说了，Mac本身就是BSD Unix 的一种）的逻辑逐渐过渡到linux。因此，我的博客会尽量将每一步学习的难度降低。但对应的代价则是，各步骤之间的依赖性很高。一旦跳过某些平滑的过度学习，你将会因信息缺失而难以推进。</p>\n<p>​        我建议的推进顺序是，先从windows桌面或Mac OS桌面过渡到linux桌面，然后从linux桌面过渡到linux 命令行（Shell）。</p>\n<h1 id=\"二、虚拟机介绍\"><a href=\"#二、虚拟机介绍\" class=\"headerlink\" title=\"二、虚拟机介绍\"></a>二、虚拟机介绍</h1><h2 id=\"1、虚拟机是什么？\"><a href=\"#1、虚拟机是什么？\" class=\"headerlink\" title=\"1、虚拟机是什么？\"></a>1、虚拟机是什么？</h2><p>​        虚拟机软件提供一种“虚拟的”计算机环境。使得软件（如操作系统）可以像运行在真实的物理机一样运行在虚拟机中，而不会发现其环境与真实的物理机有什么区别。考虑到为了学习linux专门买一台物理机即不实惠（穷）也不方便（同时操作两台电脑绝对会头大），我还是建议在虚拟机中进行学习。待你熟悉以后再过度到物理机上使用。</p>\n<p>​        在服务器中，虚拟机也是广泛使用的。一台物理服务器买来后的第一件事就是安装虚拟机软件（如VMware ESXi，linux KVM）绝大部分服务器的物理机性能其实都远远超过其上运行的某个服务的要求。因而一般会使用虚拟机软件将一台物理机的资源分割为几台虚拟机，从而提高资源利用率节约成本。并且可以通过虚拟机间的隔离来防止一个服务对其它服务的影响，来保证服务之间的隔离。以防一个软件崩溃后吞噬系统资源甚至直接崩溃系统，导致同系统的其他服务和软件同时停止运行。</p>\n<h2 id=\"2、选择哪个虚拟机软件\"><a href=\"#2、选择哪个虚拟机软件\" class=\"headerlink\" title=\"2、选择哪个虚拟机软件\"></a>2、选择哪个虚拟机软件</h2><p>​        现在windows操作系统上的主流虚拟机软件有VMware公司的<a href=\"https://www.vmware.com/\">VMware WorkStation Pro</a>（收费软件）以及其简化免费版（VMware Player），由Oracle从Sun公司收购的开源免费软件<a href=\"https://www.virtualbox.org/\">Virtual Box</a>，微软的Windows Virtual PC（收费）。</p>\n<p>​        我在这里会使用（也建议使用）Virtual Box， Virtual Box操作简单而且功能强大，完全可以满足我们对linux学习的所有需求。</p>\n<h1 id=\"三、Oracle-Virtual-Box的下载和安装\"><a href=\"#三、Oracle-Virtual-Box的下载和安装\" class=\"headerlink\" title=\"三、Oracle Virtual Box的下载和安装\"></a>三、Oracle Virtual Box的下载和安装</h1><h2 id=\"1、下载安装包\"><a href=\"#1、下载安装包\" class=\"headerlink\" title=\"1、下载安装包\"></a>1、下载安装包</h2><ul>\n<li>进入官网点击以下链接</li>\n</ul>\n<p><a href=\"https://www.virtualbox.org/\">官网链接</a></p>\n<p>​        然后，你会看到以下页面</p>\n<p><img src=\"https://raw.githubusercontent.com/ryjer/imgbed/master/images/20210723112320-ac9b44e47c0d6fd0da0940be97265d1f-3e87c586.png\" alt=\"VirtualBox 下载页\"></p>\n<ul>\n<li>点击中间蓝色的 <code>Download Virtual Box 6.1</code> 按钮，或者直接点击以下链接</li>\n</ul>\n<p><a href=\"https://www.virtualbox.org/wiki/Downloads\">下载页面</a></p>\n<p>​        然后，你会看到以下页面</p>\n<p><img src=\"https://raw.githubusercontent.com/ryjer/imgbed/master/images/20210723112630-00e5010e0bf9e5ccd318113095a57aea-3901b555.png\" alt=\"windows安装包下载\"></p>\n<ul>\n<li><p>点击图中红色箭头所指的<strong>Windows hosts</strong>，下载windows平台的Oracle Virtual Box软件。下面几个分别是苹果OS X，linux和Solaris操作系统上的安装包下载链接。Edge 浏览器的下载如下</p>\n<p><img src=\"https://raw.githubusercontent.com/ryjer/imgbed/master/images/20210723112829-d14d79556866aa29c47a9226affa4acd-b8564ba5.png\" alt=\"下载中\"></p>\n</li>\n<li><p>最终，你会在下载文件夹得到一个安装文件。Edge浏览器下载后默认放到如下位置。我这里的版本是 6.1.24，随着软件的更新你的可能会有所不同。</p>\n</li>\n</ul>\n<p><img src=\"https://raw.githubusercontent.com/ryjer/imgbed/master/images/20210723113334-cd85654d5b00827b89ce4d7979708dee-74756fd2.png\" alt=\"image-20210723113332748\"></p>\n<h2 id=\"2、安装Virtual-Box\"><a href=\"#2、安装Virtual-Box\" class=\"headerlink\" title=\"2、安装Virtual Box\"></a>2、安装Virtual Box</h2><ul>\n<li>双击安装文件，启动安装</li>\n</ul>\n<p>​        对于某些启动了安全控制的系统来说，可能会出现以下画面</p>\n<p><img src=\"https://raw.githubusercontent.com/ryjer/imgbed/master/images/20210304221808.png\" alt=\"image-20210304221807205\"></p>\n<p>​        如果出现图中的警告，点击图中箭头所指的<strong>运行</strong></p>\n<ul>\n<li>开始安装，点击图中的<strong>下一步</strong></li>\n</ul>\n<p><img src=\"https://raw.githubusercontent.com/ryjer/imgbed/master/images/20210723113525-05c6d4f21cb7ba618f1157061141c66d-7b861d2e.png\" alt=\"image-20210723113522556\"></p>\n<ul>\n<li>选择<strong>功能</strong>和<strong>安装位置</strong>，这里使用默认设置，直接<strong>下一步</strong>。我这里之前已经安装过了，所以右面的空间占用很小</li>\n</ul>\n<p><img src=\"https://raw.githubusercontent.com/ryjer/imgbed/master/images/20210723113655-70a4f0f74c74c9866ae33d406c9f1e5b-069ed32e.png\" alt=\"image-20210723113653355\"></p>\n<ul>\n<li>选择链接选项，这里使用默认的<strong>全选</strong>，<strong>下一步</strong></li>\n</ul>\n<p><img src=\"https://raw.githubusercontent.com/ryjer/imgbed/master/images/20210723113837-d75cc042cfa4da514f1a5dc42d2c1564-59a2a57f.png\" alt=\"image-20210723113835619\"></p>\n<ul>\n<li>接下来是确认界面，警告会中断网络。这里我没什么重要的网络依赖工作，不理会，选择<strong>是</strong>，大概会断网1秒</li>\n</ul>\n<p><img src=\"https://raw.githubusercontent.com/ryjer/imgbed/master/images/20210723114013-4581611bbc570a254968f69dd3750bea-e8cb261e.png\" alt=\"image-20210723114011484\"></p>\n<ul>\n<li>然后点击<strong>安装</strong></li>\n</ul>\n<p><img src=\"https://raw.githubusercontent.com/ryjer/imgbed/master/images/20210723114115-0fca13646e9225ae6f904c189f24a30b-c6368b86.png\" alt=\"确认安装\"></p>\n<ul>\n<li><p>然后，系统会出现<strong>用户账号控制</strong>，在这里选择<strong>允许</strong>。然后你会看到如下窗口</p>\n<p><img src=\"https://raw.githubusercontent.com/ryjer/imgbed/master/images/20210723114403-e92ed64466df78bd6929ce5a13bf1f79-09670a2a.png\" alt=\"image-20210723114402011\"></p>\n</li>\n<li><p>接着，安装开始。一般20秒内可以完成，一分钟内也算正常。若超过一分钟可能需要注意。</p>\n</li>\n</ul>\n<p><img src=\"https://raw.githubusercontent.com/ryjer/imgbed/master/images/20210723114457-dee5fd49eb1726c487d45fbf8eaf2f89-2a352030.png\" alt=\"image-20210723114454531\"></p>\n<ul>\n<li>显示以上界面就表示安装完成了，点击<strong>完成</strong>结束安装。</li>\n</ul>\n<h1 id=\"四、Virtual-Box的使用\"><a href=\"#四、Virtual-Box的使用\" class=\"headerlink\" title=\"四、Virtual Box的使用\"></a>四、Virtual Box的使用</h1><h2 id=\"1、打开Virtual-Box\"><a href=\"#1、打开Virtual-Box\" class=\"headerlink\" title=\"1、打开Virtual Box\"></a>1、打开Virtual Box</h2><p>​        双击桌面的 Virtual Box图标，打开Virtual Box。其界面如下，非常简洁。这里我已经安装了两个虚拟机了，所以界面中红框圈起来的部分你应该没有，请你暂时忽略。</p>\n<p><img src=\"https://raw.githubusercontent.com/ryjer/imgbed/master/images/20210723115255-e858c89efb3d400f704d601a24a9c0d2-cbcc4da3.png\" alt=\"image-20210723115252495\"></p>\n","categories":["Linux"],"tags":["linux","centos","debian","操作系统","virtual box"]},{"title":"DiskImage磁盘镜像工具下载使用手册","url":"/posts/a1b6b4e50c.html","content":"<blockquote>\n<p>DiskImage 全称是 <strong>Roadkil’s DiskImage</strong> ，是由 Roadkil 开发的工具软件。用于将磁盘镜像写入磁盘或从磁盘创建镜像。</p>\n<p>但在实际使用中，则是广泛应用于各种刷机。比如软路由、NAS等系统的镜像写入安装</p>\n</blockquote>\n<span id=\"more\"></span>\n\n<p>永久链接：<a href=\"http://blog.ryjer.com/posts/a1b6b4e50c.html\">http://blog.ryjer.com/posts/a1b6b4e50c.html</a></p>\n<h1 id=\"1-介绍\"><a href=\"#1-介绍\" class=\"headerlink\" title=\"1. 介绍\"></a>1. 介绍</h1><p>DiskImage 全称是 <strong>Roadkil’s DiskImage</strong> ，是由 Roadkil 开发的工具软件，本身提供了安装版和独立运行版两个版本。但很明显，独立运行版更加简便实用。你可以从<a href=\"https://roadkil.net/\">Roadkil 的网站</a>上获取两个版本的文件。</p>\n<p>与另一个磁盘镜像刷新工具physdiskwrite相同，DiskImage独立版不依赖于任何 windows 库，因而可以在Windows PE这样的精简版（残缺版） windows 中正常运行。例如 WePE、老毛桃等 windows PE 工具系统。非常适合应用于软路由等的系统刷机。</p>\n<h1 id=\"2-下载\"><a href=\"#2-下载\" class=\"headerlink\" title=\"2. 下载\"></a>2. 下载</h1><p>Roadkil 的网站是一个 PHP 动态网站，所以这里无法直接给出下载页面。你可以到<a href=\"https://roadkil.net/\">Roadkil 的网站</a>寻找下载页面，现在的下载页面是（[Roadkil.Net - Roadkil’s Disk Image Program Download](<a href=\"https://roadkil.net/program.php/P12/Disk\">https://roadkil.net/program.php/P12/Disk</a> Image)）。你可以试试，这个页面如下。点击红色箭头所指的按钮即可下载</p>\n<p><img src=\"https://raw.githubusercontent.com/ryjer/imgbed/master/images/20210721211620-a6068b9ea5d875ae7c76c761a1b2be06-7e721685.png\" alt=\"DiskImage 下载页面\"></p>\n<p>我提前下载了最新的独立版本。并准备了 BT下载方式，在其中还附带了一个汉化版。对了，<strong>不要使用迅雷下载</strong></p>\n<p><a href=\"http://blog-file.webcdn.top/torrents/DiskImage_v1.6_WinAll.zip.torrent\">DiskImage BT 下载</a></p>\n<p><a href=\"magnet:?xt=urn:btih:S4EH2E2JZB7RF3LUFFQONF6LHQSVF3QD&dn=DiskImage_v1.6_WinAll.zip\">DiskImage 磁链链接</a></p>\n<p>下载下来的是一个压缩包，文件名是 <code>DiskImage_v1.6_WinAll.zip</code>，如下图所示</p>\n<p><img src=\"https://raw.githubusercontent.com/ryjer/imgbed/master/images/20210722002806-2072a05eb2261ab7454292404bcdea4e-8a75ca22.png\" alt=\"diskimage\"></p>\n<p>解压压缩包后打开，内部如下。上面的是原版，英文界面。下面的是由Mxso汉化后的版本，中文界面。</p>\n<p><img src=\"https://raw.githubusercontent.com/ryjer/imgbed/master/images/20210722002523-1adb9b81d4ad8b97e87e273a4652c59a-df184039.png\" alt=\"diskimage v1.6\"></p>\n<h1 id=\"3-使用说明\"><a href=\"#3-使用说明\" class=\"headerlink\" title=\"3. 使用说明\"></a>3. 使用说明</h1><h2 id=\"3-1-放入-diskimage-v1-6-WinAll-Mxso汉化-exe-和-镜像文件\"><a href=\"#3-1-放入-diskimage-v1-6-WinAll-Mxso汉化-exe-和-镜像文件\" class=\"headerlink\" title=\"3.1 放入 diskimage_v1.6_WinAll_Mxso汉化.exe 和 镜像文件\"></a>3.1 放入 <code>diskimage_v1.6_WinAll_Mxso汉化.exe</code> 和 <code>镜像文件</code></h2><p>这里使用 微PE 系统刷写 Openwrt 镜像为例介绍。</p>\n<p>首先，将 <code>diskimage_v1.6_WinAll_Mxso汉化.exe</code>（你可以从上面的bt或磁力链接中下载到） 和你要写入的镜像文件 （我的是<code>openwrt-x86-64-generic-squashfs-combined-efi.img</code>） 放入WePE U盘的数据分区。一般他的名字是 <code>微PE工具箱</code>，也可能是别的名字。但特征是这给盘是 <strong>空的</strong>，安装完 微PE 后打开这个盘，里面没有任何文件。</p>\n<p><img src=\"https://raw.githubusercontent.com/ryjer/imgbed/master/images/20210720235608-WePE.png\" alt=\"WePE 分区\"></p>\n<p>把 <strong>diskimage</strong> 和 准备写入的镜像放入这个盘内</p>\n<p><img src=\"https://raw.githubusercontent.com/ryjer/imgbed/master/images/20210722002144-b7f62bfab8d67926f989f30d8c93df06-b3ea9a3d.png\" alt=\"openwrt 刷写\"></p>\n<h2 id=\"3-2-使用-微PE-启动软路由\"><a href=\"#3-2-使用-微PE-启动软路由\" class=\"headerlink\" title=\"3.2 使用 微PE 启动软路由\"></a>3.2 使用 微PE 启动软路由</h2><p>弹出 微PE U盘，插入软路由 USB 接口中。再将电源、鼠标、键盘、显示器（别忘了显示器，我们需要操作window PE 系统）设备连接好。</p>\n<p>按下电源键开机，如果你软路由的内存固态硬盘已经安装过系统了，请进入BIOS 或 启动菜单，将U盘设定为第一启动项。</p>\n<p>然后就会以U盘内的 window PE 系统启动了，启动之后桌面如下</p>\n<p><img src=\"https://raw.githubusercontent.com/ryjer/imgbed/master/images/20210722220057-cc4644de7125c43c56068bc0c8967b0d-995eda00.png\" alt=\"微PE桌面\"></p>\n<h2 id=\"3-3-清除目标磁盘分区\"><a href=\"#3-3-清除目标磁盘分区\" class=\"headerlink\" title=\"3.3 清除目标磁盘分区\"></a>3.3 清除目标磁盘分区</h2><blockquote>\n<p>提示：这不是必要步骤，但不清理残余的目标磁盘分区则有可能导致刷写完的镜像无法正常工作。所以，这里还是建议删除目标磁盘上的所有分区。</p>\n</blockquote>\n<p>打开上图<strong>红框</strong>标示的 <code>分区工具 DiskGenius</code>，在左侧选中目标磁盘（这里是 Virtual Box 虚拟机内的截图），右键菜单选择 <code>删除所有分区(A)</code>。</p>\n<p><img src=\"https://raw.githubusercontent.com/ryjer/imgbed/master/images/20210721003914-WePE-diskgenius.png\" alt=\"删除所有分区\"></p>\n<p>然后确认</p>\n<p><img src=\"https://raw.githubusercontent.com/ryjer/imgbed/master/images/20210721004147-WePE-diskgenius.png\" alt=\"确认删除分区\"></p>\n<p>确认后，会“模拟”清除所有分区。其结果应当如下图所示，绿框中应当显示为 <strong>空闲</strong></p>\n<p><img src=\"https://raw.githubusercontent.com/ryjer/imgbed/master/images/20210721004453-WePE-diskgenius.png\" alt=\"删除分区结果\"></p>\n<p>到这里，都是模拟结果。你需要点击上图左上方红框所示的 <code>保存更改</code> 按钮，才能<strong>真正</strong>将模拟执行的结果保存。即真正删除所有分区。</p>\n<p><img src=\"https://raw.githubusercontent.com/ryjer/imgbed/master/images/20210721004845-WePE-diskgenius.png\" alt=\"确认保存\"></p>\n<p>点击 <code>是</code> 后，完成结果保存。退出 DiskGenius</p>\n<h2 id=\"3-4-写入镜像\"><a href=\"#3-4-写入镜像\" class=\"headerlink\" title=\"3.4 写入镜像\"></a>3.4 写入镜像</h2><p>进入 <code>我的电脑</code> &gt; <code>数据盘</code>，打开后其内部如下。双击运行 <code>diskimage_v1.6_WinAll_Mxso汉化.exe</code></p>\n<p><img src=\"https://raw.githubusercontent.com/ryjer/imgbed/master/images/20210722003638-9c4973f65ea4523d620c47b11a0f5c0f-a01320c9.png\" alt=\"image-20210722003631369\"></p>\n<p>第一次运行会弹出如下图所示的许可协议，这是一个<strong>自由软件</strong>，大家点击 <code>Yes</code> 同意即可</p>\n<p><img src=\"https://raw.githubusercontent.com/ryjer/imgbed/master/images/20210722003848-d90e02b41ee5d1f741ff2ac3b7a64d39-a5ed3adf.png\" alt=\"License\"></p>\n<p>打开后界面如下，先点击下图中红色箭头所指的按键，选择一个驱动器。这里必须选择 物理驱动器，也就是下图中以 <strong>Physical Disk</strong> 开头的。我这里选择 <code>Physical Disk 2 (57.28GB)</code>。</p>\n<p><img src=\"https://raw.githubusercontent.com/ryjer/imgbed/master/images/20210722004337-0ae9fe199ca126bf015568e23bc50400-7180eac6.png\" alt=\"image-20210722004334220\"></p>\n<p>然后点击 <code>浏览</code> 按键，选择我们的镜像文件</p>\n<p><img src=\"https://raw.githubusercontent.com/ryjer/imgbed/master/images/20210722004817-09f1edf5f7135ae2ce678d4cc1cafccf-4b0e62fc.png\" alt=\"image-20210722004814956\"></p>\n<p><img src=\"https://raw.githubusercontent.com/ryjer/imgbed/master/images/20210722005012-a158cecb42b213be48d0fa9e9a6f22a1-1634f3ab.png\" alt=\"image-20210722005009348\"></p>\n<p>然后点击右下角的 <code>开始</code></p>\n<p><img src=\"https://raw.githubusercontent.com/ryjer/imgbed/master/images/20210722005233-d07244169fb8d3cc4ac4a4f81bb72a73-d0cd527f.png\" alt=\"开始写入\"></p>\n<p>接下来会弹出一个数据丢失警告，询问是否要继续。选择 <code>是(Y)</code>继续写入</p>\n<p><img src=\"https://raw.githubusercontent.com/ryjer/imgbed/master/images/20210722005525-108e052aa4877e35e1ba6f7bfaed7799-2c0fcaf6.png\" alt=\"image-20210722005520595\"></p>\n<p>然后就会开始写入了，静待完成。当 DiskImage 上的进度条显示为 <code>100%</code> 后，就表示写入完成了。</p>\n","categories":["磁盘镜像"],"tags":["phydiskwrite","diskimage","磁盘镜像","刷机","windows","软路由","openwrt"]},{"title":"Windows10安装Hexo博客框架","url":"/posts/a19d9eef0e.html","content":"<blockquote>\n<p><strong>Hexo</strong> 是最为流行的几个静态博客框架之一，其由前端语言JavaScript后端化的 Node.js 驱动。将使用 markdown 等格式编写的文章转换为 Html 网页。这些网页即可由 web 服务器驱动成为网站。</p>\n</blockquote>\n<span id=\"more\"></span>\n\n<p>永久链接: <a href=\"http://blog.ryjer.com/posts/a19d9eef0e.html\">http://blog.ryjer.com/posts/a19d9eef0e.html</a></p>\n<h1 id=\"1-安装-node-js\"><a href=\"#1-安装-node-js\" class=\"headerlink\" title=\"1. 安装 node.js\"></a>1. 安装 node.js</h1><p>下载页 <a href=\"https://nodejs.org/zh-cn/download/\">下载 | Node.js (nodejs.org)</a></p>\n<p>这里选择<strong>长期支持版（LTS）</strong>，鼠标点击下图红色箭头所示的位置下载安装包</p>\n<p><img src=\"https://raw.githubusercontent.com/ryjer/imgbed/master/images/20210713000748-nodejs-lts-download.png\" alt=\"nodejs-lts下载\"></p>\n<p>下载完毕后，打开安装包。一路 <strong>Next</strong> 完成安装。</p>\n<p>安装完成后，使用<strong>管理员权限</strong>打开 <strong>Power Shell</strong>。这里使用管理员权限是因为接下来要进行全局安装。</p>\n<p>可以使用 Win10 任务栏的搜索栏功能，搜索 <code>Power Shell</code>。然后如下图所示，以管理员身份运行</p>\n<p><img src=\"https://raw.githubusercontent.com/ryjer/imgbed/master/images/20210713001252-powershell-admin.png\" alt=\"管理员权限打开 Power Shell\"></p>\n<p>当你打开的窗口有如下<strong>管理员</strong>标志时，说明是以管理员权限打开的 Power Shell</p>\n<p><img src=\"https://raw.githubusercontent.com/ryjer/imgbed/master/images/20210713001939.png\" alt=\"nodejs安装验证\"></p>\n<p>接下来，输入 <code>node -v</code> 命令查看 node.js 版本。如果有上图所示结果，说明 node.js 安装成功</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">node -v</span><br></pre></td></tr></table></figure>\n\n<p>同理，使用 <code>npm -v</code> 命令查看 npm 版本，npm工具是 node.js 自带的包管理器。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">npm -v</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"2-安装-cnpm\"><a href=\"#2-安装-cnpm\" class=\"headerlink\" title=\"2. 安装 cnpm\"></a>2. 安装 cnpm</h1><p>npm 默认的源地址位于国外，访问速度较慢。但是淘宝提供了npm的加速源和对应使用加速源的命令工具 <code>cnpm</code>。可以使用以下命令安装 cnpm。（-g 全局安装，–registry=<a href=\"https://registry.npm.taobao.org/\">https://registry.npm.taobao.org</a> 指定安装地址）</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">npm install -g cnpm --registry=https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"3-安装hexo博客\"><a href=\"#3-安装hexo博客\" class=\"headerlink\" title=\"3. 安装hexo博客\"></a>3. 安装hexo博客</h1><p>接下来的安装过程可以参考官网文档 <a href=\"https://hexo.io/zh-cn/docs/#%E5%AE%89%E8%A3%85-Hexo\">Hexo 官网文档</a>，只是将 npm 换成了 cnpm</p>\n<p>我们可以使用 cnpm 安装 hexo 博客，对应的软件包名为 <code>hexo-cli</code> 而不是 hexo。这里使用 <code>-g</code> 参数进行全局安装，不使用这个的话会进行局部安装，只安装到当前目录下，只建议足够熟悉nodejs 和 npm 后才使用局部安装。这里建议进行全局安装：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">cnpm install -g hexo-cli</span><br></pre></td></tr></table></figure>\n\n<p>这样，hexo 博客就安装完成了，你可以使用如下命令验证以下</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo -v</span><br></pre></td></tr></table></figure>\n\n<p>它应该会显示类似（但不一定相同，尤其是版本号不会相同）的结果</p>\n<p><img src=\"https://raw.githubusercontent.com/ryjer/imgbed/master/images/20210713003100-hexo-v.png\" alt=\"hexo -v 结果\"></p>\n<p>这就表明 hexo 全局安装完成了。</p>\n<p>要想使用hexo，你还需要安装 git。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">PS D:\\hexo&gt; hexo init</span><br><span class=\"line\">INFO  Cloning hexo-starter https://github.com/hexojs/hexo-starter.git</span><br><span class=\"line\">\u001b[32mINFO \u001b[39m Install dependencies</span><br><span class=\"line\">added 187 packages from 159 contributors <span class=\"keyword\">in</span> 3.445s</span><br><span class=\"line\"></span><br><span class=\"line\">15 packages are looking <span class=\"keyword\">for</span> funding</span><br><span class=\"line\">  run `npm fund` <span class=\"keyword\">for</span> details</span><br><span class=\"line\"></span><br><span class=\"line\">INFO  Start blogging with Hexo!</span><br><span class=\"line\">PS D:\\hexo&gt;</span><br></pre></td></tr></table></figure>\n\n","categories":["博客","Hexo"],"tags":["windows","hexo","博客","node"]},{"title":"debian、centos与rockylinux更改默认文字编码（语言），以改为utf8中文编码为例","url":"/posts/a1954f37dc.html","content":"<blockquote>\n<p>有时我们需要修改Linux系统的默认语言，特别是在安装系统时使用了默认语言或者安装后希望更改语言的情况。而不同的Linux发行版对此有着不同的管理机制。</p>\n</blockquote>\n<span id=\"more\"></span>\n\n<p>原文链接: <a href=\"http://blog.ryjer.com/posts/a15954f37dc.html\">http://blog.ryjer.com/posts/a1954f37dc.html</a></p>\n<h1 id=\"0-快捷指令\"><a href=\"#0-快捷指令\" class=\"headerlink\" title=\"0. 快捷指令\"></a>0. 快捷指令</h1><p><strong>localectl</strong> 设置中文环境 <code>zh_CN.utf8</code></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">localectl set-locale LANG=zh_CN.utf8 </span><br></pre></td></tr></table></figure>\n\n<p>然后重启，就能生效了。如果不想重启可以看下面</p>\n<p>debian系可以使用 <code>dpkg-reconfigure</code> 来重新配置 locale 包的配置，使用以下命令配置系统语言</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo dpkg-reconfigure locales</span><br></pre></td></tr></table></figure>\n\n<p>当然，这也需要重启才能生效。</p>\n<h1 id=\"1-locale\"><a href=\"#1-locale\" class=\"headerlink\" title=\"1. locale\"></a>1. locale</h1><p><code>locale</code> 中文翻译的意思是 <code>地区</code>或<code>地域</code>。其机制可以参考这篇文章 <a href=\"https://www.cnblogs.com/dolphi/p/3622439.html\">locale 详解 - 欢乐的程序员 - 博客园 (cnblogs.com)</a>。不过我们这里只需要知道本地化中文需要配置locale为中文对应的<code>字符集</code>就行了。</p>\n<p>如果你要手动进行配置的话，需要设定12个大类的locale分类属性：</p>\n<blockquote>\n<ol>\n<li>语言符号及其分类 (LC_CTYPE) </li>\n<li>数字(LC_NUMERIC)</li>\n<li>比较和排序习惯(LC_COLLATE) </li>\n<li>时间显示格式(LC_TIME) </li>\n<li>货币 单位(LC_MONETARY) </li>\n<li>信息主要是提示信息,错误信息, 状态信息, 标题, 标签, 按钮和菜单等(LC_MESSAGES) </li>\n<li>姓名 书写方式(LC_NAME) </li>\n<li>地址书写方式(LC_ADDRESS) </li>\n<li>电话号码书写方式(LC_TELEPHONE) </li>\n<li>度量衡表达方式 (LC_MEASUREMENT) </li>\n<li>默认纸张尺寸大小(LC_PAPER) </li>\n<li>对locale自身包含信息的概述 (LC_IDENTIFICATION)<br>不过这12个的组合通常通常是固定的几组，而一般的发行版往往会提供对应的工具进行快捷的设置，比如<code>localectl</code> 。该命令在红帽系和debian系的发行版中都会提供</li>\n</ol>\n</blockquote>\n<h1 id=\"2-localectl\"><a href=\"#2-localectl\" class=\"headerlink\" title=\"2. localectl\"></a>2. localectl</h1><p>注：rocky8已验证</p>\n<h2 id=\"2-1-查看-localectl-安装状态\"><a href=\"#2-1-查看-localectl-安装状态\" class=\"headerlink\" title=\"2.1 查看 localectl 安装状态\"></a>2.1 查看 localectl 安装状态</h2><p>通常，红帽系发行版（redhat、centos、rockylinux等）和debian系发行版都会默认安装该命令。你可以使用 <code>type localectl</code> 查看以下该命令是否安装。如果没有你需要手动安装</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@rocky8-5 ~]<span class=\"comment\"># type localectl</span></span><br><span class=\"line\">localectl 已被录入哈希表 (/usr/bin/localectl)</span><br></pre></td></tr></table></figure>\n\n<p>如果你的系统默认语言是英文，那么结果应当如下</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@rocky8-5 ~]<span class=\"comment\"># type localectl</span></span><br><span class=\"line\">localectl is hashed (/usr/bin/localectl)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"2-2-查看当前系统语言设置\"><a href=\"#2-2-查看当前系统语言设置\" class=\"headerlink\" title=\"2.2 查看当前系统语言设置\"></a>2.2 查看当前系统语言设置</h2><p>你可以使用命令 <code>localectl status</code> 查看当前的系统语言设置，我这里是 <code>zh_CN.UTF-8</code>。这里还会显示键盘布局等相关信息</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># localectl status </span></span><br><span class=\"line\">   System Locale: LANG=zh_CN.UTF-8</span><br><span class=\"line\">       VC Keymap: cn</span><br><span class=\"line\">      X11 Layout: cn</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"2-3-设置系统语言\"><a href=\"#2-3-设置系统语言\" class=\"headerlink\" title=\"2.3 设置系统语言\"></a>2.3 设置系统语言</h2><p>通常系统安装时会自动安装语言包（但不一定安装字符包），你可以直接使用以下命令设置系统语言为中文<code>zh_CN.utf8</code></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">localectl set-locale LANG=zh_CN.utf8</span><br></pre></td></tr></table></figure>\n\n<p>或者设置为英文<code>en_US.utf8</code></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">localectl set-locale LANG=en_US.utf8</span><br></pre></td></tr></table></figure>\n\n<p>如果系统提示没有对应的语言包，你可以使用命令安装对应语言包。比如中文包</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># rhel8 系列使用dnf安装</span></span><br><span class=\"line\">sudo dnf install langpacks-zh_CN -y</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"2-4-生效\"><a href=\"#2-4-生效\" class=\"headerlink\" title=\"2.4 生效\"></a>2.4 生效</h2><p>运行完以上命令后系统语言并不会立即改变，你可以<strong>重启</strong>后使该配置生效。</p>\n<p>或者使用以下命令手动加载配置文件，使配置文件被加载到内存中去。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">. /etc/locale.conf</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"3-dpkg-reconfigure-设置系统语言\"><a href=\"#3-dpkg-reconfigure-设置系统语言\" class=\"headerlink\" title=\"3. dpkg-reconfigure 设置系统语言\"></a>3. dpkg-reconfigure 设置系统语言</h1><p>注：debian 10 已验证</p>\n<p>不过debian系通常使用 <code>dpkg-reconfigure</code> 来配置语言，该命令是用来重新配置软件包的命令，运行该命令可以重新配置软件包第一次安装后的配置问题。</p>\n<h2 id=\"3-1-安装-locales-软件包\"><a href=\"#3-1-安装-locales-软件包\" class=\"headerlink\" title=\"3.1 安装 locales 软件包\"></a>3.1 安装 locales 软件包</h2><p>这里需要先安装 <code>locales</code> 软件包（不是 <code>locale</code>）</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo apt-get install locales</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"3-2-安装并选择系统语言\"><a href=\"#3-2-安装并选择系统语言\" class=\"headerlink\" title=\"3.2 安装并选择系统语言\"></a>3.2 安装并选择系统语言</h2><p>当使用该命令配置 <code>locales</code> 软件包时，便可以用来配置系统语言</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">dpkg-reconfigure locales</span><br></pre></td></tr></table></figure>\n\n<p>该命令会打开一个命令行的 <code>窗口</code> 让你选择需要<strong>安装</strong>的语言包，你可以使用上线键移动，并使用<code>空格</code>进行选择。</p>\n<p>选择完成后，回车确定。然后再次使用<code>空格</code> <strong>设置</strong> 系统语言。</p>\n<h2 id=\"3-3-重启生效\"><a href=\"#3-3-重启生效\" class=\"headerlink\" title=\"3.3 重启生效\"></a>3.3 重启生效</h2><p>根据 Debian 官方 wiki 的说法，配置完成后需要重启才能生效。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo reboot</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h1><p><a href=\"https://www.cnblogs.com/dolphi/p/3622439.html\">locale 详解 - 欢乐的程序员</a></p>\n<p><a href=\"https://blog.csdn.net/Love__sea/article/details/121233162\">CentOS 8修改系统语言为中文_海蓝的博客</a></p>\n<p><a href=\"https://wiki.debian.org/ChangeLanguage\">ChangeLanguage - Debian Wiki</a></p>\n","categories":["Linux"],"tags":["linux","操作系统","语言","中文","字符编码"]},{"title":"Windows10系统下openjdk-11环境（java）的安装配置","url":"/posts/a1e90bd6cc.html","content":"<blockquote>\n<p>JDK有各种版本，目前最新的版本是 Java se 17 或者说是 jdk 17。但现在只有 java 8 和 java 11（或者说 jdk 8 和 jdk 11）是<strong>长期支持版本 （LTS 版本）</strong>。java目前主要应用于企业开发中，企业开发最注重的就是<strong>稳定性</strong>。因此往往选择长期支持版本，以至于目前仍有接近半数企业依然在使用 java 8</p>\n<p>因此，搭建 java 开发环境依然建议使用使用<strong>LTS</strong> 版本以便与生产环境对接</p>\n</blockquote>\n<span id=\"more\"></span>\n\n<p>原文链接: <a href=\"http://blog.ryjer.com/posts/a1e90bd6cc.html\">http://blog.ryjer.com/posts/a1e90bd6cc.html</a></p>\n<h1 id=\"1、openjdk-版本介绍\"><a href=\"#1、openjdk-版本介绍\" class=\"headerlink\" title=\"1、openjdk 版本介绍\"></a>1、openjdk 版本介绍</h1><p>1、版本选择：</p>\n<p>JDK有各种版本，目前最新的版本是 Java se 17 或者说是 jdk 17。但现在只有 java 8 和 java 11（或者说 jdk 8 和 jdk 11）是<strong>长期支持版本 （LTS 版本）</strong>。java目前主要应用于企业开发中，企业开发最注重的就是<strong>稳定性</strong>。因此往往选择长期支持版本，以至于目前仍有超过半数企业依然在使用 java 8。</p>\n<p>因此，在这里建议选择<strong>长期支持版本</strong> java 8 或 java 11，他们往往也被称为 jdk 8 和 jdk 11。</p>\n<p>2、jdk 和 openjdk 的选择</p>\n<p>官方 jdk 11网址 <a href=\"https://www.oracle.com/cn/java/technologies/javase-jdk11-downloads.html\">Java SE Development Kit 11 Downloads</a></p>\n<p>官方 openjdk 网址 <a href=\"http://jdk.java.net/\">JDK Builds from Oracle (java.net)</a>)</p>\n<p>其他选择：</p>\n<p>红帽 openjdk （RedHat openjdk）</p>\n<h1 id=\"2、下载\"><a href=\"#2、下载\" class=\"headerlink\" title=\"2、下载\"></a>2、下载</h1><p>建议先从官方的 openjdk 开始（ <a href=\"http://jdk.java.net/java-se-ri/11\">Java SE 11 下载页</a>），打开后页面如下，图中红色箭头所指为windows 下的 java se 11 压缩软件包（不是安装包）的下载链接。</p>\n<p><img src=\"https://raw.githubusercontent.com/ryjer/imgbed/master/images/java-se-11-ri_page.png\" alt=\"openjdk 11 官方下载页\"></p>\n<p>下载后会得到一个 zip 压缩包。没错，不是 exe 或者 msi 安装文件，其他版本的 <strong>jdk</strong> 可能是exe或msi安装包，但这个不是。</p>\n<p><img src=\"https://raw.githubusercontent.com/ryjer/imgbed/master/images/java-se-11_zip-package.png\" alt=\"java se 11 压缩包\"></p>\n<p>注意：根据 openjdk-11 版本的不同，你下载到的压缩包文件名也会有所不同</p>\n<h1 id=\"3、解压-复制到目标文件夹\"><a href=\"#3、解压-复制到目标文件夹\" class=\"headerlink\" title=\"3、解压 复制到目标文件夹\"></a>3、解压 复制到目标文件夹</h1><p>将其<strong>解压</strong>，得到同名文件夹  <code>openjdk-11+28_windows-x64_bin</code> 打开后内部有一个 <strong>jdk-11</strong> 文件夹，这个 <strong>jdk-11</strong> 文件夹就是包含完整 <strong>openjdk</strong> 包的目标文件夹了，其内部文件如下：</p>\n<p><img src=\"https://raw.githubusercontent.com/ryjer/imgbed/master/images/20210513205058.png\" alt=\"jdk-11文件夹内部\"></p>\n<p>接下来，将 <strong>jdk-11</strong> 文件夹复制到 <code>C:\\Program Files\\java</code> 路径下（你需要先创建 <strong>java</strong> 文件夹）。复制完后你的文件夹路径会像下面一样：</p>\n<p><img src=\"https://raw.githubusercontent.com/ryjer/imgbed/master/images/20210513205727.png\" alt=\"image-20210513205725050\"></p>\n<p>当然，你也可以选择其他路径。但我建议复制到此目录，以便未来通过该 java目录管理不同版本的jdk。你也可以复制到其他目录，但需要记住文件夹路径。接下来要用</p>\n<h1 id=\"4、配置环境变量\"><a href=\"#4、配置环境变量\" class=\"headerlink\" title=\"4、配置环境变量\"></a>4、配置环境变量</h1><p>java 命令工具都保存在 <strong>jdk-11</strong> 下的 <strong>bin</strong> 目录中，比如 javac 编译命令、java 运行命令、javadoc文档生成命令等（见下图）。因此，需要把该目录加入 <strong>Path</strong> 环境变量中以指导 Shell 在该文件夹中搜索对应工具。</p>\n<p><img src=\"https://raw.githubusercontent.com/ryjer/imgbed/master/images/20210513231116.png\" alt=\"jdk-11/bin\"></p>\n<h2 id=\"4-1-直接配置-Path-变量（不建议）\"><a href=\"#4-1-直接配置-Path-变量（不建议）\" class=\"headerlink\" title=\"4.1 直接配置 Path 变量（不建议）\"></a>4.1 直接配置 Path 变量（不建议）</h2><p>可以像下面这样直接将 jdk 的bin目录路径添加到 <strong>Path</strong> 环境变量中，这样各种jdk包可以正常使用。但一般建议间接引用方式（见4.2）</p>\n<p><img src=\"https://raw.githubusercontent.com/ryjer/imgbed/master/images/20210513232945.png\" alt=\"image-20210513232944093\"></p>\n<h2 id=\"4-2-通用-Path-变量配置（建议）\"><a href=\"#4-2-通用-Path-变量配置（建议）\" class=\"headerlink\" title=\"4.2 通用 Path 变量配置（建议）\"></a>4.2 通用 Path 变量配置（建议）</h2><p>通常，我们不是直接将bin文件夹（比如：C:\\Program Files\\java\\jdk-11\\bin）加入 Path 环境变量，因为有些java工具（比如免安装版的 Tomcat 服务器）需要一个名为 <strong>JAVA_HOME</strong> 的环境变量进行工作。JAVA_HOME 变量指明 jdk 文件夹的路径（比如对应上面的就是：C:\\Program Files\\java\\jdk-11），其内部如下图。二者独立意味着我们需要维护高度耦合的两个变量，在进行修改时一旦忘记修改其中一个就会导致java环境的异常。因此，建议通过引用 JAVA_HOME环境变量的方式添加 Path 变量路径。 </p>\n<p><img src=\"https://raw.githubusercontent.com/ryjer/imgbed/master/images/20210513205058.png\" alt=\"jdk-11文件夹内部\"></p>\n<p>因此，首先新建 <code>JAVA_HOME</code> 环境变量</p>\n<p><img src=\"https://raw.githubusercontent.com/ryjer/imgbed/master/images/20210513231929_JAVA_HOME.png\" alt=\"image-20210513231927764\"></p>\n<p>然后，在 <strong>Path</strong> 变量中引用 <code>JAVA_HOME</code> ，添加其下的 bin目录：添加 <code>%JAVA_HOME%\\bin</code> 变量</p>\n<p><img src=\"https://raw.githubusercontent.com/ryjer/imgbed/master/images/20210513232141_JAVA_HOME-bin.png\" alt=\"JAVA_HOME\\bin变量\"></p>\n<h1 id=\"5、测试\"><a href=\"#5、测试\" class=\"headerlink\" title=\"5、测试\"></a>5、测试</h1><p>到这里，理论上就可以使用java 工具了。但还需要测试一下</p>\n<p>打开cmd 或者 powershell，输入命令：<code>java -version</code>。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">java -version</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://raw.githubusercontent.com/ryjer/imgbed/master/images/20210513233854.png\" alt=\"java 命令测试\"></p>\n<p>如果有输出结果（可能与上图有细微差异）而不是报错，说明环境变量和安装正确。可以开始使用了</p>\n<h1 id=\"6、Tomcat-环境变量配置\"><a href=\"#6、Tomcat-环境变量配置\" class=\"headerlink\" title=\"6、Tomcat 环境变量配置\"></a>6、Tomcat 环境变量配置</h1><p>免安装版的Tomcat服务器运行时需要 <code>JAVA_HOME</code> 和 <code>JRE_HOME</code> 环境变量。上面已经配置好了 <strong>JAVA_HOME</strong>环境变量，所以还要配置 <strong>JRE_HOME</strong> 环境变量。</p>\n<h2 id=\"6-1-抽取-jre\"><a href=\"#6-1-抽取-jre\" class=\"headerlink\" title=\"6.1 抽取 jre\"></a>6.1 抽取 jre</h2><p><strong>JRE_HOME</strong> 所指定的路径为 <strong>java 运行时环境</strong> jre 的路径。jdk本身已经包含了jre，但与其他包混在一起，所以需要首先运行下面的命令抽取 jre 文件到 jdk-11目录下的 jre 目录中。（你也可以抽取到其他目录，但建议按照下面做）</p>\n<p>如果你喜欢的话，可以专门下载 jre，java官方同时也会提供 jre 的下载</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">jlink.exe --module-path jmods --add-modules java.desktop --output %JAVA_HOME%\\jre</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"6-2-添加-JRE-HOME-环境变量\"><a href=\"#6-2-添加-JRE-HOME-环境变量\" class=\"headerlink\" title=\"6.2 添加 JRE_HOME 环境变量\"></a>6.2 添加 JRE_HOME 环境变量</h2><p>在系统变量中添加 JRE_HOME 变量，我这里是 <code>C:\\Program Files\\java\\jdk-11\\jre</code></p>\n<p><img src=\"https://raw.githubusercontent.com/ryjer/imgbed/master/images/20210513235950.png\" alt=\"JRE_HOME\"></p>\n<p>注意：这里 JRE_HOME 不建议与 JAVA_HOME 耦合（比如下图中的 <code>%JAVA_HOME%\\jre</code>**），因为jre其实可以是单独而不依赖jdk的。因此建议使用绝对路径（如：<code>C:\\Program Files\\java\\jdk-11\\jre</code>）</p>\n<p><img src=\"https://raw.githubusercontent.com/ryjer/imgbed/master/images/20210514000334.png\" alt=\"image-20210514000332471\"></p>\n<h2 id=\"6-3-配置-Path-环境变量\"><a href=\"#6-3-配置-Path-环境变量\" class=\"headerlink\" title=\"6.3 配置 Path 环境变量\"></a>6.3 配置 Path 环境变量</h2><p>在 <strong>Path</strong> 变量中添加一条：<code>%JRE_HOME%</code></p>\n<p><img src=\"https://raw.githubusercontent.com/ryjer/imgbed/master/images/20210514000603_jre-path.png\" alt=\"JRE_HOME 路径\"></p>\n<p>接下来，tomcat 就可以启动运行了</p>\n","categories":["开发环境","java","java"],"tags":["windows","java","openjdk","开发环境"]},{"title":"acme.sh申请安装Let's-Encrypt免费泛域名ECC证书（阿里DNS）","url":"/posts/a1993e0126.html","content":"<blockquote>\n<p>现代的浏览器开始有将 https 访问作为默认访问方式的倾向，因此需要将网站配置为https 访问。</p>\n<p>Let’s Encrypt 组织提供免费的 TLS 加密证书，用于协助web服务器实现https协议。而 acme.sh 脚本便是可以实现从 Let’s Encrypt 自动化申请、续期 TLS 证书的强力工具。</p>\n</blockquote>\n<span id=\"more\"></span>\n\n<p>原文链接: <a href=\"http://blog.ryjer.com/posts/a1993e0126.html\">http://blog.ryjer.com/posts/a1993e0126.html</a></p>\n<p>Debian 10、OMV 5、CentOS、RHEL、Rocky和 SUSE 等服务器linux 发行版都适用。</p>\n<h1 id=\"1、目的\"><a href=\"#1、目的\" class=\"headerlink\" title=\"1、目的\"></a>1、目的</h1><p>使用 acme.sh 脚本为 web服务器（Nginx）申请 ECC TLS 证书，实现网站的 https 加密访问。</p>\n<h1 id=\"2、过程\"><a href=\"#2、过程\" class=\"headerlink\" title=\"2、过程\"></a>2、过程</h1><h2 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h2><p><a href=\"https://github.com/acmesh-official/acme.sh\">github acme.sh官方文档</a></p>\n<h2 id=\"1-安装-acme-sh\"><a href=\"#1-安装-acme-sh\" class=\"headerlink\" title=\"1. 安装 acme.sh\"></a>1. 安装 <strong>acme.sh</strong></h2><p>安装很简单, 一个命令。注意更改最后的<code>my@example.com</code>为你自己的邮箱</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">curl  https://get.acme.sh | sh -s email=my@example.com</span><br></pre></td></tr></table></figure>\n\n<p>官网的文档上说会自动创建一个 alias，但我这里没有效果。所以手动创建一个，方便接下来的命令使用</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">alias</span> acme.sh=~/.acme.sh/acme.sh</span><br></pre></td></tr></table></figure>\n\n<p>安装过程也会同时创建一个 <code>cron 定时任务</code>，可以使用 <code>crontab -l</code> 命令查看，会多出来如下的一行</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">32 0 * * * <span class=\"string\">&quot;/root/.acme.sh&quot;</span>/acme.sh --cron --home <span class=\"string\">&quot;/root/.acme.sh&quot;</span> &gt; /dev/null</span><br></pre></td></tr></table></figure>\n\n<p>这表示在每天 0:32 执行一次</p>\n<hr>\n<p>2021-08-07 更新</p>\n<p>acme.sh 官方宣布将在 2021-08-01 后将默认CA 证书申请机构从 Let’s Encrypt 转变为 ZeroSSL（估计是被收购了）。详情见 <a href=\"https://github.com/acmesh-official/acme.sh/wiki/Change-default-CA-to-ZeroSSL\">Change default CA to ZeroSSL · acmesh-official/acme.sh Wiki (github.com)</a></p>\n<p>ZeroSSL 也可以申请免费的 90天证书并自动续期，但是需要注册 ZeroSSL 的账号后才能使用。但是公告了提供了继续保持原有 CA 机构为 Let’s Encrypt 的方法，使用以下命令将默认CA （证书颁发机构）改为 Let’s Encrypt，且 acme 自动升级后仍将保存该默认设置</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">acme.sh --set-default-ca  --server  letsencrypt</span><br></pre></td></tr></table></figure>\n\n<p>如果你想改用 ZeroSSL的话，请参考这篇官方文档： <a href=\"https://github.com/acmesh-official/acme.sh/wiki/ZeroSSL.com-CA\">ZeroSSL.com CA · acmesh-official/acme.sh Wiki (github.com)</a></p>\n<hr>\n<h2 id=\"2-开启自动升级\"><a href=\"#2-开启自动升级\" class=\"headerlink\" title=\"2. 开启自动升级\"></a>2. 开启自动升级</h2><p>如果你不想手动升级, 可以开启自动升级，这样以后就不用再管了</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">acme.sh  --upgrade  --auto-upgrade</span><br></pre></td></tr></table></figure>\n\n<p>你也可以随时关闭自动更新</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">acme.sh --upgrade  --auto-upgrade  0</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"3-生成证书\"><a href=\"#3-生成证书\" class=\"headerlink\" title=\"3. 生成证书\"></a>3. 生成证书</h2><p>家用宽带是没有80端口的，所以选择使用 DNS服务商（我是阿里） 提供的 API 进行自动添加记录验证的方式申请。</p>\n<p>其他的DNS服务商可以参考这个页面 <a href=\"https://github.com/acmesh-official/acme.sh/wiki/dnsapi\">github acme.sh 官方dnsapi 参考文档</a></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">export</span> Ali_Key=<span class=\"string\">&quot;sdfsdfsdfljlbjkljlkjsdfoiwje&quot;</span></span><br><span class=\"line\"><span class=\"built_in\">export</span> Ali_Secret=<span class=\"string\">&quot;jlsdflanljkljlfdsaklkjflsa&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>然后，就可以使用以下命令申请域名了。这里假定域名是 <code>domain.com</code> 。这里第二个 -d 参数为 <code>*.domain.com</code>，表示申请一个泛域名证书。默认会申请 RSA算法 证书，我这里用 <code>-k ec-384</code> 参数改为申请 <strong>384位</strong> 的 ECC算法 证书。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">acme.sh --issue --dns dns_ali -d domain.com -d *.domain.com -k ec-384</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"4-copy-安装-证书\"><a href=\"#4-copy-安装-证书\" class=\"headerlink\" title=\"4. copy/安装 证书\"></a>4. copy/安装 证书</h2><p>生成的证书会存放在当前用户的 <code>~/.acme.sh</code> 文件夹内。由于acme.sh 脚本会不断更新，该文件夹内的布局也会不断改变。显然直接从该文件夹内拷贝证书出来是一种很不可靠的行为，因为你无法确定下一次证书所在的具体路径。</p>\n<p>因此，acme.sh专门提供了复制/安装证书的方法，并且不建议用户直接去 ~/.acme.sh 文件夹内复制证书使用。</p>\n<p>根据不同的web服务器，有不同的命令。最为常见的服务器是 <code>Apache httpd</code> 和 <code>Nginx</code>，我这里使用的是 <strong>Nginx</strong>，由于是ECC证书，需要额外的 <code>--ecc</code> 参数</p>\n<h3 id=\"Nginx-example\"><a href=\"#Nginx-example\" class=\"headerlink\" title=\"Nginx example:\"></a>Nginx example:</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">acme.sh --install-cert -d domain.com --ecc \\</span><br><span class=\"line\">--key-file       /etc/nginx/ssl/domain.com/domain.com.key  \\</span><br><span class=\"line\">--fullchain-file /etc/nginx/ssl/domain.com/fullchain.cer \\</span><br><span class=\"line\">--reloadcmd     <span class=\"string\">&quot;service nginx force-reload&quot;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"5-更新证书\"><a href=\"#5-更新证书\" class=\"headerlink\" title=\"5. 更新证书\"></a>5. 更新证书</h2><p>目前证书在 60 天以后会自动更新，你无需任何操作。今后有可能会缩短这个时间，不过都是自动的，你不用关心。</p>\n<p>当然，你也可以手动更新ECC证书</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">acme.sh --renew -d domain.com --force --ecc</span><br></pre></td></tr></table></figure>\n\n<p>如果不是ECC证书的话，不需要<code>--ecc</code>参数</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">acme.sh --renew -d domain.com --force</span><br></pre></td></tr></table></figure>\n\n<p>这些配置完后，就不用再管了，可以忘掉这些事了。</p>\n<p>提示：acme.sh 官方对申请证书的频率有限制，子域名好像每周最多4次。所以不要频繁乱申请！</p>\n<h2 id=\"6-吊销证书\"><a href=\"#6-吊销证书\" class=\"headerlink\" title=\"6. 吊销证书\"></a>6. 吊销证书</h2><p>如果运气不好，证书文件泄露了。你需要吊销当前的ECC证书，对应命令为</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">acme.sh --revoke -d domain.com --ecc</span><br></pre></td></tr></table></figure>\n\n<p>不是ECC证书则不需要 <code>--ecc</code>参数</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">acme.sh --revoke -d domain.com</span><br></pre></td></tr></table></figure>\n\n","categories":["基础","https","TLS","acme.sh"],"tags":["https","ecc","acme.sh","阿里云","Let's Encrypt"]},{"title":"physdiskwrite磁盘镜像工具下载使用手册","url":"/posts/a1544267b5.html","content":"<blockquote>\n<p><strong>physdiskwrite</strong> 是一个小型 windows 命令行工具。你可以使用该工具将 <strong>.img</strong> 格式的磁盘镜像文件写入物理磁盘。（注意：这回导致目标磁盘上绝大部分数据的丢失，请确认目标磁盘选择正确。）</p>\n<p>通过本工具，你可以便捷的完成需要写入磁盘镜像的刷机等操作。</p>\n</blockquote>\n<span id=\"more\"></span>\n\n<p>永久链接: <a href=\"http://blog.ryjer.com/posts/a1544267b5.html\">http://blog.ryjer.com/posts/a1544267b5.html</a></p>\n<h1 id=\"1-介绍\"><a href=\"#1-介绍\" class=\"headerlink\" title=\"1. 介绍\"></a>1. 介绍</h1><p><strong>physdiskwrite</strong> 是一个小型 windows 命令行工具。你可以使用该工具将 <strong>.img</strong> 格式的磁盘镜像文件写入物理磁盘。</p>\n<p>physdiskwrite 的一个特点是不依赖任何windows库，因而可以在Windows PE这样的精简版（残缺版） windows 中正常运行。例如 WePE、老毛桃等 windows PE 工具系统。</p>\n<h1 id=\"2-下载\"><a href=\"#2-下载\" class=\"headerlink\" title=\"2. 下载\"></a>2. 下载</h1><p>physdiskwrite 的下载官网是 <a href=\"https://m0n0.ch/wall/physdiskwrite.php\">m0n0wall - physdiskwrite</a>，其隶属于 m0n0wall 项目（一个防火墙），原本是为了将 m0n0wall 防火墙安装到嵌入式设备中而编写的。打开下载页面后，其页面如下</p>\n<p><img src=\"https://raw.githubusercontent.com/ryjer/imgbed/master/images/20210720234916-phydiskwrite-download.png\" alt=\"phydiskwrite 下载页\"></p>\n<p>点击<strong>红框</strong>内链接即可下载该命令行工具。你可能不知道什么是命令行，但这不影响接下来的使用，请放心</p>\n<p>如果你访问不了这个网站，我还准备了 Bt下载方式（见下面链接）。不过这个网站一般不会出什么问题，建议大家还是尽量去官网下载</p>\n<p><a href=\"https://m0n0.ch/wall/physdiskwrite.php\">m0n0wall - physdiskwrite 官网下载</a></p>\n<p><a href=\"http://blog-file.webcdn.top/torrents/physdiskwrite-0.5.3.zip.torrent\">physdiskwrite BT 下载</a></p>\n<p><a href=\"magnet:?xt=urn:btih:O6LDQY5LEBGGYKESOJ5TFO65HBP6XVYR&dn=physdiskwrite-0.5.3.zip\">physdiskwrite 磁力链接</a></p>\n<p>下载下来后是一个压缩包，文件名如下图</p>\n<p><img src=\"https://raw.githubusercontent.com/ryjer/imgbed/master/images/20210721114336848-WePE-diskgenius.png\" alt=\"phydiskwrite.zip\"></p>\n<p><strong>解压压缩包</strong>后<strong>打开文件夹</strong>，可见 <code>physdiskwrite.exe</code> 文件（如下图）。这就是我们要使用的工具本体（红框内所示）</p>\n<p><img src=\"https://raw.githubusercontent.com/ryjer/imgbed/master/images/20210720235409-phydiskwrite.png\" alt=\"image-20210720235409743\"></p>\n<p>把这个 <code>physdiskwrite.exe</code> 文件复制到 U盘等地方，就可以直接在 U盘或移动硬盘内打开使用了（必须是 windows 系统）</p>\n<h1 id=\"3-使用说明\"><a href=\"#3-使用说明\" class=\"headerlink\" title=\"3. 使用说明\"></a>3. 使用说明</h1><h2 id=\"3-1-放入-phydiskwrite-exe-和镜像文件\"><a href=\"#3-1-放入-phydiskwrite-exe-和镜像文件\" class=\"headerlink\" title=\"3.1 放入 phydiskwrite.exe 和镜像文件\"></a>3.1 放入 phydiskwrite.exe 和镜像文件</h2><p>这里使用 微PE 系统刷写 Openwrt 镜像为例介绍。</p>\n<p>首先，将 <code>phydiskwrite.exe</code> 和你要写入的镜像文件 （我的是<code>openwrt-x86-64-generic-squashfs-combined-efi.img</code>） 放入WePE U盘的数据分区。一般他的名字是 <code>微PE工具箱</code>，也可能是别的名字。但特征是这给盘是 <strong>空的</strong>，安装完微PE 后打开这个盘，里面没有任何文件。</p>\n<p><img src=\"https://raw.githubusercontent.com/ryjer/imgbed/master/images/20210720235608-WePE.png\" alt=\"WePE 分区\"></p>\n<p>把两个文件放入这个盘内，结果如下图</p>\n<p><img src=\"https://raw.githubusercontent.com/ryjer/imgbed/master/images/20210721001227-openwrt-install.png\" alt=\"openwrt 刷写文件\"></p>\n<h2 id=\"3-2-使用-微PE-启动软路由\"><a href=\"#3-2-使用-微PE-启动软路由\" class=\"headerlink\" title=\"3.2 使用 微PE 启动软路由\"></a>3.2 使用 微PE 启动软路由</h2><p>弹出 微PE U盘，插入软路由 USB 接口中。再将电源、鼠标、键盘、显示器（别忘了显示器，我们需要操作window PE 系统）设备连接好。</p>\n<p>按下电源键开机，如果你软路由的内存固态硬盘已经安装过系统了，请进入BIOS 或 启动菜单，将U盘设定为第一启动项。</p>\n<p>然后就会以U盘内的 window PE 系统启动了，启动之后桌面如下</p>\n<p><img src=\"https://raw.githubusercontent.com/ryjer/imgbed/master/images/20210722220057-cc4644de7125c43c56068bc0c8967b0d-995eda00.png\" alt=\"微PE桌面\"></p>\n<h2 id=\"3-3-清除目标磁盘分区\"><a href=\"#3-3-清除目标磁盘分区\" class=\"headerlink\" title=\"3.3 清除目标磁盘分区\"></a>3.3 清除目标磁盘分区</h2><blockquote>\n<p>提示：这不是必要步骤，但不清理残余的目标磁盘分区则有可能导致刷写完的镜像无法正常工作。所以，这里还是建议删除目标磁盘上的所有分区。</p>\n</blockquote>\n<p>打开上图<strong>红框</strong>标示的 <code>分区工具 DiskGenius</code>，在左侧选中目标磁盘（这里是 Virtual Box 虚拟机内的截图），右键菜单选择 <code>删除所有分区(A)</code>。</p>\n<p><img src=\"https://raw.githubusercontent.com/ryjer/imgbed/master/images/20210721003914-WePE-diskgenius.png\" alt=\"删除所有分区\"></p>\n<p>然后确认</p>\n<p><img src=\"https://raw.githubusercontent.com/ryjer/imgbed/master/images/20210721004147-WePE-diskgenius.png\" alt=\"确认删除分区\"></p>\n<p>确认后，会“模拟”清除所有分区。其结果应当如下图所示，绿框中应当显示为 <strong>空闲</strong></p>\n<p><img src=\"https://raw.githubusercontent.com/ryjer/imgbed/master/images/20210721004453-WePE-diskgenius.png\" alt=\"删除分区结果\"></p>\n<p>到这里，都是模拟结果。你需要点击上图左上方红框所示的 <code>保存更改</code> 按钮，才能<strong>真正</strong>将模拟执行的结果保存。即真正删除所有分区。</p>\n<p><img src=\"https://raw.githubusercontent.com/ryjer/imgbed/master/images/20210721004845-WePE-diskgenius.png\" alt=\"确认保存\"></p>\n<p>点击 <code>是</code> 后，完成结果保存。退出 DiskGenius</p>\n<h4 id=\"区分磁盘\"><a href=\"#区分磁盘\" class=\"headerlink\" title=\"区分磁盘\"></a>区分磁盘</h4><p>这里需要注意区分目标磁盘，可以使用卷标或容量来判断。磁盘名通常会与生成商相关，而内存固态的容量往往与U盘不同。如下图，目标磁盘有2GB，另一个磁盘有 4GB。如果这两个都相同的话，你需要根据磁盘下属的分区不同自行区分。</p>\n<p><img src=\"https://raw.githubusercontent.com/ryjer/imgbed/master/images/20210721135547063-WePE-diskgenius.png\" alt=\"diskgenius 磁盘\"></p>\n<h2 id=\"3-4-确认数据盘\"><a href=\"#3-4-确认数据盘\" class=\"headerlink\" title=\"3.4 确认数据盘\"></a>3.4 确认数据盘</h2><p>打开 <code>我的电脑</code> 逐个盘号寻找。直到找到存放 <code>phydiskwrite.exe</code> 和 镜像的盘，记下盘号。比如，下面的数据盘就是 <code>U:</code> 盘。</p>\n<p><img src=\"https://raw.githubusercontent.com/ryjer/imgbed/master/images/20210721184351-be82ea061a700330d8514bf1e03eb00d-2d11b814.png\" alt=\"确认数据盘\"></p>\n<h2 id=\"3-5-写入镜像\"><a href=\"#3-5-写入镜像\" class=\"headerlink\" title=\"3.5 写入镜像\"></a>3.5 写入镜像</h2><p>首先，打开 <code>命令提示符</code>。</p>\n<p>打开开始菜单，菜单内通常会有 <code>命令提示符</code>，比如下图所示</p>\n<p><img src=\"https://raw.githubusercontent.com/ryjer/imgbed/master/images/20210721184817-8219579fef1c6f6b3805400bc53aaad3-860d29ad.png\" alt=\"命令提示符\"></p>\n<p><img src=\"https://raw.githubusercontent.com/ryjer/imgbed/master/images/20210721185041-f752b94e98a7a9abf0de33275cd942ac-b590a817.png\" alt=\"cmd\"></p>\n<p>我们在 <code>3.4 确认数据盘</code> 中确认盘号是 **U:**。所以输入 <code>u:</code> ，这里不区分大小写。然后回车确认</p>\n<p><img src=\"https://raw.githubusercontent.com/ryjer/imgbed/master/images/20210721185405-ed5845e5a177a1d85b4376ce850772dc-ec0a2c05.png\" alt=\"u:\"></p>\n<p>输入 <code>dir</code> 命令查看文件夹，下图下方红框标识的两个就是 <code>phydiskwrite</code> 和镜像文件 <code>openwrt-x86-64-generic-squashfs-combined-efi.img</code></p>\n<p><img src=\"https://raw.githubusercontent.com/ryjer/imgbed/master/images/20210721185613-873f741cee19ed3de1d10911b8b65f45-25134bbf.png\" alt=\"dir\"></p>\n<p>接下来输入如下命令，开始进行写入。其中参数 <code>-u</code> 是为了解除 800MB 镜像大小限制</p>\n<p>（提示：可以使用键盘左部的 <code>Tab</code> 按键自动补全命令）</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">phydiskwrite.exe -u openwrt-x86-64-generic-squashfs-combined-efi.img</span><br></pre></td></tr></table></figure>\n\n<p>然后会出现以下界面，让你选择磁盘。</p>\n<p><img src=\"https://raw.githubusercontent.com/ryjer/imgbed/master/images/20210721191316-b6bf1042620263291e2e6002cbfbd02b-4a140346.png\" alt=\"选择磁盘\"></p>\n<p>我已经在上图上标注了 cyl tpc spt 的含义。cyl 代表柱面、tpc代表磁头、spt代表扇区。这里指的是<strong>虚拟磁盘</strong>而不是物理磁盘，你不必在意这些问题。一个扇区通常有 512B，所以 <strong>磁盘容量=柱面×磁头×扇区×512B</strong>。通常，磁盘的柱面数和扇区数都是差不多的，所以你可以简单地通过磁头数（tpc）来比较磁盘的大小进行选择。一般相对U盘来说内置磁盘数字是 <code>0</code>。我这里都是内置磁盘，有所不同，输入 <code>1</code> 选择下面哪个 4GB 的目标磁盘。</p>\n<p><img src=\"https://raw.githubusercontent.com/ryjer/imgbed/master/images/20210721192234-b148afe51f10afbcd52ed95c7b3683d4-9ae9d15f.png\" alt=\"image-20210721192232840\"></p>\n<p>然后，下面是提示确认。输入 <code>y</code>  表示确认（yes），然后回车确认</p>\n<p><img src=\"https://raw.githubusercontent.com/ryjer/imgbed/master/images/20210721192442-068a3fd219456de1c3b5c1b21568097b-9859de7a.png\" alt=\"写入\"></p>\n<p>当上图中绿框内的 <strong>写入进度</strong> 结束，就写完了。（如下图）</p>\n<p><img src=\"https://raw.githubusercontent.com/ryjer/imgbed/master/images/20210721192619-95387ecaf5055b149008aa1445eb77df-42450142.png\" alt=\"写入完成\"></p>\n<p>然后，openwrt已经写入目标磁盘了。你可以关机拔掉 U盘，然后插上网线重启就开始运行软路由 openwrt 系统了</p>\n","categories":["磁盘镜像"],"tags":["phydiskwrite","diskimage","磁盘镜像","刷机","windows","软路由","openwrt"]},{"title":"rocky8(centos8、rhel8)使用dnf安装postgresql数据库","url":"/posts/a1830bde50.html","content":"<blockquote>\n<p>在 CentOS8 、Rocky Linux8等RHEL8类发行版中，安装PostgreSQL数据库的方式与其它的软件包和数据库并不相同。除了需要手动指定数据库版本外，还需要进行初始化。这里对常见的安装和使用过程进行记录以便查阅</p>\n</blockquote>\n<span id=\"more\"></span>\n\n<p>永久链接: <a href=\"http://blog.ryjer.com/posts/a1830bde50.html\">http://blog.ryjer.com/posts/a1830bde50.html</a></p>\n<h1 id=\"1-dnf-包管理中的PostgreSQL-包\"><a href=\"#1-dnf-包管理中的PostgreSQL-包\" class=\"headerlink\" title=\"1. dnf 包管理中的PostgreSQL 包\"></a>1. dnf 包管理中的PostgreSQL 包</h1><p>网上大部分的PostgreSQL的安装教程都是来自PostgreSQL官方的，虽然来源没有问题但是一旦进行 <code>dnf update</code> 等更新软件包操作时就有可能出现软件源问题。这里对新手最佳的方式其实是使用 dnf 提供的版本</p>\n<p>在rhel8（rocky8）中默认的包管理器dnf提供了postgresql数据库管理系统，而且同时提供了多个可选的版本。但默认提供的版本是 <code>PostgreSQL 10</code> ，如果你想安装最新版本的话需要手动调整。</p>\n<p>你可以使用如下命令列出可用 PostgreSQL 模块流，如果你没有安装过postgresql的话，结果应当和我一样（我这里删除了第一行的日期等信息）</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@rocky8 ~]<span class=\"comment\"># dnf module list postgresql</span></span><br><span class=\"line\">Rocky Linux 8 - AppStream</span><br><span class=\"line\">Name                       Stream                 Profiles                          Summary                                           </span><br><span class=\"line\">postgresql                 9.6                    client, server [d]                PostgreSQL server and client module               </span><br><span class=\"line\">postgresql                 10 [d]                 client, server [d]                PostgreSQL server and client module               </span><br><span class=\"line\">postgresql                 12                     client, server [d]                PostgreSQL server and client module               </span><br><span class=\"line\">postgresql                 13                     client, server [d]                PostgreSQL server and client module               </span><br><span class=\"line\"></span><br><span class=\"line\">提示：[d]默认，[e]已启用，[x]已禁用，[i]已安装</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"2-安装-PostgreSQL\"><a href=\"#2-安装-PostgreSQL\" class=\"headerlink\" title=\"2. 安装 PostgreSQL\"></a>2. 安装 PostgreSQL</h1><h2 id=\"2-1-指定版本安装postgresq和contrib软件包\"><a href=\"#2-1-指定版本安装postgresq和contrib软件包\" class=\"headerlink\" title=\"2.1 指定版本安装postgresq和contrib软件包\"></a>2.1 指定版本安装postgresq和contrib软件包</h2><p>可见默认安装的是 <code>PostgreSQL 10</code> ，这里我们按照最新的版本 <code>13</code>，使用以下命令指定按照版本</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo dnf install @postgresql:13 -y</span><br></pre></td></tr></table></figure>\n\n<p>此外，通常会伴随安装以下的 <code>contrib</code> 拓展包，该软件包为postgresql提供了一些有用的附加功能</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo dnf install postgresql-contrib -y</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"2-2-初始化数据库\"><a href=\"#2-2-初始化数据库\" class=\"headerlink\" title=\"2.2 初始化数据库\"></a>2.2 初始化数据库</h2><p>Postgresql 数据库全新安装完成后不能直接使用，而是应当先<strong>初始化</strong>。如果你不是全新安装的话可以不用初始化</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo postgresql-setup initdb</span><br></pre></td></tr></table></figure>\n\n<p>如果该命令的结果如下，说明是成功的</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">WARNING: using obsoleted argument syntax, try --<span class=\"built_in\">help</span></span><br><span class=\"line\">WARNING: arguments transformed to: postgresql-setup --initdb --unit postgresql</span><br><span class=\"line\"> * Initializing database <span class=\"keyword\">in</span> <span class=\"string\">&#x27;/var/lib/pgsql/data&#x27;</span></span><br><span class=\"line\"> * Initialized, logs are <span class=\"keyword\">in</span> /var/lib/pgsql/initdb_postgresql.log</span><br></pre></td></tr></table></figure>\n\n<p>从上面的回显可以看出，初始化过程会在 <code>/var/lib/pgsql/</code> 路径下创建日志文件和数据目录<code>data</code>。</p>\n<p>不过这里是dnf包管理的PostgreSQL的特征，如果是 Postgres 官方的安装手册的话，会根据数据库版本创建对应的版本子文件夹。比如这里会是 <code>/var/lib/pgsql/13/</code>。然后在子文件夹中创建数据目录和日志文件</p>\n<h2 id=\"2-3-启动服务\"><a href=\"#2-3-启动服务\" class=\"headerlink\" title=\"2.3 启动服务\"></a>2.3 启动服务</h2><p>使用以下命令启动PostgreSQL 数据库服务</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo systemctl <span class=\"built_in\">enable</span> --now postgresql</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"2-4-验证\"><a href=\"#2-4-验证\" class=\"headerlink\" title=\"2.4 验证\"></a>2.4 验证</h2><p>使用以下命令查看服务状态</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">systemctl status postgresql.service</span><br></pre></td></tr></table></figure>\n\n<p>如果服务处于活跃状态的话，使用以下命令查看数据库版本信息，探测数据库本身运行情况</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo -u postgres psql -c <span class=\"string\">&quot;SELECT version();&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>回显如下，可见版本是 13.5，由红帽linux编译</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">could not change directory to <span class=\"string\">&quot;/root&quot;</span>: Permission denied</span><br><span class=\"line\">                                                  version                                                   </span><br><span class=\"line\">------------------------------------------------------------------------------------------------------------</span><br><span class=\"line\"> PostgreSQL 13.5 on x86_64-redhat-linux-gnu, compiled by gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-3), 64-bit</span><br><span class=\"line\">(1 row)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<h1 id=\"参考文章\"><a href=\"#参考文章\" class=\"headerlink\" title=\"参考文章\"></a>参考文章</h1><p><a href=\"https://www.jianshu.com/p/ed959be4aa77\">如何在CentOS 8 上安装 PostgreSQL 数据库 - 简书 (jianshu.com)</a></p>\n","categories":["数据库","PostgreSQL"],"tags":["linux","rocky","centos","数据库","postgresql"]},{"title":"java在windows与vscode的utf8编码乱码问题","url":"/posts/a11ba50a6.html","content":"<blockquote>\n<p>windows 使用 UTF-8 编码编写程序（比如 java）会遇到乱码问题。这是因为 windows 本身的默认编码为GBK而不是UTF-8，对应的 windows 下控制台cmd，powershell 的默认显示编码也不是 UTF-8。而系统中安装的编译器本身无从得知一个源代码文件究竟是如何编码的，因而默认采用了系统字符编码，从而导致了问题的发生</p>\n</blockquote>\n<span id=\"more\"></span>\n\n<p>永久链接：<a href=\"http://blog.ryjer.com/posts/a11ba50a6.html\">http://blog.ryjer.com/posts/a11ba50a6.html</a></p>\n<h1 id=\"原因\"><a href=\"#原因\" class=\"headerlink\" title=\"原因\"></a>原因</h1><p>java 编译器和java虚拟机并不能知道 .java 源代码文件的字符编码，因为现有的<strong>文件系统</strong>不会提供该信息。所以 java 需要去 “猜” 源代码文件究竟是什么编码（其他的编译器也需要猜）。</p>\n<p>而对于像源代码文件一类的“文本文件”，其编码最有可能采用的就是系统默认的字符编码。而各个操作系统（windows、linux）会在环境变量中向系统中的所有进程提供系统默认字符编码信息。windows 中文版系统默认编码为 GBK，当然（微软传统），是微软自己理解的GBK，并不完全是国标GBK。</p>\n<p>所以java会从环境变量中读取当前操作系统的字符编码信息，并将其作为源代码等 java 相关文件的字符编码。</p>\n<p>java编译器内部使用的是 Unicode 编码，其只能处理unicode 编码的源代码文件。所以在编译前会先将源代码文件转换为内部的 Unicode编码，然后再进行编译。</p>\n<hr>\n<p>当你在windows 下使用 默认字符集为UTF-8 文本编辑器编写 java 源代码时，产生的 <code>.java</code> 源代码文件是与系统默认编码GBK不同的UTF-8 编码文件。而 javac 编译器无法知道这个文本文件到底是什么字符编码，只能将其视作最有可能的系统默认字符编码——GBK编码处理。由于GBK和UTF-8之间的一些差异，在进行 java 外部源代码GBK编码向 java编译器内部Unicode 编码转换时出现了无法转换的问题。便出现了 <code>错误：编码GBK的不可映射字符</code>问题。比如下面这样</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ javac AllTheColorOFTheRainBow.java </span><br><span class=\"line\">AllTheColorOFTheRainBow.java:2: 错误: 编码 GBK 的不可映射字符 (0x82)</span><br><span class=\"line\"> * 缁冧範11 灏咥llTheColorOfTheRainBow (P36)杩欎釜绀轰緥鏀瑰啓鎴愪竴涓▼搴忥紝鐒跺悗缂栬瘧杩愯銆?</span><br><span class=\"line\">                                                                   ^</span><br><span class=\"line\">AllTheColorOFTheRainBow.java:12: 错误: 编码 GBK 的不可映射字符 (0x9A)</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;鍒濆闆ㄤ紴棰滆壊鎬绘暟锛?&quot;</span> + rainBow.anIntegerRepresentingColors);   </span><br><span class=\"line\">                                         ^</span><br><span class=\"line\">AllTheColorOFTheRainBow.java:14: 错误: 编码 GBK 的不可映射字符 (0xB9)</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;鏀?3鍚庨鑹叉?绘暟锛?&quot;</span> + rainBow.anIntegerRepresentingColors);        </span><br><span class=\"line\">                             ^</span><br><span class=\"line\">AllTheColorOFTheRainBow.java:14: 错误: 编码 GBK 的不可映射字符 (0x80)</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;鏀?3鍚庨鑹叉?绘暟锛?&quot;</span> + rainBow.anIntegerRepresentingColors);</span><br><span class=\"line\">                                    ^</span><br><span class=\"line\">AllTheColorOFTheRainBow.java:14: 错误: 编码 GBK 的不可映射字符 (0x9A)</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;鏀?3鍚庨鑹叉?绘暟锛?&quot;</span> + rainBow.anIntegerRepresentingColors);</span><br><span class=\"line\">                                        ^</span><br><span class=\"line\">AllTheColorOFTheRainBow.java:16: 错误: 编码 GBK 的不可映射字符 (0xB9)</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;鏀?8鍚庨鑹叉?绘暟锛?&quot;</span> + rainBow.anIntegerRepresentingColors);</span><br><span class=\"line\">                             ^</span><br><span class=\"line\">AllTheColorOFTheRainBow.java:16: 错误: 编码 GBK 的不可映射字符 (0x80)</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;鏀?8鍚庨鑹叉?绘暟锛?&quot;</span> + rainBow.anIntegerRepresentingColors);</span><br><span class=\"line\">                                    ^</span><br><span class=\"line\">AllTheColorOFTheRainBow.java:16: 错误: 编码 GBK 的不可映射字符 (0x9A)</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;鏀?8鍚庨鑹叉?绘暟锛?&quot;</span> + rainBow.anIntegerRepresentingColors);</span><br><span class=\"line\">                                        ^</span><br><span class=\"line\">8 个错误</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"解决方案\"><a href=\"#解决方案\" class=\"headerlink\" title=\"解决方案\"></a>解决方案</h1><p>知道了javac 编译命令和Java -jar等命令出现字符编码错误的原因，就可以进行针对性解决。主要有以下3种方法，但长期建议使用方法3，短期使用建议采用方法2</p>\n<h2 id=\"1-修改系统默认字符集编码\"><a href=\"#1-修改系统默认字符集编码\" class=\"headerlink\" title=\"1. 修改系统默认字符集编码\"></a>1. 修改系统默认字符集编码</h2><p>该方法建议在 linux 系统上使用，而不建议在 windows 上使用。因为 windows 对 UTF-8 的支持还是不稳定的 beta 版本。</p>\n<p>如果你一定要这么做的话，可以按照如下步骤设置。首先，打开 <code>控制面板</code> &gt; <code>时钟与区域</code></p>\n<p><img src=\"https://raw.githubusercontent.com/ryjer/imgbed/master/images/20210731121855-cd31c476a9350a0c501a50cc0fc4bc0d-72f2a040.png\" alt=\"image-20210731121852894\"></p>\n<p>然后点击 <code>区域</code></p>\n<p><img src=\"https://raw.githubusercontent.com/ryjer/imgbed/master/images/20210731121734-b8a13ef01f85cbbc839d90b483c7fd44-64100eef.png\" alt=\"image-20210731121731680\"></p>\n<p>接着，点击上方 <code>管理</code></p>\n<p><img src=\"https://raw.githubusercontent.com/ryjer/imgbed/master/images/20210731122004-6b69f0f24295c1132addecbb1ff1277d-ffee6ff1.png\" alt=\"image-20210731122001957\"></p>\n<p><code>更改系统区域设置</code></p>\n<p><img src=\"https://raw.githubusercontent.com/ryjer/imgbed/master/images/20210731122107-fc66b48ed95fd9d2921f6c0e6607e845-901054c3.png\" alt=\"image-20210731122105245\"></p>\n<p>勾选下图红框所示的选项后，点击 <code>确定</code> 完成系统字符集更改</p>\n<p><img src=\"https://raw.githubusercontent.com/ryjer/imgbed/master/images/20210731122219-c5fad29efdeabe73ce53775a1ccdc162-62804a92.png\" alt=\"image-20210731122217330\"></p>\n<p>再强调一下，不建议这么做。而是建议使用下面介绍的方法3添加 <code>JAVA_TOOL_OPTIONS</code> 环境变量</p>\n<h2 id=\"2-手动指定源代码文件的编码字符集\"><a href=\"#2-手动指定源代码文件的编码字符集\" class=\"headerlink\" title=\"2. 手动指定源代码文件的编码字符集\"></a>2. 手动指定源代码文件的编码字符集</h2><p>javac 等命令支持手动指定目标文件的编码，这样它们就不用根据系统默认字符集去猜测编码了。</p>\n<p>你可以使用 <code>-encoding UTF-8</code> 参数指定文件内的字符编码为 UTF-8，从而显式指明源代码文件的字符集编码。比如，在使用javac 编译命令时可以像如下这样</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">javac -encoding=UTF-8 AllTheColorOFTheRainBow.java</span><br></pre></td></tr></table></figure>\n\n<p>这次再来编译 <code>AllTheColorOFTheRainBow.java</code> 就不会出现中文乱码问题了。</p>\n<h2 id=\"3-添加指定命令参数的环境变量-JAVA-TOOL-OPTIONS\"><a href=\"#3-添加指定命令参数的环境变量-JAVA-TOOL-OPTIONS\" class=\"headerlink\" title=\"3.添加指定命令参数的环境变量 JAVA_TOOL_OPTIONS\"></a>3.添加指定命令参数的环境变量 JAVA_TOOL_OPTIONS</h2><p>可以通过 <code>JAVA_TOOL_OPTIONS</code> 为系统中java工具包提供额外信息。与之对应，<code>-Dfile.encoding</code> 参数就可以指定java的默认字符集。使得java 工具不再根据系统默认编码处理源代码文件，而是用通过 <code>-Dfile.encoding</code> 指定的编码来处理源代码。你可以通过如下方式指定 java 工具的默认字符集为 UTF-8</p>\n<p>在 windows 环境变量中添加一个<strong>系统变量</strong> <code>JAVA_TOOL_OPTIONS</code>，其值为 <code>-Dfile.encoding=UTF-8</code>。如果你不知道如何添加环境变量，可以参考这篇文章：<a href=\"/posts/a1ce50df27.html\">如何编辑 windows 10 环境变量</a></p>\n<p><img src=\"https://raw.githubusercontent.com/ryjer/imgbed/master/images/20210731104228-1d35599fc839919aacb1aa66081902a4-0c814a17.png\" alt=\"JAVA_TOOL_OPTIONS环境变量\"></p>\n<p>然后点击 <code>确定</code>，回到主编辑窗口，你会发现下图红框所示刚刚被添加的环境变量 <code>JAVA_TOOL_OPTIONS</code></p>\n<p><img src=\"https://raw.githubusercontent.com/ryjer/imgbed/master/images/20210731104354-2e1eb2aff71fbe0e15f5c9613eb948c6-22d6c8db.png\" alt=\"image-20210731104352638\"></p>\n<p>点击上图所示的 <code>确定</code> ，回到 <strong>系统属性</strong></p>\n<p><img src=\"https://raw.githubusercontent.com/ryjer/imgbed/master/images/20210731104709-5f8e4ea66c337f83a1634fdd1eea5b2f-9ddfcd85.png\" alt=\"image-20210731104707303\"></p>\n<p>再点击上图中的确定，完成添加</p>\n<h2 id=\"测试\"><a href=\"#测试\" class=\"headerlink\" title=\"测试\"></a>测试</h2><p>我这里使用 git bash，其实你用 cmd 、powershell 或者 windows Terminal 都可以。这里使用 javac 编译命令进行测试，其结果如下图所示</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ javac AllTheColorOFTheRainBow.java</span><br><span class=\"line\">Picked up JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF-8</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://raw.githubusercontent.com/ryjer/imgbed/master/images/20210731105303-c5454eb7f85d167c02e6ed1e83930ac6-3ace512d.png\" alt=\"image-20210731105301972\"></p>\n<p>可以看到，javac 命令自动获取了 <code>JAVA_TOOL_OPTIONS</code> 环境变量信息：<code>Picked up JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF-8</code></p>\n<h1 id=\"依然乱码\"><a href=\"#依然乱码\" class=\"headerlink\" title=\"依然乱码\"></a>依然乱码</h1><p>如果你上面配置完成后依然乱码，那可能不是或者不仅仅是 java的问题。也可能是你所使用的 shell(或者说是终端) 本身的编码问题，你需要去修改你所使用的终端的默认字符集。</p>\n<h2 id=\"修改-cmd-显示编码\"><a href=\"#修改-cmd-显示编码\" class=\"headerlink\" title=\"修改 cmd 显示编码\"></a>修改 cmd 显示编码</h2><p>windows下最常见的终端就是cmd，其默认编码一般与系统相同，在中文下是 GBK而不是网络上较为常用的 UTF-8。</p>\n<p>你可以使用 <code>chcp</code> 命令修改 cmd 终端的默认字符集，其格式为</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">chcp 编码代号</span><br></pre></td></tr></table></figure>\n\n<p>不同的代号代表不同的编码，常用的代号如下</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 编码格式        chcp 代号</span></span><br><span class=\"line\">  UTF-8          65001</span><br><span class=\"line\">  GBK            937</span><br></pre></td></tr></table></figure>\n\n<p>所以，要更改显示字符集为 UTF-8的命令是</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">chcp 65001</span><br></pre></td></tr></table></figure>\n\n<p>你在 cmd 中执行以上命令即可更改 cmd 的默认字符集为 UTF-8</p>\n","categories":["开发环境","java"],"tags":["windows","字符编码","java","开发环境","中文乱码"]},{"title":"rocky8(centos8)安装mysql5.7","url":"/posts/a1ec96d713.html","content":"<blockquote>\n<p>由于rhel8（或者centos8、rocky8等）红帽系Linux发行版中mysql数据库默认采用了mysql8版本，而当前对<code>MySQL 5.7</code> 的使用最多。为了兼容之前的 <code>MySQL 5.7</code> 数据库，需要手动安装上一版本的 mysql 数据库</p>\n</blockquote>\n<span id=\"more\"></span>\n\n<p>永久链接：<a href=\"http://blog.ryjer.com/posts/a1ec96d713.html\">http://blog.ryjer.com/posts/a1ec96d713.html</a></p>\n<h1 id=\"1、通过-yum-仓库安装\"><a href=\"#1、通过-yum-仓库安装\" class=\"headerlink\" title=\"1、通过 yum 仓库安装\"></a>1、通过 yum 仓库安装</h1><h2 id=\"1-关闭内置-mysql-8-0-模块\"><a href=\"#1-关闭内置-mysql-8-0-模块\" class=\"headerlink\" title=\"1 关闭内置 mysql 8.0 模块\"></a>1 关闭内置 mysql 8.0 模块</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo dnf remove @mysql</span><br><span class=\"line\">sudo dnf module reset mysql &amp;&amp; sudo dnf module <span class=\"built_in\">disable</span> mysql</span><br></pre></td></tr></table></figure>\n\n<p>屏蔽 yum mysql80 仓库</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo yum-config-manager --<span class=\"built_in\">disable</span> mysql80-community  </span><br></pre></td></tr></table></figure>\n\n<h2 id=\"2-添加-yum-仓库\"><a href=\"#2-添加-yum-仓库\" class=\"headerlink\" title=\"2 添加 yum 仓库\"></a>2 添加 yum 仓库</h2><p>下载 noarch 仓库安装包，由于没有 centos8 的，所以使用el7-9 的包</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">wget https://dev.mysql.com/get/mysql57-community-release-el7-9.noarch.rpm</span><br></pre></td></tr></table></figure>\n\n<p>安装</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">rpm -Uvh mysql57-community-release-el7-9.noarch.rpm</span><br><span class=\"line\"><span class=\"comment\"># 或者使用 yum</span></span><br><span class=\"line\">yum localinstall mysql57-community-release-el7-9.noarch.rpm</span><br></pre></td></tr></table></figure>\n\n<p>安装后会产生 仓库文件 <code>/etc/yum.repos.d/mysql-community.repo</code></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">[mysql-connectors-community]</span><br><span class=\"line\">name=MySQL Connectors Community</span><br><span class=\"line\">baseurl=http://repo.mysql.com/yum/mysql-connectors-community/el/7/<span class=\"variable\">$basearch</span>/</span><br><span class=\"line\">enabled=1</span><br><span class=\"line\">gpgcheck=1</span><br><span class=\"line\">gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-mysql</span><br><span class=\"line\"></span><br><span class=\"line\">[mysql-tools-community]</span><br><span class=\"line\">name=MySQL Tools Community</span><br><span class=\"line\">baseurl=http://repo.mysql.com/yum/mysql-tools-community/el/7/<span class=\"variable\">$basearch</span>/</span><br><span class=\"line\">enabled=1</span><br><span class=\"line\">gpgcheck=1</span><br><span class=\"line\">gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-mysql</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Enable to use MySQL 5.5</span></span><br><span class=\"line\">[mysql55-community]</span><br><span class=\"line\">name=MySQL 5.5 Community Server</span><br><span class=\"line\">baseurl=http://repo.mysql.com/yum/mysql-5.5-community/el/7/<span class=\"variable\">$basearch</span>/</span><br><span class=\"line\">enabled=0</span><br><span class=\"line\">gpgcheck=1</span><br><span class=\"line\">gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-mysql</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Enable to use MySQL 5.6</span></span><br><span class=\"line\">[mysql56-community]</span><br><span class=\"line\">name=MySQL 5.6 Community Server</span><br><span class=\"line\">baseurl=http://repo.mysql.com/yum/mysql-5.6-community/el/7/<span class=\"variable\">$basearch</span>/</span><br><span class=\"line\">enabled=0</span><br><span class=\"line\">gpgcheck=1</span><br><span class=\"line\">gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-mysql</span><br><span class=\"line\"></span><br><span class=\"line\">[mysql57-community]</span><br><span class=\"line\">name=MySQL 5.7 Community Server</span><br><span class=\"line\">baseurl=http://repo.mysql.com/yum/mysql-5.7-community/el/7/<span class=\"variable\">$basearch</span>/</span><br><span class=\"line\">enabled=1</span><br><span class=\"line\">gpgcheck=1</span><br><span class=\"line\">gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-mysql</span><br><span class=\"line\"></span><br><span class=\"line\">[mysql80-community]</span><br><span class=\"line\">name=MySQL 8.0 Community Server</span><br><span class=\"line\">baseurl=http://repo.mysql.com/yum/mysql-8.0-community/el/7/<span class=\"variable\">$basearch</span>/</span><br><span class=\"line\">enabled=0</span><br><span class=\"line\">gpgcheck=1</span><br><span class=\"line\">gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-mysql</span><br><span class=\"line\"></span><br><span class=\"line\">[mysql-tools-preview]</span><br><span class=\"line\">name=MySQL Tools Preview</span><br><span class=\"line\">baseurl=http://repo.mysql.com/yum/mysql-tools-preview/el/7/<span class=\"variable\">$basearch</span>/</span><br><span class=\"line\">enabled=0</span><br><span class=\"line\">gpgcheck=1</span><br><span class=\"line\">gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-mysql</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>和 <code>/etc/yum.repos.d/mysql-community-source.repo</code></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">[mysql-connectors-community-source]</span><br><span class=\"line\">name=MySQL Connectors Community - Source</span><br><span class=\"line\">baseurl=http://repo.mysql.com/yum/mysql-connectors-community/el/7/SRPMS</span><br><span class=\"line\">enabled=0</span><br><span class=\"line\">gpgcheck=1</span><br><span class=\"line\">gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-mysql</span><br><span class=\"line\"></span><br><span class=\"line\">[mysql-tools-community-source]</span><br><span class=\"line\">name=MySQL Tools Community - Source</span><br><span class=\"line\">baseurl=http://repo.mysql.com/yum/mysql-tools-community/el/7/SRPMS</span><br><span class=\"line\">enabled=0</span><br><span class=\"line\">gpgcheck=1</span><br><span class=\"line\">gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-mysql</span><br><span class=\"line\"></span><br><span class=\"line\">[mysql55-community-source]</span><br><span class=\"line\">name=MySQL 5.5 Community Server - Source</span><br><span class=\"line\">baseurl=http://repo.mysql.com/yum/mysql-5.5-community/el/7/SRPMS</span><br><span class=\"line\">enabled=0</span><br><span class=\"line\">gpgcheck=1</span><br><span class=\"line\">gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-mysql</span><br><span class=\"line\"></span><br><span class=\"line\">[mysql56-community-source]</span><br><span class=\"line\">name=MySQL 5.6 Community Server - Source</span><br><span class=\"line\">baseurl=http://repo.mysql.com/yum/mysql-5.6-community/el/7/SRPMS</span><br><span class=\"line\">enabled=0</span><br><span class=\"line\">gpgcheck=1</span><br><span class=\"line\">gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-mysql</span><br><span class=\"line\"></span><br><span class=\"line\">[mysql57-community-source]</span><br><span class=\"line\">name=MySQL 5.7 Community Server - Source</span><br><span class=\"line\">baseurl=http://repo.mysql.com/yum/mysql-5.7-community/el/7/SRPMS</span><br><span class=\"line\">enabled=0</span><br><span class=\"line\">gpgcheck=1</span><br><span class=\"line\">gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-mysql</span><br><span class=\"line\"></span><br><span class=\"line\">[mysql80-community-source]</span><br><span class=\"line\">name=MySQL 8.0 Community Server - Source</span><br><span class=\"line\">baseurl=http://repo.mysql.com/yum/mysql-8.0-community/el/7/SRPMS</span><br><span class=\"line\">enabled=0</span><br><span class=\"line\">gpgcheck=1</span><br><span class=\"line\">gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-mysql</span><br><span class=\"line\"></span><br><span class=\"line\">[mysql-tools-preview-source]</span><br><span class=\"line\">name=MySQL Tools Preview - Source</span><br><span class=\"line\">baseurl=http://repo.mysql.com/yum/mysql-tools-preview/el/7/SRPMS</span><br><span class=\"line\">enabled=0</span><br><span class=\"line\">gpgcheck=1</span><br><span class=\"line\">gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-mysql</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"3-安装-mysql-5-7\"><a href=\"#3-安装-mysql-5-7\" class=\"headerlink\" title=\"3 安装 mysql 5.7\"></a>3 安装 mysql 5.7</h2><p>标准的做法如下，直接从 mysql 官方仓库安装。但是该仓库位于国外，速度极慢，你需要花费大量的时间下载软件包</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">yum install mysql-community-server -y</span><br></pre></td></tr></table></figure>\n\n<p>这里最新版是 <code>mysql 5.7.35</code>，对应的安装包如下</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">===================================================================================</span><br><span class=\"line\"> 软件包\t\t\t\t\t 架构\t\t 版本\t\t\t\t\t\t 仓库\t\t\t\t 大小</span><br><span class=\"line\">===================================================================================</span><br><span class=\"line\">安装:</span><br><span class=\"line\"> mysql-community-server\t x86_64\t 5.7.35-1.el7\t\t\t mysql57-community\t 174 M</span><br><span class=\"line\">安装依赖关系:</span><br><span class=\"line\"> mysql-community-client\t x86_64\t 5.7.35-1.el7\t\t\t mysql57-community\t 25 M</span><br><span class=\"line\"> mysql-community-common\t x86_64\t 5.7.35-1.el7\t\t\t mysql57-community\t 310 k</span><br><span class=\"line\"> mysql-community-libs\t x86_64\t 5.7.35-1.el7\t\t\t mysql57-community\t 2.4 M</span><br><span class=\"line\"> ncurses-compat-libs\t x86_64\t 6.1-7.20180224.el8.1\t baseos\t\t\t\t 327 k</span><br><span class=\"line\"></span><br><span class=\"line\">事务概要</span><br><span class=\"line\">===================================================================================</span><br></pre></td></tr></table></figure>\n\n<p>查看版本，验证安装</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">mysql --version</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">mysql  Ver 14.14 Distrib 5.7.35, <span class=\"keyword\">for</span> Linux (x86_64) using  EditLine wrapper</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"4-启动-mysql-服务器\"><a href=\"#4-启动-mysql-服务器\" class=\"headerlink\" title=\"4 启动 mysql 服务器\"></a>4 启动 mysql 服务器</h2><p>如果你之前已经安装过 mysql，使用dnf 或 yum 卸载后数据文件目录 <code>/var/lib/mysql</code> 会有残留。如果之前的版本高于当前按照的版本，则有可能不兼容导致启动失败。请使用 mysqldump 导出数据后<strong>删除</strong>数据目录下的文件</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">systemctl start mysqld.service</span><br><span class=\"line\">systemctl status mysqld.service</span><br></pre></td></tr></table></figure>\n\n<p>第一次启动，mysql 安全机制会产生一个默认密码到日志文件中，可用使用以下命令查看日志中产生的默认密码</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">grep <span class=\"string\">&#x27;temporary password&#x27;</span> /var/<span class=\"built_in\">log</span>/mysqld.log</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">2021-08-29T11:04:29.752733Z 1 [Note] A temporary password is generated <span class=\"keyword\">for</span> root@localhost: gH_Q.d3G&amp;N&gt;i</span><br></pre></td></tr></table></figure>\n\n<p>上面，我的密码是 <code>gH_Q.d3G&amp;N&gt;i</code>，可用使用这个密码登录 mysql</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">mysql -u root -p</span><br></pre></td></tr></table></figure>\n\n<p>然后输入上面的密码即可登录。需要注意的是，mysql 要求登录后立即修改密码，其会阻止任何其他操作</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">ERROR 1820 (HY000): You must reset your password using ALTER USER statement before executing this statement.</span><br></pre></td></tr></table></figure>\n\n<p>mysql 5.7 支持以下语句设置密码，但这并不符合 sql 规范</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"># 修改当前用户和连接密码</span><br><span class=\"line\"><span class=\"keyword\">set</span> password <span class=\"operator\">=</span> password(<span class=\"string\">&#x27;新密码&#x27;</span>);</span><br><span class=\"line\"># 修改指定用户和连接密码</span><br><span class=\"line\"><span class=\"keyword\">set</span> password <span class=\"keyword\">for</span> 用户名<span class=\"variable\">@localhost</span> <span class=\"operator\">=</span> password(<span class=\"string\">&#x27;新密码&#x27;</span>); </span><br></pre></td></tr></table></figure>\n\n<p>在 mysql 8 中不再支持以上方式，仅支持正规的传统 sql 语句修改密码</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">USER</span> <span class=\"string\">&#x27;root&#x27;</span>@<span class=\"string\">&#x27;localhost&#x27;</span> IDENTIFIED <span class=\"keyword\">BY</span> <span class=\"string\">&#x27;新密码&#x27;</span>;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"5-关闭密码策略\"><a href=\"#5-关闭密码策略\" class=\"headerlink\" title=\"5 关闭密码策略\"></a>5 关闭密码策略</h2><p>可以通过以下语句查看 mysql 当前的密码策略</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SHOW</span> VARIABLES <span class=\"keyword\">LIKE</span> <span class=\"string\">&#x27;validate_password%&#x27;</span>;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">--------------------------------------+--------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> Variable_name                        <span class=\"operator\">|</span> <span class=\"keyword\">Value</span>  <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">--------------------------------------+--------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> validate_password_check_user_name    <span class=\"operator\">|</span> OFF    <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> validate_password_dictionary_file    <span class=\"operator\">|</span>        <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> validate_password_length             <span class=\"operator\">|</span> <span class=\"number\">8</span>      <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> validate_password_mixed_case_count   <span class=\"operator\">|</span> <span class=\"number\">1</span>      <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> validate_password_number_count       <span class=\"operator\">|</span> <span class=\"number\">1</span>      <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> validate_password_policy             <span class=\"operator\">|</span> MEDIUM <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> validate_password_special_char_count <span class=\"operator\">|</span> <span class=\"number\">1</span>      <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">--------------------------------------+--------+</span></span><br><span class=\"line\"><span class=\"number\">7</span> <span class=\"keyword\">rows</span> <span class=\"keyword\">in</span> <span class=\"keyword\">set</span> (<span class=\"number\">0.00</span> sec)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>在mysql 配置文件 <code>/etc/my.cnf</code> 的 <code>[mysqld]</code>中添加 <code>validate_password=off</code> 可以直接关闭密码验证插件</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">[mysqld]</span><br><span class=\"line\"><span class=\"comment\"># 关闭密码插件</span></span><br><span class=\"line\">validate_password=off</span><br><span class=\"line\"><span class=\"comment\"># 防止密码过期</span></span><br><span class=\"line\">default_password_lifetime=0</span><br></pre></td></tr></table></figure>\n\n<p>修改完后记得需要重新启动MySQL服务</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">validate_password相关参数说明：</span><br><span class=\"line\">validate_password_dictionary_file：密码策略文件，策略为STRONG才需要</span><br><span class=\"line\">validate_password_length：密码最少长度</span><br><span class=\"line\">validate_password_mixed_case_count：大小写字符长度，至少1个</span><br><span class=\"line\">validate_password_number_count ：数字至少1个</span><br><span class=\"line\">validate_password_special_char_count：特殊字符至少1个上述参数是默认策略MEDIUM的密码检查规则。</span><br><span class=\"line\">validate_password_policy：密码策略，默认为MEDIUM策略，共有如下三种密码策略：</span><br><span class=\"line\"></span><br><span class=\"line\">策略 检查规则</span><br><span class=\"line\">0 or LOW Length</span><br><span class=\"line\">1 or MEDIUM Length; numeric, lowercase/uppercase, and special characters</span><br><span class=\"line\">2 or STRONG Length; numeric, lowercase/uppercase, and special characters; dictionary file</span><br><span class=\"line\"></span><br><span class=\"line\">临时改：</span><br><span class=\"line\"></span><br><span class=\"line\">1. <span class=\"built_in\">set</span> global validate_password_policy=0;</span><br><span class=\"line\">2. <span class=\"built_in\">set</span> global validate_password_length=1;</span><br><span class=\"line\"></span><br><span class=\"line\">永久改，my.cnf里：</span><br><span class=\"line\"></span><br><span class=\"line\">validate_password_policy=0 <span class=\"comment\">#0（弱），1（中），2（强）</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"6-设置默认字符集为-utf8mb4\"><a href=\"#6-设置默认字符集为-utf8mb4\" class=\"headerlink\" title=\"6 设置默认字符集为 utf8mb4\"></a>6 设置默认字符集为 utf8mb4</h2><p>修改配置文件 <code>/etc/my.cnf</code> ，分别在 <code>[mysqld]</code>中添加 <code>character-set-server=utf8mb4</code>，<code>[client]</code>中添加 <code>default-character-set=utf8mb4</code>、<code>[mysql]</code>中添加<code>default-character-set=utf8mb4</code>。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">[mysqld]</span><br><span class=\"line\"><span class=\"comment\"># 设置数据库字符集为 utf8mb4</span></span><br><span class=\"line\">character-set-server=utf8mb4</span><br><span class=\"line\">collation-server=utf8mb4_unicode_ci</span><br><span class=\"line\"></span><br><span class=\"line\">[client]</span><br><span class=\"line\">default-character-set=utf8mb4</span><br><span class=\"line\"></span><br><span class=\"line\">[mysql]</span><br><span class=\"line\">default-character-set=utf8mb4</span><br></pre></td></tr></table></figure>\n\n<p>然后重启 mysql，完成配置</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">systemctl restart mysqld.service</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"2、迁移-mysql-8-到-mysql-5-7\"><a href=\"#2、迁移-mysql-8-到-mysql-5-7\" class=\"headerlink\" title=\"2、迁移 mysql 8 到 mysql 5.7\"></a>2、迁移 mysql 8 到 mysql 5.7</h1><p>由于 mysql 8表字符集编码和排序规则变化，mysqldump 导出的 mysql 8 数据库归档无法直接使用mysql导入 mysql 5.7，需要进行一些文本替换</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 1. 复制一个副本，保护源文件</span></span><br><span class=\"line\">cp 原文件 副本文件</span><br><span class=\"line\"><span class=\"comment\"># 进行文本替换 utf8mb4_0900_ai_ci 替换为 utf8_general_ci</span></span><br><span class=\"line\">sed -i <span class=\"string\">&#x27;s|utf8mb4_0900_ai_ci|utf8_general_ci|g&#x27;</span> 副本文件</span><br><span class=\"line\"><span class=\"comment\"># utf8_croatian_ci替换为utf8_general_ci</span></span><br><span class=\"line\">sed -i <span class=\"string\">&#x27;s|utf8_croatian_ci|utf8_general_ci|g&#x27;</span> 副本文件</span><br><span class=\"line\"><span class=\"comment\"># utf8mb4_general_ci替换为utf8_general_ci</span></span><br><span class=\"line\">sed -i <span class=\"string\">&#x27;s|utf8mb4_general_ci|utf8_general_ci|g&#x27;</span> 副本文件</span><br><span class=\"line\"><span class=\"comment\"># utf8mb4 替换为 utf8</span></span><br><span class=\"line\">sed -i <span class=\"string\">&#x27;s|utf8mb4|utf8|g&#x27;</span> 副本文件</span><br></pre></td></tr></table></figure>\n\n<p>然后就可以导入数据库归档到 mysql 5.7 了</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">mysql -u 用户名 -p 密码 数据库名 &lt; f</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"参考文章\"><a href=\"#参考文章\" class=\"headerlink\" title=\"参考文章\"></a>参考文章</h1><p><a href=\"https://blog.csdn.net/qq_45702658/article/details/119696662\">将Mysql 8.0数据导入到5.7及以下版本解决方案_程序员zz的博客-CSDN博客</a></p>\n","categories":["数据库","mysql"],"tags":["linux","rocky","centos","数据库","mysql"]},{"title":"virtual box (vbox) 安装 Ubuntu20.04 LTS 桌面版并转变为多用户命令行模式","url":"/posts/a118e0a5c.html","content":"<blockquote>\n<p>有时，进行数据分析时需要使用 Ubuntu 环境而不是 rocky 或者 centos 环境，但我们又不需要Ubuntu提供的桌面GUI。除了直接安装 Ubuntu Server 服务器版之外，还可以直接将桌面版的Ubuntu转变为多用户命令行模式</p>\n</blockquote>\n<span id=\"more\"></span>\n\n<p>原文链接：<a href=\"http://blog.ryjer.com/posts/a118e0a5c.html\">http://blog.ryjer.com/posts/a118e0a5c.html</a></p>\n<h1 id=\"1-下载Ubuntu\"><a href=\"#1-下载Ubuntu\" class=\"headerlink\" title=\"1. 下载Ubuntu\"></a>1. 下载Ubuntu</h1><p>进入 Ubuntu 桌面版下载页（<a href=\"https://cn.ubuntu.com/download/desktop\">下载Ubuntu桌面系统 | Ubuntu</a>），点击红色箭头所示 <code>下载</code> 下载Ubuntu20.04LTS桌面版。</p>\n<p><img src=\"https://raw.githubusercontent.com/ryjer/imgbed/master/images/20211022204140-03ce63e83d4fb13a785f5e0df3377aaa-71014f7b.png\" alt=\"image-20211022204140906\"></p>\n<h1 id=\"2-创建Vbox-虚拟机\"><a href=\"#2-创建Vbox-虚拟机\" class=\"headerlink\" title=\"2. 创建Vbox 虚拟机\"></a>2. 创建Vbox 虚拟机</h1><p>略。。。</p>\n<h1 id=\"3-安装-Ubuntu-系统\"><a href=\"#3-安装-Ubuntu-系统\" class=\"headerlink\" title=\"3. 安装 Ubuntu 系统\"></a>3. 安装 Ubuntu 系统</h1><p>注意：Ubuntu 的安装程序与 virtual box 有兼容性问题。当你一开始选择中文时，屏幕下半部分会显示不全，你无法点击 <code>取消</code>  和 <code>确定</code> 按键。所以，一开始的语言请选择默认的<strong>英文</strong>，安装完桌面后在系统中改为中文，并切换软件源为中国的服务器（比如阿里云、清华等镜像源）</p>\n<p>以上步骤均可以在 Ubuntu 桌面图形化环境中完成</p>\n<h1 id=\"4-切换为多用户命令行模式\"><a href=\"#4-切换为多用户命令行模式\" class=\"headerlink\" title=\"4. 切换为多用户命令行模式\"></a>4. 切换为多用户命令行模式</h1><p>对于使用虚拟机的用户来说，可能更习惯使用 ssh 连接虚拟机。这种情况下并不需要图形环境，所以需要切换到多用户命令行模式</p>\n<h2 id=\"4-1-安装-ssh-服务器\"><a href=\"#4-1-安装-ssh-服务器\" class=\"headerlink\" title=\"4.1 安装 ssh 服务器\"></a>4.1 安装 ssh 服务器</h2><p>Ubuntu 桌面版是为桌面用户准备的，因此默认没有 ssh 服务器。首先需要安装 ssh 服务器，对应的软件包为 <code>openssh-server</code></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo apt install openssh-server</span><br></pre></td></tr></table></figure>\n\n<p>安装完成后 ssh 服务端会自动启动，使用以下命令确认 ssh 服务器已经启动</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo systemctl status sshd.service </span><br></pre></td></tr></table></figure>\n\n<h2 id=\"4-2-创建-root-密码\"><a href=\"#4-2-创建-root-密码\" class=\"headerlink\" title=\"4.2 创建 root 密码\"></a>4.2 创建 root 密码</h2><p>由于 Ubuntu 桌面版是为桌面用户准备的，你会发现在安装过程中没有要求你设置root密码。其实默认root没有密码，你是没法登陆root的。你需要先使用以下命令设置 root 密码</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo systemctl status sshd.service </span><br></pre></td></tr></table></figure>\n\n<h2 id=\"4-3-修改-GRUB-配置文件\"><a href=\"#4-3-修改-GRUB-配置文件\" class=\"headerlink\" title=\"4.3 修改 GRUB 配置文件\"></a>4.3 修改 GRUB 配置文件</h2><p>修改 grub 配置文件，该配置文件路径为 <code>/etc/default/grub</code> ，你可以使用 vim 修改该配置文件</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo vim /etc/default/grub</span><br></pre></td></tr></table></figure>\n\n<p>将配置文件改为下图所示的样子，注意只改下图红框所示的部分</p>\n<p><img src=\"https://raw.githubusercontent.com/ryjer/imgbed/master/images/20211022211108-41c5a78b040a939359db7ff353fcd02b-726232b5.png\" alt=\"image-20211022211108820\"></p>\n<p>然后更新 grub 配置到 /boot 启动目录下真正使用的配置文件中</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo update-grub</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"4-4-设置开机为多用户命令行模式\"><a href=\"#4-4-设置开机为多用户命令行模式\" class=\"headerlink\" title=\"4.4 设置开机为多用户命令行模式\"></a>4.4 设置开机为多用户命令行模式</h2><p>安装完 Ubuntu 桌面后默认为图形GUI 模式，使用以下命令切换为命令行多用户模式。也就是大家比较熟悉的服务器的命令行</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo systemctl set-default multi-user.target</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"4-5-重启-Ubuntu\"><a href=\"#4-5-重启-Ubuntu\" class=\"headerlink\" title=\"4.5 重启 Ubuntu\"></a>4.5 重启 Ubuntu</h2><p>重启ubuntu，测试一下是否已经变为命令模式</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo reboot</span><br></pre></td></tr></table></figure>\n\n<p>如果开启成功，你应当看到如下经典的命令界面。这表明切换模式成功</p>\n<p><img src=\"https://raw.githubusercontent.com/ryjer/imgbed/master/images/20211022213104-a44480238b4700b2125fda3cd1a5a01c-821567bc.png\" alt=\"image-20211022213104131\"></p>\n<h1 id=\"5-其他配置\"><a href=\"#5-其他配置\" class=\"headerlink\" title=\"5 其他配置\"></a>5 其他配置</h1><h2 id=\"5-1-关闭-swap-交换分区\"><a href=\"#5-1-关闭-swap-交换分区\" class=\"headerlink\" title=\"5.1 关闭 swap 交换分区\"></a>5.1 关闭 swap 交换分区</h2><p>在 <code>/etc/fstab</code> 中注释掉 swap 分区，swap 分区通常在最后一行</p>\n<h1 id=\"参考文章\"><a href=\"#参考文章\" class=\"headerlink\" title=\"参考文章\"></a>参考文章</h1><p><a href=\"https://www.cnblogs.com/Taskr212/p/11228210.html\">Ubuntu18.04 设置开机进入命令行模式 - Taskr - 博客园 (cnblogs.com)</a></p>\n","categories":["Linux"],"tags":["linux","virtual box","ubuntu","虚拟机"]},{"title":"使用Rclone备份（同步）对象存储腾讯云COS到本地MinIO","url":"/posts/a11b2263c4.html","content":"<blockquote>\n<p>把数据放到云服务商那里总是感觉不太放心。虽然云服务商动辄号称超过 9 个9的数据持久性，但这肯定没有包括云服务商自己的操作失误。所以，还是把对象存储的数据在本地备份一下比较好。</p>\n<p>在这里，我在本地使用 MinIO 构建了一个本地的对象存储。并使用 rclone 工具每天备份一次</p>\n</blockquote>\n<span id=\"more\"></span>\n\n<p>原文链接：<a href=\"http://blog.ryjer.com/posts/a11b2263c4.html\">http://blog.ryjer.com/posts/a11b2263c4.html</a></p>\n<h1 id=\"1-目的\"><a href=\"#1-目的\" class=\"headerlink\" title=\"1. 目的\"></a>1. 目的</h1><p>定期备份腾讯云上的对象存储桶数据，以防止腾讯出现意外而发生严重数据丢失。（主要是防止腾讯云故意造成的意外）</p>\n<p>保护博客专用的对象存储桶。</p>\n<h1 id=\"2-实现方式\"><a href=\"#2-实现方式\" class=\"headerlink\" title=\"2. 实现方式\"></a>2. 实现方式</h1><p>a. 使用 <code>Rclone</code> 的 <code>sync</code> 子指令，配合本地 <strong>crond</strong> 定期执行。完成定期从对象存储桶到本地 <code>minio</code> 存储桶的同步备份。</p>\n<p>b. 使用 <code>MinIO</code> 项目的 <code>mcli</code> 客户端的 <code>mirror</code> 子命令，配合crond 完成定期镜像。不过好像不是增量备份</p>\n<h1 id=\"3-Rclone-实现\"><a href=\"#3-Rclone-实现\" class=\"headerlink\" title=\"3. Rclone 实现\"></a>3. Rclone 实现</h1><h2 id=\"3-1-参考资料\"><a href=\"#3-1-参考资料\" class=\"headerlink\" title=\"3.1 参考资料\"></a>3.1 参考资料</h2><p><a href=\"https://rclone.org/\">Rclone 官网</a></p>\n<p><a href=\"https://rclone.org/s3/#alibaba-oss\">阿里云 OSS 配置 (rclone.org)</a></p>\n<p><a href=\"https://rclone.org/local/\">本地文件系统 (rclone.org)</a></p>\n<h2 id=\"3-2-安装-Rclone\"><a href=\"#3-2-安装-Rclone\" class=\"headerlink\" title=\"3.2 安装 Rclone\"></a>3.2 安装 Rclone</h2><p><a href=\"https://rclone.org/local/\">Rclone 本地安装文档</a></p>\n<p>运行以下命令安装稳定版</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">curl https://rclone.org/install.sh | sudo bash</span><br></pre></td></tr></table></figure>\n\n<p>安装过程信息参考，不同版本的 rclone 可能不同。这个网站本身在国外，访问速度较慢。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current</span><br><span class=\"line\">                                 Dload  Upload   Total   Spent    Left  Speed</span><br><span class=\"line\">100    15  100    15    0     0      1      0  0:00:15  0:00:07  0:00:08     3</span><br><span class=\"line\">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current</span><br><span class=\"line\">                                 Dload  Upload   Total   Spent    Left  Speed</span><br><span class=\"line\">100 13.8M  100 13.8M    0     0    98k      0  0:02:24  0:02:24 --:--:--  182k</span><br><span class=\"line\">Archive:  rclone-current-linux-amd64.zip</span><br><span class=\"line\">   creating: tmp_unzip_dir_for_rclone/rclone-v1.55.1-linux-amd64/</span><br><span class=\"line\">  inflating: tmp_unzip_dir_for_rclone/rclone-v1.55.1-linux-amd64/README.txt  [text]  </span><br><span class=\"line\">  inflating: tmp_unzip_dir_for_rclone/rclone-v1.55.1-linux-amd64/rclone.1  [text]  </span><br><span class=\"line\">  inflating: tmp_unzip_dir_for_rclone/rclone-v1.55.1-linux-amd64/README.html  [text]  </span><br><span class=\"line\">  inflating: tmp_unzip_dir_for_rclone/rclone-v1.55.1-linux-amd64/git-log.txt  [text]  </span><br><span class=\"line\">  inflating: tmp_unzip_dir_for_rclone/rclone-v1.55.1-linux-amd64/rclone  [binary]</span><br><span class=\"line\">正在删除 /usr/share/man 里的旧数据库条目...</span><br><span class=\"line\">mandb: 警告：/usr/share/man/man8/fsck.fat.8.manpage-fix.gz：忽略错误的文件名</span><br><span class=\"line\">正在处理 /usr/share/man 下的手册页...</span><br><span class=\"line\">正在为路径 /usr/share/man/man1 更新索引缓存。请等待...mandb: 警告：/usr/share/man/man1/config.guess.1.gz：用 whatis 解读 config.guess(1) 失败</span><br><span class=\"line\">mandb: 警告：/usr/share/man/man1/config.sub.1.gz：用 whatis 解读 config.sub(1) 失败</span><br><span class=\"line\">正在为路径 /usr/share/man/man3 更新索引缓存。请等待...mandb: 警告：/usr/share/man/man3/<span class=\"keyword\">function</span>::MKDEF.3stap.gz：用 whatis 解读 <span class=\"keyword\">function</span>::MKDEF(3stap) 失败</span><br><span class=\"line\">mandb: 警告：/usr/share/man/man3/TAP::Harness::Beyond.3pm.gz：用 whatis 解读 TAP::Harness::Beyond(3pm) 失败</span><br><span class=\"line\">mandb: 警告：/usr/share/man/man3/<span class=\"keyword\">function</span>::-.3stap.gz：用 whatis 解读 <span class=\"keyword\">function</span>::-(3stap) 失败</span><br><span class=\"line\">mandb: 警告：/usr/share/man/man3/<span class=\"keyword\">function</span>::sa_handler.3stap.gz：用 whatis 解读 <span class=\"keyword\">function</span>::sa_handler(3stap) 失败</span><br><span class=\"line\">mandb: 警告：/usr/share/man/man3/probe::sunrpc.svc.authorise.3stap.gz：用 whatis 解读 probe::sunrpc.svc.authorise(3stap) 失败</span><br><span class=\"line\">正在为路径 /usr/share/man/man8 更新索引缓存。请等待...mandb: 警告：/usr/share/man/man8/fsck.fat.8.manpage-fix.gz：忽略错误的文件名</span><br><span class=\"line\">完成。</span><br><span class=\"line\">正在 /usr/share/man 下查找流浪猫...</span><br><span class=\"line\">正在 /var/cache/man 下查找流浪猫...</span><br><span class=\"line\">正在删除 /usr/share/man/cs 里的旧数据库条目...</span><br><span class=\"line\">正在处理 /usr/share/man/cs 下的手册页...</span><br><span class=\"line\">正在删除 /usr/share/man/da 里的旧数据库条目...</span><br><span class=\"line\">正在处理 /usr/share/man/da 下的手册页...</span><br><span class=\"line\">正在删除 /usr/share/man/de 里的旧数据库条目...</span><br><span class=\"line\">正在处理 /usr/share/man/de 下的手册页...</span><br><span class=\"line\">正在删除 /usr/share/man/fr 里的旧数据库条目...</span><br><span class=\"line\">正在处理 /usr/share/man/fr 下的手册页...</span><br><span class=\"line\">正在删除 /usr/share/man/hu 里的旧数据库条目...</span><br><span class=\"line\">正在处理 /usr/share/man/hu 下的手册页...</span><br><span class=\"line\">正在删除 /usr/share/man/id 里的旧数据库条目...</span><br><span class=\"line\">正在处理 /usr/share/man/id 下的手册页...</span><br><span class=\"line\">正在删除 /usr/share/man/it 里的旧数据库条目...</span><br><span class=\"line\">正在处理 /usr/share/man/it 下的手册页...</span><br><span class=\"line\">正在删除 /usr/share/man/ja 里的旧数据库条目...</span><br><span class=\"line\">正在处理 /usr/share/man/ja 下的手册页...</span><br><span class=\"line\">正在删除 /usr/share/man/ko 里的旧数据库条目...</span><br><span class=\"line\">正在处理 /usr/share/man/ko 下的手册页...</span><br><span class=\"line\">正在删除 /usr/share/man/pl 里的旧数据库条目...</span><br><span class=\"line\">正在处理 /usr/share/man/pl 下的手册页...</span><br><span class=\"line\">正在删除 /usr/share/man/pt_BR 里的旧数据库条目...</span><br><span class=\"line\">正在处理 /usr/share/man/pt_BR 下的手册页...</span><br><span class=\"line\">正在删除 /usr/share/man/ru 里的旧数据库条目...</span><br><span class=\"line\">正在处理 /usr/share/man/ru 下的手册页...</span><br><span class=\"line\">正在删除 /usr/share/man/sv 里的旧数据库条目...</span><br><span class=\"line\">正在处理 /usr/share/man/sv 下的手册页...</span><br><span class=\"line\">正在删除 /usr/share/man/tr 里的旧数据库条目...</span><br><span class=\"line\">正在处理 /usr/share/man/tr 下的手册页...</span><br><span class=\"line\">正在删除 /usr/share/man/zh_CN 里的旧数据库条目...</span><br><span class=\"line\">正在处理 /usr/share/man/zh_CN 下的手册页...</span><br><span class=\"line\">正在删除 /usr/share/man/zh_TW 里的旧数据库条目...</span><br><span class=\"line\">正在处理 /usr/share/man/zh_TW 下的手册页...</span><br><span class=\"line\">正在删除 /usr/share/man/sk 里的旧数据库条目...</span><br><span class=\"line\">正在处理 /usr/share/man/sk 下的手册页...</span><br><span class=\"line\">正在删除 /usr/share/man/es 里的旧数据库条目...</span><br><span class=\"line\">正在处理 /usr/share/man/es 下的手册页...</span><br><span class=\"line\">正在删除 /usr/share/man/nl 里的旧数据库条目...</span><br><span class=\"line\">正在处理 /usr/share/man/nl 下的手册页...</span><br><span class=\"line\">正在删除 /usr/share/man/pt 里的旧数据库条目...</span><br><span class=\"line\">正在处理 /usr/share/man/pt 下的手册页...</span><br><span class=\"line\">正在删除 /usr/<span class=\"built_in\">local</span>/share/man 里的旧数据库条目...</span><br><span class=\"line\">正在处理 /usr/<span class=\"built_in\">local</span>/share/man 下的手册页...</span><br><span class=\"line\">正在为路径 /usr/<span class=\"built_in\">local</span>/share/man/man1 更新索引缓存。请等待...完成。</span><br><span class=\"line\">正在 /usr/<span class=\"built_in\">local</span>/share/man 下查找流浪猫...</span><br><span class=\"line\">正在 /var/cache/man/<span class=\"built_in\">local</span> 下查找流浪猫...</span><br><span class=\"line\">5 man subdirectories contained newer manual pages.</span><br><span class=\"line\">553 manual pages were added.</span><br><span class=\"line\">0 stray cats were added.</span><br><span class=\"line\">0 old database entries were purged.</span><br><span class=\"line\"></span><br><span class=\"line\">rclone v1.55.1 has successfully installed.</span><br><span class=\"line\">Now run <span class=\"string\">&quot;rclone config&quot;</span> <span class=\"keyword\">for</span> setup. Check https://rclone.org/docs/ <span class=\"keyword\">for</span> more details.</span><br></pre></td></tr></table></figure>\n\n<p>至于所谓的mandb错误和警告不用管，反正我基本上不会从 man 手册中看 rclone。</p>\n<h2 id=\"3-3-配置-Rclone\"><a href=\"#3-3-配置-Rclone\" class=\"headerlink\" title=\"3.3 配置 Rclone\"></a>3.3 配置 Rclone</h2><p>安装完 <strong>Rclone</strong> 后，需要为其配置对象存储账号。使用 <code>rclone config</code> 命令进入 rclone 引导配置：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">rclone config</span><br></pre></td></tr></table></figure>\n\n<p>不同的存储类型参考官方文档 <a href=\"https://rclone.org/docs/\">文档 (rclone.org)</a></p>\n<p>配置添加成功后会在当前 linux 系统家目录下创建对应的配置文件，目录树结构如下，其中的 <code>rclone.conf</code> 文件存放你使用 <code>rclone config</code> 输入的配置信息。如果你对这个文件格式比较熟悉的话，可以直接编辑该文件而不用使用 <strong>rclone config</strong> 命令。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">~/.config/</span><br><span class=\"line\">├── procps</span><br><span class=\"line\">└── rclone</span><br><span class=\"line\">    └── rclone.conf</span><br></pre></td></tr></table></figure>\n\n<p>我使用的是腾讯云COS 和 本地的MinIO对象存储，对应的参考文档如下</p>\n<p><a href=\"https://rclone.org/s3/#minio\">MinIO 配置 (rclone.org)</a></p>\n<p><a href=\"https://rclone.org/s3/#tencent-cos\">腾讯 COS 配置 (rclone.org)</a></p>\n<h1 id=\"4-配置MinIO节点\"><a href=\"#4-配置MinIO节点\" class=\"headerlink\" title=\"4. 配置MinIO节点\"></a>4. 配置MinIO节点</h1><p>添加 <strong>MinIO</strong> 对象存储节点的过程如下，使用 <code>rclone config</code> 命令进行配置：</p>\n<h2 id=\"1-选择功能\"><a href=\"#1-选择功能\" class=\"headerlink\" title=\"1. 选择功能\"></a>1. 选择功能</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">[user@localhost ~]$ rclone config</span><br><span class=\"line\">2021/07/12 21:18:21 NOTICE: Config file <span class=\"string\">&quot;/home/jiakun/.config/rclone/rclone.conf&quot;</span> not found - using defaults</span><br><span class=\"line\">No remotes found - make a new one</span><br><span class=\"line\">n) New remote</span><br><span class=\"line\">s) Set configuration password</span><br><span class=\"line\">q) Quit config</span><br><span class=\"line\">n/s/q&gt; </span><br></pre></td></tr></table></figure>\n\n<p>输入 <code>n</code> ，选择  <code>n) New remote</code> ，也就是新建远程节点选项。然后，会让你为节点命名。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">No remotes found - make a new one</span><br><span class=\"line\">n) New remote</span><br><span class=\"line\">s) Set configuration password</span><br><span class=\"line\">q) Quit config</span><br><span class=\"line\">n/s/q&gt; n</span><br><span class=\"line\">name&gt; miniolocal</span><br></pre></td></tr></table></figure>\n\n<p>我这里将其命名为 <code>miniolocal</code>。</p>\n<h2 id=\"2-选择存储类型\"><a href=\"#2-选择存储类型\" class=\"headerlink\" title=\"2. 选择存储类型\"></a>2. 选择存储类型</h2><p>这一步需要选择节点对应的存储类型，rclone 支持众多类型的存储。甚至支持部分网盘。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">name&gt; miniolocal</span><br><span class=\"line\">Type of storage to configure.</span><br><span class=\"line\">Enter a string value. Press Enter <span class=\"keyword\">for</span> the default (<span class=\"string\">&quot;&quot;</span>).</span><br><span class=\"line\">Choose a number from below, or <span class=\"built_in\">type</span> <span class=\"keyword\">in</span> your own value</span><br><span class=\"line\"> 1 / 1Fichier</span><br><span class=\"line\">   \\ <span class=\"string\">&quot;fichier&quot;</span></span><br><span class=\"line\"> 2 / Alias <span class=\"keyword\">for</span> an existing remote</span><br><span class=\"line\">   \\ <span class=\"string\">&quot;alias&quot;</span></span><br><span class=\"line\"> 3 / Amazon Drive</span><br><span class=\"line\">   \\ <span class=\"string\">&quot;amazon cloud drive&quot;</span></span><br><span class=\"line\"> 4 / Amazon S3 Compliant Storage Providers including AWS, Alibaba, Ceph, Digital Ocean, Dreamhost, IBM COS, Minio, and Tencent COS</span><br><span class=\"line\">   \\ <span class=\"string\">&quot;s3&quot;</span></span><br><span class=\"line\"> 5 / Backblaze B2</span><br><span class=\"line\">   \\ <span class=\"string\">&quot;b2&quot;</span></span><br><span class=\"line\"> 6 / Box</span><br><span class=\"line\">   \\ <span class=\"string\">&quot;box&quot;</span></span><br><span class=\"line\"> 7 / Cache a remote</span><br><span class=\"line\">   \\ <span class=\"string\">&quot;cache&quot;</span></span><br><span class=\"line\"> 8 / Citrix Sharefile</span><br><span class=\"line\">   \\ <span class=\"string\">&quot;sharefile&quot;</span></span><br><span class=\"line\"> 9 / Compress a remote</span><br><span class=\"line\">   \\ <span class=\"string\">&quot;compress&quot;</span></span><br><span class=\"line\">10 / Dropbox</span><br><span class=\"line\">   \\ <span class=\"string\">&quot;dropbox&quot;</span></span><br><span class=\"line\">11 / Encrypt/Decrypt a remote</span><br><span class=\"line\">   \\ <span class=\"string\">&quot;crypt&quot;</span></span><br><span class=\"line\">12 / Enterprise File Fabric</span><br><span class=\"line\">   \\ <span class=\"string\">&quot;filefabric&quot;</span></span><br><span class=\"line\">13 / FTP Connection</span><br><span class=\"line\">   \\ <span class=\"string\">&quot;ftp&quot;</span></span><br><span class=\"line\">14 / Google Cloud Storage (this is not Google Drive)</span><br><span class=\"line\">   \\ <span class=\"string\">&quot;google cloud storage&quot;</span></span><br><span class=\"line\">15 / Google Drive</span><br><span class=\"line\">   \\ <span class=\"string\">&quot;drive&quot;</span></span><br><span class=\"line\">16 / Google Photos</span><br><span class=\"line\">   \\ <span class=\"string\">&quot;google photos&quot;</span></span><br><span class=\"line\">17 / Hadoop distributed file system</span><br><span class=\"line\">   \\ <span class=\"string\">&quot;hdfs&quot;</span></span><br><span class=\"line\">18 / Hubic</span><br><span class=\"line\">   \\ <span class=\"string\">&quot;hubic&quot;</span></span><br><span class=\"line\">19 / In memory object storage system.</span><br><span class=\"line\">   \\ <span class=\"string\">&quot;memory&quot;</span></span><br><span class=\"line\">20 / Jottacloud</span><br><span class=\"line\">   \\ <span class=\"string\">&quot;jottacloud&quot;</span></span><br><span class=\"line\">21 / Koofr</span><br><span class=\"line\">   \\ <span class=\"string\">&quot;koofr&quot;</span></span><br><span class=\"line\">22 / Local Disk</span><br><span class=\"line\">   \\ <span class=\"string\">&quot;local&quot;</span></span><br><span class=\"line\">23 / Mail.ru Cloud</span><br><span class=\"line\">   \\ <span class=\"string\">&quot;mailru&quot;</span></span><br><span class=\"line\">24 / Mega</span><br><span class=\"line\">   \\ <span class=\"string\">&quot;mega&quot;</span></span><br><span class=\"line\">25 / Microsoft Azure Blob Storage</span><br><span class=\"line\">   \\ <span class=\"string\">&quot;azureblob&quot;</span></span><br><span class=\"line\">26 / Microsoft OneDrive</span><br><span class=\"line\">   \\ <span class=\"string\">&quot;onedrive&quot;</span></span><br><span class=\"line\">27 / OpenDrive</span><br><span class=\"line\">   \\ <span class=\"string\">&quot;opendrive&quot;</span></span><br><span class=\"line\">28 / OpenStack Swift (Rackspace Cloud Files, Memset Memstore, OVH)</span><br><span class=\"line\">   \\ <span class=\"string\">&quot;swift&quot;</span></span><br><span class=\"line\">29 / Pcloud</span><br><span class=\"line\">   \\ <span class=\"string\">&quot;pcloud&quot;</span></span><br><span class=\"line\">30 / Put.io</span><br><span class=\"line\">   \\ <span class=\"string\">&quot;putio&quot;</span></span><br><span class=\"line\">31 / QingCloud Object Storage</span><br><span class=\"line\">   \\ <span class=\"string\">&quot;qingstor&quot;</span></span><br><span class=\"line\">32 / SSH/SFTP Connection</span><br><span class=\"line\">   \\ <span class=\"string\">&quot;sftp&quot;</span></span><br><span class=\"line\">33 / Sugarsync</span><br><span class=\"line\">   \\ <span class=\"string\">&quot;sugarsync&quot;</span></span><br><span class=\"line\">34 / Tardigrade Decentralized Cloud Storage</span><br><span class=\"line\">   \\ <span class=\"string\">&quot;tardigrade&quot;</span></span><br><span class=\"line\">35 / Transparently chunk/split large files</span><br><span class=\"line\">   \\ <span class=\"string\">&quot;chunker&quot;</span></span><br><span class=\"line\">36 / Union merges the contents of several upstream fs</span><br><span class=\"line\">   \\ <span class=\"string\">&quot;union&quot;</span></span><br><span class=\"line\">37 / Webdav</span><br><span class=\"line\">   \\ <span class=\"string\">&quot;webdav&quot;</span></span><br><span class=\"line\">38 / Yandex Disk</span><br><span class=\"line\">   \\ <span class=\"string\">&quot;yandex&quot;</span></span><br><span class=\"line\">39 / Zoho</span><br><span class=\"line\">   \\ <span class=\"string\">&quot;zoho&quot;</span></span><br><span class=\"line\">40 / http Connection</span><br><span class=\"line\">   \\ <span class=\"string\">&quot;http&quot;</span></span><br><span class=\"line\">41 / premiumize.me</span><br><span class=\"line\">   \\ <span class=\"string\">&quot;premiumizeme&quot;</span></span><br><span class=\"line\">42 / seafile</span><br><span class=\"line\">   \\ <span class=\"string\">&quot;seafile&quot;</span></span><br><span class=\"line\">Storage&gt; </span><br></pre></td></tr></table></figure>\n\n<p>MinIO 属于 S3协议的对象存储，我这里选择 <code>4</code> 。进行下一步子类型选择</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">Storage&gt; 4</span><br><span class=\"line\">** See <span class=\"built_in\">help</span> <span class=\"keyword\">for</span> s3 backend at: https://rclone.org/s3/ **</span><br><span class=\"line\"></span><br><span class=\"line\">Choose your S3 provider.</span><br><span class=\"line\">Enter a string value. Press Enter <span class=\"keyword\">for</span> the default (<span class=\"string\">&quot;&quot;</span>).</span><br><span class=\"line\">Choose a number from below, or <span class=\"built_in\">type</span> <span class=\"keyword\">in</span> your own value</span><br><span class=\"line\"> 1 / Amazon Web Services (AWS) S3</span><br><span class=\"line\">   \\ <span class=\"string\">&quot;AWS&quot;</span></span><br><span class=\"line\"> 2 / Alibaba Cloud Object Storage System (OSS) formerly Aliyun</span><br><span class=\"line\">   \\ <span class=\"string\">&quot;Alibaba&quot;</span></span><br><span class=\"line\"> 3 / Ceph Object Storage</span><br><span class=\"line\">   \\ <span class=\"string\">&quot;Ceph&quot;</span></span><br><span class=\"line\"> 4 / Digital Ocean Spaces</span><br><span class=\"line\">   \\ <span class=\"string\">&quot;DigitalOcean&quot;</span></span><br><span class=\"line\"> 5 / Dreamhost DreamObjects</span><br><span class=\"line\">   \\ <span class=\"string\">&quot;Dreamhost&quot;</span></span><br><span class=\"line\"> 6 / IBM COS S3</span><br><span class=\"line\">   \\ <span class=\"string\">&quot;IBMCOS&quot;</span></span><br><span class=\"line\"> 7 / Minio Object Storage</span><br><span class=\"line\">   \\ <span class=\"string\">&quot;Minio&quot;</span></span><br><span class=\"line\"> 8 / Netease Object Storage (NOS)</span><br><span class=\"line\">   \\ <span class=\"string\">&quot;Netease&quot;</span></span><br><span class=\"line\"> 9 / Scaleway Object Storage</span><br><span class=\"line\">   \\ <span class=\"string\">&quot;Scaleway&quot;</span></span><br><span class=\"line\">10 / StackPath Object Storage</span><br><span class=\"line\">   \\ <span class=\"string\">&quot;StackPath&quot;</span></span><br><span class=\"line\">11 / Tencent Cloud Object Storage (COS)</span><br><span class=\"line\">   \\ <span class=\"string\">&quot;TencentCOS&quot;</span></span><br><span class=\"line\">12 / Wasabi Object Storage</span><br><span class=\"line\">   \\ <span class=\"string\">&quot;Wasabi&quot;</span></span><br><span class=\"line\">13 / Any other S3 compatible provider</span><br><span class=\"line\">   \\ <span class=\"string\">&quot;Other&quot;</span></span><br><span class=\"line\">provider&gt; </span><br></pre></td></tr></table></figure>\n\n<p>MinIO 对象存储为第 7 项，输入 <code>7</code> 。</p>\n<h2 id=\"3-获取实时-S3-存储凭据\"><a href=\"#3-获取实时-S3-存储凭据\" class=\"headerlink\" title=\"3. 获取实时 S3 存储凭据\"></a>3. 获取实时 S3 存储凭据</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">provider&gt; 7</span><br><span class=\"line\">Get AWS credentials from runtime (environment variables or EC2/ECS meta data <span class=\"keyword\">if</span> no env vars).</span><br><span class=\"line\">Only applies <span class=\"keyword\">if</span> access_key_id and secret_access_key is blank.</span><br><span class=\"line\">Enter a boolean value (<span class=\"literal\">true</span> or <span class=\"literal\">false</span>). Press Enter <span class=\"keyword\">for</span> the default (<span class=\"string\">&quot;false&quot;</span>).</span><br><span class=\"line\">Choose a number from below, or <span class=\"built_in\">type</span> <span class=\"keyword\">in</span> your own value</span><br><span class=\"line\"> 1 / Enter AWS credentials <span class=\"keyword\">in</span> the next step</span><br><span class=\"line\">   \\ <span class=\"string\">&quot;false&quot;</span></span><br><span class=\"line\"> 2 / Get AWS credentials from the environment (env vars or IAM)</span><br><span class=\"line\">   \\ <span class=\"string\">&quot;true&quot;</span></span><br><span class=\"line\">env_auth&gt; </span><br></pre></td></tr></table></figure>\n\n<p>我们使用 MinIO id 和 密码验证方式，这个不用管。直接回车，rclone 下一秒便会要求输入 <code>access_key_id</code> 和 <code>secret_access_key</code> 。</p>\n<h2 id=\"4-输入-账号-和-密钥\"><a href=\"#4-输入-账号-和-密钥\" class=\"headerlink\" title=\"4. 输入 账号 和 密钥\"></a>4. 输入 账号 和 密钥</h2><p>首先，输入账号，也就是 <code>access_key_id</code></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">env_auth&gt; </span><br><span class=\"line\">AWS Access Key ID.</span><br><span class=\"line\">Leave blank <span class=\"keyword\">for</span> anonymous access or runtime credentials.</span><br><span class=\"line\">Enter a string value. Press Enter <span class=\"keyword\">for</span> the default (<span class=\"string\">&quot;&quot;</span>).</span><br><span class=\"line\">access_key_id&gt; </span><br></pre></td></tr></table></figure>\n\n<p>我这里的账号名是 <code>myname</code> ，然后输入密钥：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">access_key_id&gt; myname</span><br><span class=\"line\">AWS Secret Access Key (password)</span><br><span class=\"line\">Leave blank <span class=\"keyword\">for</span> anonymous access or runtime credentials.</span><br><span class=\"line\">Enter a string value. Press Enter <span class=\"keyword\">for</span> the default (<span class=\"string\">&quot;&quot;</span>).</span><br><span class=\"line\">secret_access_key&gt; mypassword</span><br></pre></td></tr></table></figure>\n\n<p>这里我们密钥是 <code>mypassword</code></p>\n<h2 id=\"5-选择连接区域\"><a href=\"#5-选择连接区域\" class=\"headerlink\" title=\"5. 选择连接区域\"></a>5. 选择连接区域</h2><p>S3 存储协议支持指定存储区域。比如腾讯云就有广州、南京、上海、重庆、四川等区域。我们这里使用的MinIO只有本地一个区域，所以不用选择，直接回车跳过。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">secret_access_key&gt; mypassword</span><br><span class=\"line\">Region to connect to.</span><br><span class=\"line\">Leave blank <span class=\"keyword\">if</span> you are using an S3 <span class=\"built_in\">clone</span> and you don<span class=\"string\">&#x27;t have a region.</span></span><br><span class=\"line\"><span class=\"string\">Enter a string value. Press Enter for the default (&quot;&quot;).</span></span><br><span class=\"line\"><span class=\"string\">Choose a number from below, or type in your own value</span></span><br><span class=\"line\"><span class=\"string\"> 1 / Use this if unsure. Will use v4 signatures and an empty region.</span></span><br><span class=\"line\"><span class=\"string\">   \\ &quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\"> 2 / Use this only if v4 signatures don&#x27;</span>t work, e.g. pre Jewel/v10 CEPH.</span><br><span class=\"line\">   \\ <span class=\"string\">&quot;other-v2-signature&quot;</span></span><br><span class=\"line\">region&gt; </span><br></pre></td></tr></table></figure>\n\n<h2 id=\"6-输入接入点URL\"><a href=\"#6-输入接入点URL\" class=\"headerlink\" title=\"6. 输入接入点URL\"></a>6. 输入接入点URL</h2><p>我这里MinIO的接入点位于本地，URL是 <code>http://localhost:9000</code> 。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">region&gt; </span><br><span class=\"line\">Endpoint <span class=\"keyword\">for</span> S3 API.</span><br><span class=\"line\">Required when using an S3 <span class=\"built_in\">clone</span>.</span><br><span class=\"line\">Enter a string value. Press Enter <span class=\"keyword\">for</span> the default (<span class=\"string\">&quot;&quot;</span>).</span><br><span class=\"line\">Choose a number from below, or <span class=\"built_in\">type</span> <span class=\"keyword\">in</span> your own value</span><br><span class=\"line\">endpoint&gt; </span><br></pre></td></tr></table></figure>\n\n<h2 id=\"7-位置约束设置\"><a href=\"#7-位置约束设置\" class=\"headerlink\" title=\"7. 位置约束设置\"></a>7. 位置约束设置</h2><p>这个选项与第5部中的区域向对应，我们第5步没有，所以这一步也没有。直接回车跳过</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">endpoint&gt; http://localhost:9000</span><br><span class=\"line\">Location constraint - must be <span class=\"built_in\">set</span> to match the Region.</span><br><span class=\"line\">Leave blank <span class=\"keyword\">if</span> not sure. Used when creating buckets only.</span><br><span class=\"line\">Enter a string value. Press Enter <span class=\"keyword\">for</span> the default (<span class=\"string\">&quot;&quot;</span>).</span><br><span class=\"line\">location_constraint&gt; </span><br></pre></td></tr></table></figure>\n\n<h2 id=\"8-ACL-访问控制权限设置\"><a href=\"#8-ACL-访问控制权限设置\" class=\"headerlink\" title=\"8. ACL 访问控制权限设置\"></a>8. ACL 访问控制权限设置</h2><p>用于在 linux 系统中分配权限。我们这里选择默认的 <code>1 &quot;private&quot;</code> ，私人，只允许自己读写。如果你想为本系统中的同组用户或其他用户使用这个节点提供权限，可以选择其他选项。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">location_constraint&gt; </span><br><span class=\"line\">Canned ACL used when creating buckets and storing or copying objects.</span><br><span class=\"line\"></span><br><span class=\"line\">This ACL is used <span class=\"keyword\">for</span> creating objects and <span class=\"keyword\">if</span> bucket_acl isn<span class=\"string\">&#x27;t set, for creating buckets too.</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">For more info visit https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#canned-acl</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">Note that this ACL is applied when server-side copying objects as S3</span></span><br><span class=\"line\"><span class=\"string\">doesn&#x27;</span>t copy the ACL from the <span class=\"built_in\">source</span> but rather writes a fresh one.</span><br><span class=\"line\">Enter a string value. Press Enter <span class=\"keyword\">for</span> the default (<span class=\"string\">&quot;&quot;</span>).</span><br><span class=\"line\">Choose a number from below, or <span class=\"built_in\">type</span> <span class=\"keyword\">in</span> your own value</span><br><span class=\"line\"> 1 / Owner gets FULL_CONTROL. No one <span class=\"keyword\">else</span> has access rights (default).</span><br><span class=\"line\">   \\ <span class=\"string\">&quot;private&quot;</span></span><br><span class=\"line\"> 2 / Owner gets FULL_CONTROL. The AllUsers group gets READ access.</span><br><span class=\"line\">   \\ <span class=\"string\">&quot;public-read&quot;</span></span><br><span class=\"line\">   / Owner gets FULL_CONTROL. The AllUsers group gets READ and WRITE access.</span><br><span class=\"line\"> 3 | Granting this on a bucket is generally not recommended.</span><br><span class=\"line\">   \\ <span class=\"string\">&quot;public-read-write&quot;</span></span><br><span class=\"line\"> 4 / Owner gets FULL_CONTROL. The AuthenticatedUsers group gets READ access.</span><br><span class=\"line\">   \\ <span class=\"string\">&quot;authenticated-read&quot;</span></span><br><span class=\"line\">   / Object owner gets FULL_CONTROL. Bucket owner gets READ access.</span><br><span class=\"line\"> 5 | If you specify this canned ACL when creating a bucket, Amazon S3 ignores it.</span><br><span class=\"line\">   \\ <span class=\"string\">&quot;bucket-owner-read&quot;</span></span><br><span class=\"line\">   / Both the object owner and the bucket owner get FULL_CONTROL over the object.</span><br><span class=\"line\"> 6 | If you specify this canned ACL when creating a bucket, Amazon S3 ignores it.</span><br><span class=\"line\">   \\ <span class=\"string\">&quot;bucket-owner-full-control&quot;</span></span><br><span class=\"line\">acl&gt; </span><br></pre></td></tr></table></figure>\n\n<h2 id=\"9-服务端加密设置\"><a href=\"#9-服务端加密设置\" class=\"headerlink\" title=\"9. 服务端加密设置\"></a>9. 服务端加密设置</h2><p>大部分对象存储都支持在服务端对用户数据进行加密，所以 rclone 也提供了对应选项。下面提供了 <strong>AES256</strong> 和 <strong>aws:kms</strong> 两种加密方式</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">acl&gt; </span><br><span class=\"line\">The server-side encryption algorithm used when storing this object <span class=\"keyword\">in</span> S3.</span><br><span class=\"line\">Enter a string value. Press Enter <span class=\"keyword\">for</span> the default (<span class=\"string\">&quot;&quot;</span>).</span><br><span class=\"line\">Choose a number from below, or <span class=\"built_in\">type</span> <span class=\"keyword\">in</span> your own value</span><br><span class=\"line\"> 1 / None</span><br><span class=\"line\">   \\ <span class=\"string\">&quot;&quot;</span></span><br><span class=\"line\"> 2 / AES256</span><br><span class=\"line\">   \\ <span class=\"string\">&quot;AES256&quot;</span></span><br><span class=\"line\"> 3 / aws:kms</span><br><span class=\"line\">   \\ <span class=\"string\">&quot;aws:kms&quot;</span></span><br><span class=\"line\">server_side_encryption&gt; </span><br></pre></td></tr></table></figure>\n\n<p>这里我们不使用服务的加密，直接回车跳过</p>\n<h2 id=\"10-kms-密钥区域选择\"><a href=\"#10-kms-密钥区域选择\" class=\"headerlink\" title=\"10. kms 密钥区域选择\"></a>10. kms 密钥区域选择</h2><p>如果你上一步选择了 <code>3 aws:kms</code>，则这一步选择加密密钥对应的区域。由于我这里没有选择加密，所以直接回车跳过</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">server_side_encryption&gt; </span><br><span class=\"line\">If using KMS ID you must provide the ARN of Key.</span><br><span class=\"line\">Enter a string value. Press Enter <span class=\"keyword\">for</span> the default (<span class=\"string\">&quot;&quot;</span>).</span><br><span class=\"line\">Choose a number from below, or <span class=\"built_in\">type</span> <span class=\"keyword\">in</span> your own value</span><br><span class=\"line\"> 1 / None</span><br><span class=\"line\">   \\ <span class=\"string\">&quot;&quot;</span></span><br><span class=\"line\"> 2 / arn:aws:kms:*</span><br><span class=\"line\">   \\ <span class=\"string\">&quot;arn:aws:kms:us-east-1:*&quot;</span></span><br><span class=\"line\">sse_kms_key_id&gt; </span><br></pre></td></tr></table></figure>\n\n<h2 id=\"11-高级配置\"><a href=\"#11-高级配置\" class=\"headerlink\" title=\"11. 高级配置\"></a>11. 高级配置</h2><p>通常来说，上面的配置已经够用了，这里我不需要高级配置，直接跳过。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">sse_kms_key_id&gt; </span><br><span class=\"line\">Edit advanced config? (y/n)</span><br><span class=\"line\">y) Yes</span><br><span class=\"line\">n) No (default)</span><br><span class=\"line\">y/n&gt; </span><br></pre></td></tr></table></figure>\n\n<h2 id=\"12-配置确认\"><a href=\"#12-配置确认\" class=\"headerlink\" title=\"12. 配置确认\"></a>12. 配置确认</h2><p>完成以上配置后，你还可以对其进行修改或者删除。这里我配置好了，直接回车确认。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">y/n&gt; </span><br><span class=\"line\">Remote config</span><br><span class=\"line\">--------------------</span><br><span class=\"line\">[miniolocal]</span><br><span class=\"line\"><span class=\"built_in\">type</span> = s3</span><br><span class=\"line\">provider = Minio</span><br><span class=\"line\">access_key_id = mynane</span><br><span class=\"line\">secret_access_key = mypassword</span><br><span class=\"line\">endpoint = http://localhost:9000</span><br><span class=\"line\">--------------------</span><br><span class=\"line\">y) Yes this is OK (default)</span><br><span class=\"line\">e) Edit this remote</span><br><span class=\"line\">d) Delete this remote</span><br><span class=\"line\">y/e/d&gt; </span><br></pre></td></tr></table></figure>\n\n<h2 id=\"13-选择功能\"><a href=\"#13-选择功能\" class=\"headerlink\" title=\"13. 选择功能\"></a>13. 选择功能</h2><p>上一步完成后，会回到初始的功能菜单。这里我们已经配置完了，输入 q 退出即可。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">y/e/d&gt; </span><br><span class=\"line\">Current remotes:</span><br><span class=\"line\"></span><br><span class=\"line\">Name                 Type</span><br><span class=\"line\">``                 ``</span><br><span class=\"line\">miniolocal           s3</span><br><span class=\"line\"></span><br><span class=\"line\">e) Edit existing remote</span><br><span class=\"line\">n) New remote</span><br><span class=\"line\">d) Delete remote</span><br><span class=\"line\">r) Rename remote</span><br><span class=\"line\">c) Copy remote</span><br><span class=\"line\">s) Set configuration password</span><br><span class=\"line\">q) Quit config</span><br><span class=\"line\">e/n/d/r/c/s/q&gt; q</span><br><span class=\"line\">[user@localhost ~]$</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"完整配置过程\"><a href=\"#完整配置过程\" class=\"headerlink\" title=\"完整配置过程\"></a>完整配置过程</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">[user@localhost ~]$ rclone config</span><br><span class=\"line\">2021/07/12 21:18:21 NOTICE: Config file <span class=\"string\">&quot;/home/jiakun/.config/rclone/rclone.conf&quot;</span> not found - using defaults</span><br><span class=\"line\">No remotes found - make a new one</span><br><span class=\"line\">n) New remote</span><br><span class=\"line\">s) Set configuration password</span><br><span class=\"line\">q) Quit config</span><br><span class=\"line\">n/s/q&gt; n</span><br><span class=\"line\">name&gt; miniolocal</span><br><span class=\"line\">Type of storage to configure.</span><br><span class=\"line\">Enter a string value. Press Enter <span class=\"keyword\">for</span> the default (<span class=\"string\">&quot;&quot;</span>).</span><br><span class=\"line\">Choose a number from below, or <span class=\"built_in\">type</span> <span class=\"keyword\">in</span> your own value</span><br><span class=\"line\"> 1 / 1Fichier</span><br><span class=\"line\">   \\ <span class=\"string\">&quot;fichier&quot;</span></span><br><span class=\"line\"> 2 / Alias <span class=\"keyword\">for</span> an existing remote</span><br><span class=\"line\">   \\ <span class=\"string\">&quot;alias&quot;</span></span><br><span class=\"line\"> 3 / Amazon Drive</span><br><span class=\"line\">   \\ <span class=\"string\">&quot;amazon cloud drive&quot;</span></span><br><span class=\"line\"> 4 / Amazon S3 Compliant Storage Providers including AWS, Alibaba, Ceph, Digital Ocean, Dreamhost, IBM COS, Minio, and Tencent COS</span><br><span class=\"line\">   \\ <span class=\"string\">&quot;s3&quot;</span></span><br><span class=\"line\"> 5 / Backblaze B2</span><br><span class=\"line\">   \\ <span class=\"string\">&quot;b2&quot;</span></span><br><span class=\"line\"> 6 / Box</span><br><span class=\"line\">   \\ <span class=\"string\">&quot;box&quot;</span></span><br><span class=\"line\"> 7 / Cache a remote</span><br><span class=\"line\">   \\ <span class=\"string\">&quot;cache&quot;</span></span><br><span class=\"line\"> 8 / Citrix Sharefile</span><br><span class=\"line\">   \\ <span class=\"string\">&quot;sharefile&quot;</span></span><br><span class=\"line\"> 9 / Compress a remote</span><br><span class=\"line\">   \\ <span class=\"string\">&quot;compress&quot;</span></span><br><span class=\"line\">10 / Dropbox</span><br><span class=\"line\">   \\ <span class=\"string\">&quot;dropbox&quot;</span></span><br><span class=\"line\">11 / Encrypt/Decrypt a remote</span><br><span class=\"line\">   \\ <span class=\"string\">&quot;crypt&quot;</span></span><br><span class=\"line\">12 / Enterprise File Fabric</span><br><span class=\"line\">   \\ <span class=\"string\">&quot;filefabric&quot;</span></span><br><span class=\"line\">13 / FTP Connection</span><br><span class=\"line\">   \\ <span class=\"string\">&quot;ftp&quot;</span></span><br><span class=\"line\">14 / Google Cloud Storage (this is not Google Drive)</span><br><span class=\"line\">   \\ <span class=\"string\">&quot;google cloud storage&quot;</span></span><br><span class=\"line\">15 / Google Drive</span><br><span class=\"line\">   \\ <span class=\"string\">&quot;drive&quot;</span></span><br><span class=\"line\">16 / Google Photos</span><br><span class=\"line\">   \\ <span class=\"string\">&quot;google photos&quot;</span></span><br><span class=\"line\">17 / Hadoop distributed file system</span><br><span class=\"line\">   \\ <span class=\"string\">&quot;hdfs&quot;</span></span><br><span class=\"line\">18 / Hubic</span><br><span class=\"line\">   \\ <span class=\"string\">&quot;hubic&quot;</span></span><br><span class=\"line\">19 / In memory object storage system.</span><br><span class=\"line\">   \\ <span class=\"string\">&quot;memory&quot;</span></span><br><span class=\"line\">20 / Jottacloud</span><br><span class=\"line\">   \\ <span class=\"string\">&quot;jottacloud&quot;</span></span><br><span class=\"line\">21 / Koofr</span><br><span class=\"line\">   \\ <span class=\"string\">&quot;koofr&quot;</span></span><br><span class=\"line\">22 / Local Disk</span><br><span class=\"line\">   \\ <span class=\"string\">&quot;local&quot;</span></span><br><span class=\"line\">23 / Mail.ru Cloud</span><br><span class=\"line\">   \\ <span class=\"string\">&quot;mailru&quot;</span></span><br><span class=\"line\">24 / Mega</span><br><span class=\"line\">   \\ <span class=\"string\">&quot;mega&quot;</span></span><br><span class=\"line\">25 / Microsoft Azure Blob Storage</span><br><span class=\"line\">   \\ <span class=\"string\">&quot;azureblob&quot;</span></span><br><span class=\"line\">26 / Microsoft OneDrive</span><br><span class=\"line\">   \\ <span class=\"string\">&quot;onedrive&quot;</span></span><br><span class=\"line\">27 / OpenDrive</span><br><span class=\"line\">   \\ <span class=\"string\">&quot;opendrive&quot;</span></span><br><span class=\"line\">28 / OpenStack Swift (Rackspace Cloud Files, Memset Memstore, OVH)</span><br><span class=\"line\">   \\ <span class=\"string\">&quot;swift&quot;</span></span><br><span class=\"line\">29 / Pcloud</span><br><span class=\"line\">   \\ <span class=\"string\">&quot;pcloud&quot;</span></span><br><span class=\"line\">30 / Put.io</span><br><span class=\"line\">   \\ <span class=\"string\">&quot;putio&quot;</span></span><br><span class=\"line\">31 / QingCloud Object Storage</span><br><span class=\"line\">   \\ <span class=\"string\">&quot;qingstor&quot;</span></span><br><span class=\"line\">32 / SSH/SFTP Connection</span><br><span class=\"line\">   \\ <span class=\"string\">&quot;sftp&quot;</span></span><br><span class=\"line\">33 / Sugarsync</span><br><span class=\"line\">   \\ <span class=\"string\">&quot;sugarsync&quot;</span></span><br><span class=\"line\">34 / Tardigrade Decentralized Cloud Storage</span><br><span class=\"line\">   \\ <span class=\"string\">&quot;tardigrade&quot;</span></span><br><span class=\"line\">35 / Transparently chunk/split large files</span><br><span class=\"line\">   \\ <span class=\"string\">&quot;chunker&quot;</span></span><br><span class=\"line\">36 / Union merges the contents of several upstream fs</span><br><span class=\"line\">   \\ <span class=\"string\">&quot;union&quot;</span></span><br><span class=\"line\">37 / Webdav</span><br><span class=\"line\">   \\ <span class=\"string\">&quot;webdav&quot;</span></span><br><span class=\"line\">38 / Yandex Disk</span><br><span class=\"line\">   \\ <span class=\"string\">&quot;yandex&quot;</span></span><br><span class=\"line\">39 / Zoho</span><br><span class=\"line\">   \\ <span class=\"string\">&quot;zoho&quot;</span></span><br><span class=\"line\">40 / http Connection</span><br><span class=\"line\">   \\ <span class=\"string\">&quot;http&quot;</span></span><br><span class=\"line\">41 / premiumize.me</span><br><span class=\"line\">   \\ <span class=\"string\">&quot;premiumizeme&quot;</span></span><br><span class=\"line\">42 / seafile</span><br><span class=\"line\">   \\ <span class=\"string\">&quot;seafile&quot;</span></span><br><span class=\"line\">Storage&gt; 4</span><br><span class=\"line\">** See <span class=\"built_in\">help</span> <span class=\"keyword\">for</span> s3 backend at: https://rclone.org/s3/ **</span><br><span class=\"line\"></span><br><span class=\"line\">Choose your S3 provider.</span><br><span class=\"line\">Enter a string value. Press Enter <span class=\"keyword\">for</span> the default (<span class=\"string\">&quot;&quot;</span>).</span><br><span class=\"line\">Choose a number from below, or <span class=\"built_in\">type</span> <span class=\"keyword\">in</span> your own value</span><br><span class=\"line\"> 1 / Amazon Web Services (AWS) S3</span><br><span class=\"line\">   \\ <span class=\"string\">&quot;AWS&quot;</span></span><br><span class=\"line\"> 2 / Alibaba Cloud Object Storage System (OSS) formerly Aliyun</span><br><span class=\"line\">   \\ <span class=\"string\">&quot;Alibaba&quot;</span></span><br><span class=\"line\"> 3 / Ceph Object Storage</span><br><span class=\"line\">   \\ <span class=\"string\">&quot;Ceph&quot;</span></span><br><span class=\"line\"> 4 / Digital Ocean Spaces</span><br><span class=\"line\">   \\ <span class=\"string\">&quot;DigitalOcean&quot;</span></span><br><span class=\"line\"> 5 / Dreamhost DreamObjects</span><br><span class=\"line\">   \\ <span class=\"string\">&quot;Dreamhost&quot;</span></span><br><span class=\"line\"> 6 / IBM COS S3</span><br><span class=\"line\">   \\ <span class=\"string\">&quot;IBMCOS&quot;</span></span><br><span class=\"line\"> 7 / Minio Object Storage</span><br><span class=\"line\">   \\ <span class=\"string\">&quot;Minio&quot;</span></span><br><span class=\"line\"> 8 / Netease Object Storage (NOS)</span><br><span class=\"line\">   \\ <span class=\"string\">&quot;Netease&quot;</span></span><br><span class=\"line\"> 9 / Scaleway Object Storage</span><br><span class=\"line\">   \\ <span class=\"string\">&quot;Scaleway&quot;</span></span><br><span class=\"line\">10 / StackPath Object Storage</span><br><span class=\"line\">   \\ <span class=\"string\">&quot;StackPath&quot;</span></span><br><span class=\"line\">11 / Tencent Cloud Object Storage (COS)</span><br><span class=\"line\">   \\ <span class=\"string\">&quot;TencentCOS&quot;</span></span><br><span class=\"line\">12 / Wasabi Object Storage</span><br><span class=\"line\">   \\ <span class=\"string\">&quot;Wasabi&quot;</span></span><br><span class=\"line\">13 / Any other S3 compatible provider</span><br><span class=\"line\">   \\ <span class=\"string\">&quot;Other&quot;</span></span><br><span class=\"line\">provider&gt; 7</span><br><span class=\"line\">Get AWS credentials from runtime (environment variables or EC2/ECS meta data <span class=\"keyword\">if</span> no env vars).</span><br><span class=\"line\">Only applies <span class=\"keyword\">if</span> access_key_id and secret_access_key is blank.</span><br><span class=\"line\">Enter a boolean value (<span class=\"literal\">true</span> or <span class=\"literal\">false</span>). Press Enter <span class=\"keyword\">for</span> the default (<span class=\"string\">&quot;false&quot;</span>).</span><br><span class=\"line\">Choose a number from below, or <span class=\"built_in\">type</span> <span class=\"keyword\">in</span> your own value</span><br><span class=\"line\"> 1 / Enter AWS credentials <span class=\"keyword\">in</span> the next step</span><br><span class=\"line\">   \\ <span class=\"string\">&quot;false&quot;</span></span><br><span class=\"line\"> 2 / Get AWS credentials from the environment (env vars or IAM)</span><br><span class=\"line\">   \\ <span class=\"string\">&quot;true&quot;</span></span><br><span class=\"line\">env_auth&gt; </span><br><span class=\"line\">AWS Access Key ID.</span><br><span class=\"line\">Leave blank <span class=\"keyword\">for</span> anonymous access or runtime credentials.</span><br><span class=\"line\">Enter a string value. Press Enter <span class=\"keyword\">for</span> the default (<span class=\"string\">&quot;&quot;</span>).</span><br><span class=\"line\">access_key_id&gt; myname</span><br><span class=\"line\">AWS Secret Access Key (password)</span><br><span class=\"line\">Leave blank <span class=\"keyword\">for</span> anonymous access or runtime credentials.</span><br><span class=\"line\">Enter a string value. Press Enter <span class=\"keyword\">for</span> the default (<span class=\"string\">&quot;&quot;</span>).</span><br><span class=\"line\">secret_access_key&gt; mypassword</span><br><span class=\"line\">Region to connect to.</span><br><span class=\"line\">Leave blank <span class=\"keyword\">if</span> you are using an S3 <span class=\"built_in\">clone</span> and you don<span class=\"string\">&#x27;t have a region.</span></span><br><span class=\"line\"><span class=\"string\">Enter a string value. Press Enter for the default (&quot;&quot;).</span></span><br><span class=\"line\"><span class=\"string\">Choose a number from below, or type in your own value</span></span><br><span class=\"line\"><span class=\"string\"> 1 / Use this if unsure. Will use v4 signatures and an empty region.</span></span><br><span class=\"line\"><span class=\"string\">   \\ &quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\"> 2 / Use this only if v4 signatures don&#x27;</span>t work, e.g. pre Jewel/v10 CEPH.</span><br><span class=\"line\">   \\ <span class=\"string\">&quot;other-v2-signature&quot;</span></span><br><span class=\"line\">region&gt; </span><br><span class=\"line\">Endpoint <span class=\"keyword\">for</span> S3 API.</span><br><span class=\"line\">Required when using an S3 <span class=\"built_in\">clone</span>.</span><br><span class=\"line\">Enter a string value. Press Enter <span class=\"keyword\">for</span> the default (<span class=\"string\">&quot;&quot;</span>).</span><br><span class=\"line\">Choose a number from below, or <span class=\"built_in\">type</span> <span class=\"keyword\">in</span> your own value</span><br><span class=\"line\">endpoint&gt; http://localhost:9000</span><br><span class=\"line\">Location constraint - must be <span class=\"built_in\">set</span> to match the Region.</span><br><span class=\"line\">Leave blank <span class=\"keyword\">if</span> not sure. Used when creating buckets only.</span><br><span class=\"line\">Enter a string value. Press Enter <span class=\"keyword\">for</span> the default (<span class=\"string\">&quot;&quot;</span>).</span><br><span class=\"line\">location_constraint&gt; </span><br><span class=\"line\">Canned ACL used when creating buckets and storing or copying objects.</span><br><span class=\"line\"></span><br><span class=\"line\">This ACL is used <span class=\"keyword\">for</span> creating objects and <span class=\"keyword\">if</span> bucket_acl isn<span class=\"string\">&#x27;t set, for creating buckets too.</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">For more info visit https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#canned-acl</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">Note that this ACL is applied when server-side copying objects as S3</span></span><br><span class=\"line\"><span class=\"string\">doesn&#x27;</span>t copy the ACL from the <span class=\"built_in\">source</span> but rather writes a fresh one.</span><br><span class=\"line\">Enter a string value. Press Enter <span class=\"keyword\">for</span> the default (<span class=\"string\">&quot;&quot;</span>).</span><br><span class=\"line\">Choose a number from below, or <span class=\"built_in\">type</span> <span class=\"keyword\">in</span> your own value</span><br><span class=\"line\"> 1 / Owner gets FULL_CONTROL. No one <span class=\"keyword\">else</span> has access rights (default).</span><br><span class=\"line\">   \\ <span class=\"string\">&quot;private&quot;</span></span><br><span class=\"line\"> 2 / Owner gets FULL_CONTROL. The AllUsers group gets READ access.</span><br><span class=\"line\">   \\ <span class=\"string\">&quot;public-read&quot;</span></span><br><span class=\"line\">   / Owner gets FULL_CONTROL. The AllUsers group gets READ and WRITE access.</span><br><span class=\"line\"> 3 | Granting this on a bucket is generally not recommended.</span><br><span class=\"line\">   \\ <span class=\"string\">&quot;public-read-write&quot;</span></span><br><span class=\"line\"> 4 / Owner gets FULL_CONTROL. The AuthenticatedUsers group gets READ access.</span><br><span class=\"line\">   \\ <span class=\"string\">&quot;authenticated-read&quot;</span></span><br><span class=\"line\">   / Object owner gets FULL_CONTROL. Bucket owner gets READ access.</span><br><span class=\"line\"> 5 | If you specify this canned ACL when creating a bucket, Amazon S3 ignores it.</span><br><span class=\"line\">   \\ <span class=\"string\">&quot;bucket-owner-read&quot;</span></span><br><span class=\"line\">   / Both the object owner and the bucket owner get FULL_CONTROL over the object.</span><br><span class=\"line\"> 6 | If you specify this canned ACL when creating a bucket, Amazon S3 ignores it.</span><br><span class=\"line\">   \\ <span class=\"string\">&quot;bucket-owner-full-control&quot;</span></span><br><span class=\"line\">acl&gt; </span><br><span class=\"line\">The server-side encryption algorithm used when storing this object <span class=\"keyword\">in</span> S3.</span><br><span class=\"line\">Enter a string value. Press Enter <span class=\"keyword\">for</span> the default (<span class=\"string\">&quot;&quot;</span>).</span><br><span class=\"line\">Choose a number from below, or <span class=\"built_in\">type</span> <span class=\"keyword\">in</span> your own value</span><br><span class=\"line\"> 1 / None</span><br><span class=\"line\">   \\ <span class=\"string\">&quot;&quot;</span></span><br><span class=\"line\"> 2 / AES256</span><br><span class=\"line\">   \\ <span class=\"string\">&quot;AES256&quot;</span></span><br><span class=\"line\"> 3 / aws:kms</span><br><span class=\"line\">   \\ <span class=\"string\">&quot;aws:kms&quot;</span></span><br><span class=\"line\">server_side_encryption&gt; </span><br><span class=\"line\">If using KMS ID you must provide the ARN of Key.</span><br><span class=\"line\">Enter a string value. Press Enter <span class=\"keyword\">for</span> the default (<span class=\"string\">&quot;&quot;</span>).</span><br><span class=\"line\">Choose a number from below, or <span class=\"built_in\">type</span> <span class=\"keyword\">in</span> your own value</span><br><span class=\"line\"> 1 / None</span><br><span class=\"line\">   \\ <span class=\"string\">&quot;&quot;</span></span><br><span class=\"line\"> 2 / arn:aws:kms:*</span><br><span class=\"line\">   \\ <span class=\"string\">&quot;arn:aws:kms:us-east-1:*&quot;</span></span><br><span class=\"line\">sse_kms_key_id&gt; </span><br><span class=\"line\">Edit advanced config? (y/n)</span><br><span class=\"line\">y) Yes</span><br><span class=\"line\">n) No (default)</span><br><span class=\"line\">y/n&gt; </span><br><span class=\"line\">Remote config</span><br><span class=\"line\">--------------------</span><br><span class=\"line\">[miniolocal]</span><br><span class=\"line\"><span class=\"built_in\">type</span> = s3</span><br><span class=\"line\">provider = Minio</span><br><span class=\"line\">access_key_id = mynane</span><br><span class=\"line\">secret_access_key = mypassword</span><br><span class=\"line\">endpoint = http://localhost:9000</span><br><span class=\"line\">--------------------</span><br><span class=\"line\">y) Yes this is OK (default)</span><br><span class=\"line\">e) Edit this remote</span><br><span class=\"line\">d) Delete this remote</span><br><span class=\"line\">y/e/d&gt; </span><br><span class=\"line\">Current remotes:</span><br><span class=\"line\"></span><br><span class=\"line\">Name                 Type</span><br><span class=\"line\">``                 ``</span><br><span class=\"line\">miniolocal           s3</span><br><span class=\"line\"></span><br><span class=\"line\">e) Edit existing remote</span><br><span class=\"line\">n) New remote</span><br><span class=\"line\">d) Delete remote</span><br><span class=\"line\">r) Rename remote</span><br><span class=\"line\">c) Copy remote</span><br><span class=\"line\">s) Set configuration password</span><br><span class=\"line\">q) Quit config</span><br><span class=\"line\">e/n/d/r/c/s/q&gt; q</span><br><span class=\"line\">[user@localhost ~]$</span><br></pre></td></tr></table></figure>\n\n<p>这会在 <code>~/.config/rclone/rclone.conf</code> 配置文件中添加如下节点配置：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">[user@localhost rclone]$ cat ~/.config/rclone/rclone.conf </span><br><span class=\"line\">[miniolocal]</span><br><span class=\"line\"><span class=\"built_in\">type</span> = s3</span><br><span class=\"line\">provider = Minio</span><br><span class=\"line\">access_key_id = myname</span><br><span class=\"line\">secret_access_key = mypassword</span><br><span class=\"line\">endpoint = http://localhost:9000</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<h1 id=\"5-配置腾讯云COS节点\"><a href=\"#5-配置腾讯云COS节点\" class=\"headerlink\" title=\"5. 配置腾讯云COS节点\"></a>5. 配置腾讯云COS节点</h1><h2 id=\"5-1-创建腾讯云COS子账号\"><a href=\"#5-1-创建腾讯云COS子账号\" class=\"headerlink\" title=\"5.1 创建腾讯云COS子账号\"></a>5.1 创建腾讯云COS子账号</h2><p>建议使用子账号保护云资源。这里只需要一个对源存储桶拥有 <strong>只读</strong> 权限的子账号即可。</p>\n<h2 id=\"5-2-授予子账号存储桶读取权限\"><a href=\"#5-2-授予子账号存储桶读取权限\" class=\"headerlink\" title=\"5.2 授予子账号存储桶读取权限\"></a>5.2 授予子账号存储桶读取权限</h2><p>在腾讯云中进入 <code>控制台</code> &gt; <code>对象存储</code> &gt; <code>存储桶列表</code> &gt; 你要同步的存储桶</p>\n<p><img src=\"https://raw.githubusercontent.com/ryjer/imgbed/master/images/20210722192926-5696ed1984688e7ab0852e97e373cc05-9935b36e.png\" alt=\"腾讯云 &gt; 对象存储控制台 &gt; 存储桶列表\"></p>\n<p>然后，在 <code>权限管理</code> &gt; <code>存储桶访问权限</code> 里点击 <code>添加用户</code> 。</p>\n<p><img src=\"https://raw.githubusercontent.com/ryjer/imgbed/master/images/20210722194347-4511f6e43888c9099f00fe1ef93cb206-0f4a8d1a.png\" alt=\"添加用户\"></p>\n<p>选择用户类型为 <code>子账号</code> ，将刚刚创建的 <strong>子账号</strong> 添加进去，授予其如下图所示 <code>数据读取</code> 和 <code>权限读取</code> 权限。然后点击 <code>保存</code> 完成授权</p>\n<p><img src=\"https://raw.githubusercontent.com/ryjer/imgbed/master/images/20210722194543-d4d27ae4b2b4b8a5ecea6130cdfa2f45-aae2c8b3.png\" alt=\"子账号设置\"></p>\n<p>接下来，你就可以使用这个子账号操作读取这个存储桶了。</p>\n<h2 id=\"5-2-配置-Rclone-配置\"><a href=\"#5-2-配置-Rclone-配置\" class=\"headerlink\" title=\"5.2 配置 Rclone 配置\"></a>5.2 配置 Rclone 配置</h2><p>腾讯云cos 的配置与 minio 类似。</p>\n<p>但在第2步<strong>选择存储类型</strong> 后还要选择区域。这里需要选择你要同步的存储桶所在地 <code>编号</code>。</p>\n<p>在第 4 步的 <strong>账号</strong> 和 <strong>密钥</strong> 选择上面子账号下的 <code>SecretId</code> 和 <code>SecretKey</code></p>\n<h1 id=\"6-调试同步命令\"><a href=\"#6-调试同步命令\" class=\"headerlink\" title=\"6. 调试同步命令\"></a>6. 调试同步命令</h1><p>我们使用 sync 子命令将 腾讯云COS上的存储桶同步到minio存储桶中，可先使用 <code>-i</code> 参数进行测试，对应命令格式如下</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">rclone sync -i remote:SOURCE DESTINATION</span><br></pre></td></tr></table></figure>\n\n<p>这里的remote指的是上一步 <code>rclone config</code> 中为各存储桶设置的节点别名。当你使用本地文件系统时，不需要使用 <code>remote</code> 。就像上面的 <code>DESTINATION</code> 一样。由于我是将远程存储桶同步到本地存储桶，所以对应两个存储桶都需要节点名。命令大概会像下面这样</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">rclone sync -i 源节点名:源存储桶  目标节点名:目标存储桶</span><br></pre></td></tr></table></figure>\n\n<p>当你测试完确定命令没有问题后，可以去掉测试选项 <code>-i</code> 。进行真正的完全同步，sync 同步子命令只会传输 <strong>发生变动</strong> 的对象/文件，没有发生变动的 对象/文件 不会产生流量和外网下载流量费。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">rclone sync gzcos:blog-88888888  miniolocal:blog</span><br></pre></td></tr></table></figure>\n\n<p>通常情况下，同步命令会将存储桶对象的创建时间等元数据一起同步过来（MinIO支持）。但是有的对象存储服务商（比如这腾讯COS）对创建时间等信息控制较为严格，即使使用 <code>rclone sync</code> 命令也无法同步对象的创建时间。使得目标存储桶对象的创建时间是复制到存储桶的时间而与源存储桶中的信息不同，但这并不影响使用。</p>\n<h1 id=\"7-添加定时任务\"><a href=\"#7-添加定时任务\" class=\"headerlink\" title=\"7. 添加定时任务\"></a>7. 添加定时任务</h1><p>注意：不要忘记开启 Minio 的版本控制功能，minio开启版本控制需要至少四个驱动器的 <strong>纠删码</strong> 部署。单驱动器不支持</p>\n<p>调试好命令后，使用 <code>crontab</code> 命令添加定时任务</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">crontab  -e</span><br></pre></td></tr></table></figure>\n\n<p>我添加了如下一条 crontab 记录，用于每天 7:00 进行一次同步</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">0  7  *  *  * rclone sync gzcos:blog-88888888  miniolocal:blog</span><br></pre></td></tr></table></figure>\n\n<p>这样，就完成了 rclone 定时同步备份的设置。</p>\n","categories":["存储","对象存储","腾讯云COS"],"tags":["rclone","腾讯云","cos","minio","对象存储","备份","同步"]},{"title":"手把手指导安装微PE(WePE)系统到U盘","url":"/posts/a16d7c28d6.html","content":"<blockquote>\n<p>微PE工具箱是进行刷机、系统转移、系统紧急备份等工作的有力工具。</p>\n<p>这里对制作 WePE 工具U盘的方法进行记录，以备未来不时之需（免得刷机时又要查资料）</p>\n</blockquote>\n<span id=\"more\"></span>\n\n<p>原文链接：<a href=\"http://blog.ryjer.com/posts/a16d7c28d6.html\">http://blog.ryjer.com/posts/a16d7c28d6.html</a></p>\n<h1 id=\"一、直接购买-WinPE-预装-U盘\"><a href=\"#一、直接购买-WinPE-预装-U盘\" class=\"headerlink\" title=\"一、直接购买 WinPE 预装 U盘\"></a>一、直接购买 WinPE 预装 U盘</h1><p>如果你懒得像下面一样自己安装 WinPE 到 U盘中，而且恰巧财力雄厚，可以直接买一个预装好WinPE 的U盘而不用自己折腾。</p>\n<p>打开下载页面 （<a href=\"http://www.wepe.com.cn/download.html\">微PE工具箱 - 下载地址</a>），点击页面中如下图红色箭头所指按钮即可进入官方的淘宝店。</p>\n<p><img src=\"https://raw.githubusercontent.com/ryjer/imgbed/master/images/20210722204408-dff11b714a67f0ae30fd48bcf2fcaeea-a60066bd.png\" alt=\"WePE U盘购买\"></p>\n<h1 id=\"二、自己制作WePE工具U盘\"><a href=\"#二、自己制作WePE工具U盘\" class=\"headerlink\" title=\"二、自己制作WePE工具U盘\"></a>二、自己制作WePE工具U盘</h1><h2 id=\"1-下载-WePE-工具箱\"><a href=\"#1-下载-WePE-工具箱\" class=\"headerlink\" title=\"1. 下载 WePE 工具箱\"></a>1. 下载 WePE 工具箱</h2><p>WePE工具箱提供了一个包含很多有用工具的 Windows PE 操作系统，我们接下来就要用它为一个U盘安装他提供的 Windows PE 操作系统。这需要你实现准备一个<strong>空</strong>U盘（如果你没有像上面一样买一个的话），这个U盘中的数据请立即转移到他出。</p>\n<p>首先，打开官网（<a href=\"http://www.wepe.com.cn/download.html\">微PE工具箱 - 下载地址</a>）。其界面类似下面</p>\n<p><img src=\"https://raw.githubusercontent.com/ryjer/imgbed/master/images/20210722204822-d2a99e789bf1cb85ba3af3ec12244d36-4a41d2e9.png\" alt=\"下载地址\"></p>\n<p>点击上图绿色箭头所示的按钮，你会进入一个如下所示的 <del>要饭界面</del> 捐赠界面。感觉做这个的挺惨啊！都要依靠捐赠来维持生存了，我忍不住捐了2块钱</p>\n<p><img src=\"https://raw.githubusercontent.com/ryjer/imgbed/master/images/20210722205123-132498dee969d3307b2c9615e5563717-d2025ad5.png\" alt=\"WinPE 捐赠页面\"></p>\n<p>点击图中红色箭头所指红框内的链接，即可进入真正的下载地址页面。官方提供了百度网盘和微云网盘两种下载方式</p>\n<p><img src=\"https://raw.githubusercontent.com/ryjer/imgbed/master/images/20210722205353-a60dc347c5cae7e8a94fe747d022d392-33b4dcf2.png\" alt=\"image-20210722205350362\"></p>\n<p>点击如上图所示浅绿色箭头所指位置即可进入对应网盘的下载页面。这里我使用的是<strong>微云下载</strong>，如果你没有会员，这两家的下载速度都是100KB/s 左右。你有哪个会员就选哪个，打开<strong>微云下载</strong>后页面如下所示，先点击右上角红色箭头所示的 <code>登录</code> 按键</p>\n<p><img src=\"https://raw.githubusercontent.com/ryjer/imgbed/master/images/20210722213025-01ef4cb8fa30d658ef79d20b6aeecfe6-23132abb.png\" alt=\"微云登录\"></p>\n<p>这时，会弹出腾讯的<strong>登录面板</strong>，用你的手机QQ或者微信扫描登录即可</p>\n<p><img src=\"https://raw.githubusercontent.com/ryjer/imgbed/master/images/20210720162949-weiyun-login.png\" alt=\"腾讯微云 登录\"></p>\n<p>然后，重复上上个步骤，如下图</p>\n<p><img src=\"https://raw.githubusercontent.com/ryjer/imgbed/master/images/20210720162710-WinPE-weiyun.png\" alt=\"WinPE 腾讯微云下载\"></p>\n<p>接着，就会开始下载了。下面是 <strong>Edge浏览器</strong>的下载</p>\n<p><img src=\"https://raw.githubusercontent.com/ryjer/imgbed/master/images/20210720163155-weiyun-xiazai.png\" alt=\"微云下载\"></p>\n<p>很明显，我不是尊贵的腾讯微云会员，所以速度和百度云普通用户差不多。</p>\n<p>居然要36分钟，是可忍熟不可忍（但我是不会充钱的）。所以，我为这个文件做了一个种子，便于大家快速下载</p>\n<p><a href=\"http://blog-file.webcdn.top/torrents/WePE_64_V2.1.zip.torrent\">WePE_64_V2.1 BT下载</a></p>\n<p><a href=\"magnet:?xt=urn:btih:HMBBA3X24B6FA3T2LWDDFJO6Z3FRGLQ2&dn=WePE_64_V2.1.zip\">WePE_64_V2.1 磁力链接</a></p>\n<p>建议使用 比特彗星下载 （<a href=\"https://www.bitcomet.com/en/downloads\">BitComet - 官方下载页</a>），不要使用迅雷</p>\n<h2 id=\"2-制作-WePE-启动U盘\"><a href=\"#2-制作-WePE-启动U盘\" class=\"headerlink\" title=\"2. 制作 WePE 启动U盘\"></a>2. 制作 WePE 启动U盘</h2><h3 id=\"解压压缩包\"><a href=\"#解压压缩包\" class=\"headerlink\" title=\"解压压缩包\"></a>解压压缩包</h3><p>下载完成后解压压缩包到当前文件夹。如下图所示，右键压缩包，在菜单中选择 <code>全部解压缩(T)...</code></p>\n<p><img src=\"https://raw.githubusercontent.com/ryjer/imgbed/master/images/20210720193246-WinPE-zip.png\" alt=\"解压压缩包\"></p>\n<p>然后进入解压界面，点击如下图红色箭头所指的<code>提取(E)</code>，解压文件</p>\n<p><img src=\"https://raw.githubusercontent.com/ryjer/imgbed/master/images/20210720193528-WinPE-unzip.png\" alt=\"image-20210720193527971\"></p>\n<p>解压完成后，会出现如下红框所示的同名文件夹，双击打开这个文件夹</p>\n<p><img src=\"https://raw.githubusercontent.com/ryjer/imgbed/master/images/20210720193722-WinPE-unzip.png\" alt=\"image-20210720193722751\"></p>\n<p>进入这个文件夹后，双击下图红框所示 <strong>.exe</strong> 。</p>\n<p><img src=\"https://raw.githubusercontent.com/ryjer/imgbed/master/images/20210720193923-WinPE-exe.png\" alt=\"WePE 主程序\"></p>\n<p>接下来是windows的权限确认，选择 <code>是</code>。然后便打开了 <code>微PE工具箱</code>，其界面如下所示</p>\n<p><img src=\"https://raw.githubusercontent.com/ryjer/imgbed/master/images/20210722214150-9091723c88e4ee3c14da4bb5075dd51c-d69dfc26.png\" alt=\"微PE 主界面\"></p>\n<h3 id=\"写入WePE\"><a href=\"#写入WePE\" class=\"headerlink\" title=\"写入WePE\"></a>写入WePE</h3><p>插入你事先准备好的U盘，别忘了转移U盘里的数据。然后点击右下角的 U盘图标，如下图红框箭头所示</p>\n<p><img src=\"https://raw.githubusercontent.com/ryjer/imgbed/master/images/20210722213847-e4a62e9304b9b7384539d384ac7cbb21-47a7103b.png\" alt=\"U盘 安装\"></p>\n<p>进入U盘安装界面后，先确定是你的目标U盘（下图上方红框）。这很重要，因为安装过程会销毁目标盘内的所有数据</p>\n<p><img src=\"https://raw.githubusercontent.com/ryjer/imgbed/master/images/20210722214546-b1cb96b299cee6d0f32bc4d84a3ee4ed-935ca808.png\" alt=\"安装到U盘\"></p>\n<p>然后点击下方红色箭头所指的 <code>立刻安装进U盘</code>，在确认窗口中选择 <code>开始制作</code></p>\n<p><img src=\"https://raw.githubusercontent.com/ryjer/imgbed/master/images/20210722214750-80f1b9484b7a33f748944c50e67c3a5e-32925db4.png\" alt=\"image-20210722214748268\"></p>\n<p>然后WePE开始安装到U盘中</p>\n<p><img src=\"https://raw.githubusercontent.com/ryjer/imgbed/master/images/20210722214938-12d4d5bc59226b7ef5ccb87d4c2fbf34-e3d91748.png\" alt=\"image-20210722214936138\"></p>\n<p>完成后，弹出提示框。点击下图所示 <code>完成安装</code>结束安装过程</p>\n<p><img src=\"https://raw.githubusercontent.com/ryjer/imgbed/master/images/20210720204320-WePE.png\" alt=\"安装完成\"></p>\n<p>安装完成后，打开我的电脑。就能看到新创建的U盘分区了(如下图)。</p>\n<p><img src=\"https://raw.githubusercontent.com/ryjer/imgbed/master/images/20210720224236-WePE.png\" alt=\"WePE安装结果\"></p>\n<p>其中红色框内左面卷标为 <strong>微PE工具箱</strong> 的 <strong>E: 盘</strong> 是安装后留下的分区，这是我们可以随意使用的数据分区。里面是空的。</p>\n<p>右面卷标为 <strong>EFI</strong> 的 <strong>F: 盘</strong> 是Windows PE 系统分区。当指定操作系统为这个U盘启动时，会把这个分区作为系统分区（类似 windows 10）的 C 盘。</p>\n","categories":["系统工具"],"tags":["刷机","windows","软路由","wepe","微PE","启动U盘"]},{"title":"rocky8（centos8）安装配置nfs服务","url":"/posts/a1ba025983.html","content":"<blockquote>\n<p>nfs是unix 和 linux 中常见的网络文件服务，通过 nfs 可以实现集中化的存储管理。</p>\n<p>nfs 的配置与一般采用账号密钥式认证的服务不同，因而有不同的配置方式。并且由于系统内核对存储和网络启动顺序的问题，在永久挂载上要采用 autofs 而不是一般的 fstab 设置。</p>\n</blockquote>\n<span id=\"more\"></span>\n\n<p>永久链接：<a href=\"http://blog.ryjer.com/posts/a1ba025983.html\">http://blog.ryjer.com/posts/a1ba025983.html</a></p>\n<h1 id=\"1-nfs-服务\"><a href=\"#1-nfs-服务\" class=\"headerlink\" title=\"1. nfs 服务\"></a>1. nfs 服务</h1><p>nfs 是 <strong>Network File System</strong> 的简称，翻译为中文就是是 <strong>网络文件系统</strong>。</p>\n<p>从它的名字就可以看出，这是一种 <strong>文件系统</strong>。应当可以像使用类似ext、xfs、btrfs等文件系统一样使用它，而且其存在于网络上。</p>\n<p>其他可以参考维基百科：<a href=\"https://zh.wikipedia.org/wiki/%E7%BD%91%E7%BB%9C%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F\">网络文件系统 - 维基百科</a></p>\n<h1 id=\"2-nfs-与-rpcbind\"><a href=\"#2-nfs-与-rpcbind\" class=\"headerlink\" title=\"2. nfs 与 rpcbind\"></a>2. nfs 与 rpcbind</h1><p>一个有意思的事情是，你在配置 nfs 的时候可能没有为 nfs 开放防火墙<strong>固定</strong>端口，而是开启动态服务端口。这是因为nfs 本身并没有固定端口（虽然nfs想要有默认端口，但很可能已经被其他服务占用了），因此在设计时其会申请随机端口。</p>\n<p>那么问题来了，客户端怎么得到 nfs 的随机端口号呢？</p>\n<p>答案也很有意思，其借助 rpcbind 服务间接告知客户端nfs服务端口。nfs服务启动时，会向本机的 rpcbind 服务注册 nfs 本次的服务端口号。nfs 客户端在访问nfs 服务时，首先询问 nfs 服务器上的 rpcbind服务：<strong>nfs服务的端口是多少？</strong>然后rpcbind 告诉nfs客户端对应的nfs服务端口号：<strong>nfs 的服务端口号是 xxx</strong>。之后，nfs客户端就会去访问被告知的nfs端口，rpcbind不再参与之后的过程。</p>\n<p>因此，配置nfs服务首先要安装 rpcbind服务</p>\n<h1 id=\"3-配置-rpcbind-服务\"><a href=\"#3-配置-rpcbind-服务\" class=\"headerlink\" title=\"3. 配置 rpcbind 服务\"></a>3. 配置 rpcbind 服务</h1><p>rocky8 或者 centos8 可以使用以下命令安装 rpcbind，但通常该服务会在系统安装后自动安装，并配置了自动随系统启动</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">dnf install rpcbind -y</span><br></pre></td></tr></table></figure>\n\n<p>打开该服务并设置开机启动</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">systemctl start rpcbind</span><br><span class=\"line\">systemctl <span class=\"built_in\">enable</span> rpcbind</span><br></pre></td></tr></table></figure>\n\n<p>然后需要打开 rpcbind 的服务端口。虽然 rpcbind 默认会在 rocky8 中安装启动，但并不会打开防火墙</p>\n<p>rpcbind的端口号为 111，建议使用以下方式配置防火墙</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">firewall-cmd --permanent --add-service=rpc-bind</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"4-配置-nfs-服务\"><a href=\"#4-配置-nfs-服务\" class=\"headerlink\" title=\"4. 配置 nfs 服务\"></a>4. 配置 nfs 服务</h1><h2 id=\"安装nfs软件包\"><a href=\"#安装nfs软件包\" class=\"headerlink\" title=\"安装nfs软件包\"></a>安装nfs软件包</h2><p>在rocky8 和 centos8中，nfs 服务位于 nfs-utils 软件包中，因此先安装该软件包。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">dnf install nfs-utils -y</span><br></pre></td></tr></table></figure>\n\n<p>打开nfs 服务并设置开机启动。这里需要注意，nfs服务启动时会向 rpcbind 注册端口号，因此需要 rpcbind 先于 nfs 启动</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">systemctl start nfs-server</span><br><span class=\"line\">systemctl <span class=\"built_in\">enable</span> nfs-server</span><br></pre></td></tr></table></figure>\n\n<p>打开 nfs 服务防火墙</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">firewall-cmd --permanent --add-service=nfs</span><br></pre></td></tr></table></figure>\n\n<p>还有 mountd</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">firewall-cmd --permanent --add-service=mountd</span><br></pre></td></tr></table></figure>\n\n<p>到这里，可以使用如下 rpcinfo 命令差异nfs 服务是否已经注册到了 rpcbind 中</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">rpcinfo -p localhost | grep nfs</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">100003    3   tcp   2049  nfs</span><br><span class=\"line\">100003    4   tcp   2049  nfs</span><br><span class=\"line\">100227    3   tcp   2049  nfs_acl</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"配置-nfs\"><a href=\"#配置-nfs\" class=\"headerlink\" title=\"配置 nfs\"></a>配置 nfs</h2><p>安装完毕后，nfs 的配置文件 <code>/etc/exports</code> 会自动创建好。</p>\n<p>nfs 与一般的账号密钥式认证不同，其在服务端指定客户ip段，只为特定的目标IP进行服务。客户端无需特殊配置</p>\n<p>nfs配置文件格式很简单，每一行配置一个共享目录。每行第一列是共享的目录，第二列及之后列是允许访问的ip和权限。注意ip和权限之间没有空格</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 单客户 ip段</span></span><br><span class=\"line\">NFS共享的目录 NFS客户端地址（参1，参2，……）</span><br><span class=\"line\">/var/nfs/nfs01 192.168.1.1/24(rw,sync,no_root_squash,no_subtree_check)</span><br><span class=\"line\"><span class=\"comment\"># 多客户ip段，你可以同时为多个ip配置访问权限</span></span><br><span class=\"line\">NFS共享的目录 NFS客户端地址（参1，参2，……） NFS客户端地址2（参1，参2，……）  NFS客户端地址...</span><br><span class=\"line\">/var/nfs/nfs02 192.168.1.1/24(rw,sync)  10.0.0.1/24(rw,async,no_root_squash,no_subtree_check)  </span><br></pre></td></tr></table></figure>\n\n<p>括号内权限具体含义如下：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">rw 读写</span><br><span class=\"line\">ro 只读</span><br><span class=\"line\">sync 同步模式，内存数据实时写入磁盘</span><br><span class=\"line\">async 非同步模式</span><br><span class=\"line\">no_root_squash 客户端挂载NFS共享目录后，root用户不受约束，权限很大</span><br><span class=\"line\">root_squash 与上面选项相对，客户端上的root用户收到约束，被限定成某个普通用户</span><br><span class=\"line\">all_squash 客户端上所有用户在使用NFS共享目录时都被限定为一个普通用户</span><br><span class=\"line\">anonuid/anongid 和上面几个选项搭配使用，定义被限定用户的uid和gid</span><br></pre></td></tr></table></figure>\n\n<p>首先，创建 nfs 共享目录。（提示：注意共享目录的权限）</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">mkdir -p /var/nfs/nfs01 /var/nfs/nfs02</span><br></pre></td></tr></table></figure>\n\n<p>然后，配置共享目录到配置文件 <code>/etc/exports</code> 内</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">vim /etc/exports</span><br><span class=\"line\"><span class=\"comment\"># 配置文件内如下</span></span><br><span class=\"line\">/var/nfs/nfs01 192.168.1.1/24(rw,sync,no_root_squash,no_subtree_check)</span><br><span class=\"line\">/var/nfs/nfs02 192.168.1.1/24(rw,sync)  10.0.0.1/16(rw,async,no_root_squash,no_subtree_check)</span><br></pre></td></tr></table></figure>\n\n<p>使用 <code>exportfs</code> 刷新nfs 服务配置，这样不用重启 nfs 服务即可刷新服务配置，从而保证客户端上 nfs 服务的连续可用</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">exportfs -arv</span><br></pre></td></tr></table></figure>\n\n<p>常用选项</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">-a 全部挂载或者全部卸载</span><br><span class=\"line\">-r 重新挂载</span><br><span class=\"line\">-u 卸载某一个目录</span><br><span class=\"line\">-v 显示共享目录</span><br></pre></td></tr></table></figure>\n\n<p>测试——本机使用 <code>showmount</code> 查看本机可挂载目录</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">showmount -e localhost</span><br></pre></td></tr></table></figure>\n\n<p>如果显示了上面两个配置目录，说明配置成功</p>\n<h1 id=\"6-配置-nfs-客户端\"><a href=\"#6-配置-nfs-客户端\" class=\"headerlink\" title=\"6. 配置 nfs 客户端\"></a>6. 配置 nfs 客户端</h1><h2 id=\"安装客户端软件包\"><a href=\"#安装客户端软件包\" class=\"headerlink\" title=\"安装客户端软件包\"></a>安装客户端软件包</h2><p>客户端也需要安装 nfs 套件，通常系统会自带rpcbind并配置开机启动</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">dnf install nfs-utils rpcbind</span><br></pre></td></tr></table></figure>\n\n<p>nfs 客户端需要启动rpcbind服务，但不需要 nfs 服务。只需要<code>nfs-utils</code>套件中的客户端</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">systemctl start rpcbind</span><br><span class=\"line\">systemctl <span class=\"built_in\">enable</span> rpcbind</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"挂载-nfs-目录到本地\"><a href=\"#挂载-nfs-目录到本地\" class=\"headerlink\" title=\"挂载 nfs 目录到本地\"></a>挂载 nfs 目录到本地</h2><p>首先，在客户端上使用 <code>showmount</code> 查看 nfs 服务目录（假定 nfs 服务器的IP地址是 192.168.1.100）</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">showmount -e 192.168.1.100</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">Export list <span class=\"keyword\">for</span> rocky:</span><br><span class=\"line\">/var/nfs/nfs01 192.168.1.1/24</span><br><span class=\"line\">/var/nfs/nfs02 192.168.1.1/24  10.0.0.1/16</span><br></pre></td></tr></table></figure>\n\n<p>看来可用挂载了，首先创建挂载目录</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">mkdir -p /mnt/nfs</span><br></pre></td></tr></table></figure>\n\n<p>接下来使用 mount 命令临时挂载，我们挂载<code>nfs01</code>目录到本地 <code>/mnt/nfs</code> (注意关机重启后该挂载会失效)</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">mount -t nfs 192.168.1.100:/var/nfs/nfs01 /mnt/nfs</span><br></pre></td></tr></table></figure>\n\n<p>如果你的ip没有对应目录的使用权限，会报出如下错误</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">mount.nfs: access denied by server <span class=\"keyword\">while</span> mounting 192.168.1.100:/var/nfs/nfs01</span><br></pre></td></tr></table></figure>\n\n<p>然后使用 <code>df -h</code> 查看系统挂载，应该会多出如下一项（主要看 Filesystem 和 Mounted on）</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">Filesystem                    Size   Used  Avail Use%  Mounted on</span><br><span class=\"line\">192.168.1.100:/var/nfs/nfs01  512G   256G  256G   50%  /mnt/nfs</span><br></pre></td></tr></table></figure>\n\n<p>这就表明挂载成功可以使用了，但这只是临时挂载。下次开机后这个挂载就消失了，需要重新手动挂载。这对全年运行的linux服务器来说没什么问题，但对其他经常关机的用户来说不是很友好</p>\n<h2 id=\"自带挂载\"><a href=\"#自带挂载\" class=\"headerlink\" title=\"自带挂载\"></a>自带挂载</h2><p>要想让客户机自带挂载，有几种不同的方案</p>\n<h3 id=\"fstab-方案（不推荐）\"><a href=\"#fstab-方案（不推荐）\" class=\"headerlink\" title=\"fstab 方案（不推荐）\"></a>fstab 方案（不推荐）</h3><p>通常，linux 或 Unix 主机想要让系统开机挂载外挂硬件时，会在配置文件 <code>/etc/fstab</code> 中添加一个开机挂载项。像上面那么目录、其挂载项如下。fstab 文件的具体配置及含义请查看相关资料</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">192.168.1.100:/var/nfs/nfs01    /mnt/nfs    nfs      defaults    0  1</span><br></pre></td></tr></table></figure>\n\n<p>但这对 nfs 会有一个麻烦的文件。fstab 原来是为 本地存储设备设计的，因此在系统启动时会将 fstab 中的存储设备挂载后再启动网络。但是 nfs 是网络文件系统，必须等待内核将 网络模块加载完毕后才能启动。这是相互矛盾的，甚至可能会挂载失败（而且系统不会重试）</p>\n<h3 id=\"autofs-方案（推荐）\"><a href=\"#autofs-方案（推荐）\" class=\"headerlink\" title=\"autofs 方案（推荐）\"></a>autofs 方案（推荐）</h3><p>autofs 是一个在后台运行的守护进程，如果它检测到用户正在访问一个尚未挂载的文件系统，如果存在，autofs 会自动将其挂载；如果它检测到某个已经挂载的文件系统在一段时间内没有被使用，那么 autofs 会自动将其卸载。也就是说，autofs 会按需自动挂载卸载目录，从而避免上面 开机mount导致的失败问题。</p>\n<p>首先，安装 autofs </p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">dnf install autofs</span><br><span class=\"line\"><span class=\"comment\"># debian 和 Ubuntu 使用以下命令</span></span><br><span class=\"line\">apt-get install autofs</span><br></pre></td></tr></table></figure>\n\n<p>然后启动 autofs 服务（debian 和 ubuntu会在安装后自动启动并配置开机启动）</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">systemctl start autofs</span><br><span class=\"line\"><span class=\"comment\"># 开机启动</span></span><br><span class=\"line\">systemctl <span class=\"built_in\">enable</span> autofs</span><br></pre></td></tr></table></figure>\n\n<p>其配置逻辑有点特殊，是一种二级配置。首先是主配置文件 <code>/etc/auto.master</code> ，该配置文件中的一条配置定义一个<strong>主挂载目录</strong>，该主配置文件下的具体可挂载目录由该记录中指定的另一个配置文件（也就是二级配置文件）决定。</p>\n<p>一个二级配置文件中记录 <strong>主挂载目录</strong> 下的真正的 <strong>挂载目录、目录配置和挂载源</strong> ，每条记录对应一个二级子目录</p>\n<p><code>/etc/auto.master</code> 主配置文件内容如下</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># Sample auto.master file</span></span><br><span class=\"line\"><span class=\"comment\"># This is a &#x27;master&#x27; automounter map and it has the following format:</span></span><br><span class=\"line\"><span class=\"comment\"># mount-point [map-type[,format]:]map [options]</span></span><br><span class=\"line\"><span class=\"comment\"># For details of the format look at auto.master(5).</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#/misc\t/etc/auto.misc</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># <span class=\"doctag\">NOTE:</span> mounts done from a hosts map will be mounted with the</span></span><br><span class=\"line\"><span class=\"comment\">#\t&quot;nosuid&quot; and &quot;nodev&quot; options unless the &quot;suid&quot; and &quot;dev&quot;</span></span><br><span class=\"line\"><span class=\"comment\">#\toptions are explicitly given.</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#/net\t-hosts</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># Include /etc/auto.master.d/*.autofs</span></span><br><span class=\"line\"><span class=\"comment\"># To add an extra map using this mechanism you will need to add</span></span><br><span class=\"line\"><span class=\"comment\"># two configuration items - one /etc/auto.master.d/extra.autofs file</span></span><br><span class=\"line\"><span class=\"comment\"># (using the same line format as the auto.master file)</span></span><br><span class=\"line\"><span class=\"comment\"># and a separate mount map (e.g. /etc/auto.extra or an auto.extra NIS map)</span></span><br><span class=\"line\"><span class=\"comment\"># that is referred to by the extra.autofs file.</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\">+dir:/etc/auto.master.d</span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># If you have fedfs set up and the related binaries, either</span></span><br><span class=\"line\"><span class=\"comment\"># built as part of autofs or installed from another package,</span></span><br><span class=\"line\"><span class=\"comment\"># uncomment this line to use the fedfs program map to access</span></span><br><span class=\"line\"><span class=\"comment\"># your fedfs mounts.</span></span><br><span class=\"line\"><span class=\"comment\">#/nfs4  /usr/sbin/fedfs-map-nfs4 nobind</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># Include central master map if it can be found using</span></span><br><span class=\"line\"><span class=\"comment\"># nsswitch sources.</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># Note that if there are entries for /net or /misc (as</span></span><br><span class=\"line\"><span class=\"comment\"># above) in the included master map any keys that are the</span></span><br><span class=\"line\"><span class=\"comment\"># same will not be seen as the first read key seen takes</span></span><br><span class=\"line\"><span class=\"comment\"># precedence.</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\">+auto.master</span><br></pre></td></tr></table></figure>\n\n<p>要是把 nfs 目录挂载到 <code>/mnt/nfs</code> ，主配置文件需要添加如下一条。其下子目录由 <code>/etc/auto.conf/rocky.nfs</code> 配置文件提供</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">/mnt/nfs        /etc/auto.conf/auto.nfs    –timeout=60</span><br></pre></td></tr></table></figure>\n\n<p>二级配置文件需要我们自己创建，具体放到哪里随意，只要你在 <code>/etc/auto.master</code> 表明具体路径即可。<code>–timeout=60</code>表示若超过60秒没有访问，自动卸载对应目录。</p>\n<p>autofs安装时提供了二级配置文件的模板，对应的模板文件是 <code>/etc/auto.misc</code> ，你可以复制它作为你的配置文件，该模板的内容如下</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># This is an automounter map and it has the following format</span></span><br><span class=\"line\"><span class=\"comment\"># key [ -mount-options-separated-by-comma ] location</span></span><br><span class=\"line\"><span class=\"comment\"># Details may be found in the autofs(5) manpage</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">cd</span>\t\t-fstype=iso9660,ro,nosuid,nodev\t:/dev/cdrom</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># the following entries are samples to pique your imagination</span></span><br><span class=\"line\"><span class=\"comment\">#linux\t\t-ro,soft,intr\t\tftp.example.org:/pub/linux</span></span><br><span class=\"line\"><span class=\"comment\">#boot\t\t-fstype=ext2\t\t:/dev/hda1</span></span><br><span class=\"line\"><span class=\"comment\">#floppy\t\t-fstype=auto\t\t:/dev/fd0</span></span><br><span class=\"line\"><span class=\"comment\">#floppy\t\t-fstype=ext2\t\t:/dev/fd0</span></span><br><span class=\"line\"><span class=\"comment\">#e2floppy\t-fstype=ext2\t\t:/dev/fd0</span></span><br><span class=\"line\"><span class=\"comment\">#jaz\t\t-fstype=ext2\t\t:/dev/sdc1</span></span><br><span class=\"line\"><span class=\"comment\">#removable\t-fstype=ext2\t\t:/dev/hdd</span></span><br></pre></td></tr></table></figure>\n\n<p>其中从第9行到第15行即为我们需要的配置，其格式如下。其中挂载源支持设备、ftp、nfs、iSCSI等绝大部分可被挂载的存储</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">子目录        配置1,配置2,配置3...         挂载源</span><br></pre></td></tr></table></figure>\n\n<p>如果要把上面的 <code>192.168.1.100:/var/nfs/nfs01</code> 以<strong>读写</strong>权限挂在为 <code>/mnt/nfs</code> 路径下的 <code>test</code> 子目录（即 /mnt/nfs/test），需要添加如下一条配置</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">test</span>        -fstype=nfs,rw      192.168.1.100:/var/nfs/nfs01</span><br></pre></td></tr></table></figure>\n\n<p>对用的配置文件如下</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># This is an automounter map and it has the following format</span></span><br><span class=\"line\"><span class=\"comment\"># key [ -mount-options-separated-by-comma ] location</span></span><br><span class=\"line\"><span class=\"comment\"># Details may be found in the autofs(5) manpage</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">cd</span>\t\t-fstype=iso9660,ro,nosuid,nodev\t:/dev/cdrom</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># the following entries are samples to pique your imagination</span></span><br><span class=\"line\"><span class=\"comment\">#linux\t\t-ro,soft,intr\t\tftp.example.org:/pub/linux</span></span><br><span class=\"line\"><span class=\"comment\">#boot\t\t-fstype=ext2\t\t:/dev/hda1</span></span><br><span class=\"line\"><span class=\"comment\">#floppy\t\t-fstype=auto\t\t:/dev/fd0</span></span><br><span class=\"line\"><span class=\"comment\">#floppy\t\t-fstype=ext2\t\t:/dev/fd0</span></span><br><span class=\"line\"><span class=\"comment\">#e2floppy\t-fstype=ext2\t\t:/dev/fd0</span></span><br><span class=\"line\"><span class=\"comment\">#jaz\t\t-fstype=ext2\t\t:/dev/sdc1</span></span><br><span class=\"line\"><span class=\"comment\">#removable\t-fstype=ext2\t\t:/dev/hdd</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">test</span>        -fstype=nfs,rw      192.168.1.100:/var/nfs/nfs01</span><br></pre></td></tr></table></figure>\n\n<p>然后，重新启动 autofs 服务</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">systemctl  restart autofs</span><br></pre></td></tr></table></figure>\n\n<p>进入主挂载目录 <code>/mnt/nfs</code></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> /mnt/nfs</span><br></pre></td></tr></table></figure>\n\n<p>由于是自动挂载，你必须指定对应的子路径才能激活挂载。在激活之前不会挂载，因而你使用 <code>ls</code> 命令不会得到任何结果</p>\n<p>但是可以进入 <code>test</code></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> /mnt/nfs/<span class=\"built_in\">test</span></span><br></pre></td></tr></table></figure>\n\n<p>这条命令会激活 autofs 挂载 <code>test</code>子目录 到 <code>/mnt/nfs</code> 下，然后进入对应目录</p>\n<p>之后，再在 <code>/mnt/nfs</code> 目录下使用 <code>ls</code> 命令就会显示 <code>test</code> 子目录，因为autofs 刚刚挂载。（注意不要超过 60秒，不然又会卸载）</p>\n<h1 id=\"参考文章\"><a href=\"#参考文章\" class=\"headerlink\" title=\"参考文章\"></a>参考文章</h1><p><a href=\"https://blog.csdn.net/sinat_40292249/article/details/91453965\">集群搭建——NFS_sinat_40292249的博客-CSDN博客_nfs集群搭建</a></p>\n<p><a href=\"https://blog.csdn.net/z609158391/article/details/105226176\">NFS详细介绍_z609158391的博客-CSDN博客_nfs</a></p>\n<p><a href=\"https://www.cnblogs.com/liuyisai/p/5992511.html\">linux下NFS服务器的搭建与配置 - 青衫lys - 博客园 (cnblogs.com)</a></p>\n<p><a href=\"https://cshihong.blog.csdn.net/article/details/83146421\">NFS服务器搭建与配置_曹世宏的博客-CSDN博客_nfs配置</a></p>\n<p><a href=\"https://blog.csdn.net/qq_34373016/article/details/78777009\">linux磁盘共享nfs及iscsi_biubiupiu1的博客-CSDN博客</a></p>\n<p><a href=\"https://www.jianshu.com/p/fb132ceda333\">NFS安装及配置 - 简书 (jianshu.com)</a></p>\n<p><a href=\"https://blog.csdn.net/yuanxiaojiao0012/article/details/55096446\">(2条消息) NFS实践及自动挂载问题_琉璃糖的博客-CSDN博客_nfs自动挂载</a></p>\n","categories":["存储","文件存储","nfs"],"tags":["linux","rocky","centos","nfs","autofs","文件存储","rpcbind"]},{"title":"手把手指导安装（刷机）OpenWRT（LEDE）路由系统（固件）","url":"/posts/a1d3fb84eb.html","content":"<blockquote>\n<p>openwrt 系统是当前最为流行的开源路由操作系统，大量的软路由操作系统（固件）以openwrt为基础构建。有大量的玩家和爱好者在原版 openwrt 的基础上，通过打包大量的插件构建了很多非常便于使用的 openwrt 固件。</p>\n<p>此外，当前大量主流的所谓 “智能路由“ 系统也是从 openwrt 构建的。因为 openwrt 系统实质上是一种 linux 系统，各大硬件厂商和互联网公司有重组的 linux 开发人员，便于进行二次开发定制。</p>\n</blockquote>\n<span id=\"more\"></span>\n\n<p>原文链接：<a href=\"http://blog.ryjer.com/posts/a1d3fb84eb.html\">http://blog.ryjer.com/posts/a1d3fb84eb.html</a></p>\n<p>一些软路由的玩家和学习者提供了带有很多有用插件的 openwrt 固件，这些固件比我们一般在市面上买到的硬路由功能多很多。比如：宽带多拨、应用过滤、游戏加速、去广告、多宽带分流、局域网共享、网盘甚至是 docker容器。总之，只有你想不到，没有openwrt做不到。在 linux内核和docker容器的加持下，对它的限制只有你的硬件配置和想象力。</p>\n<p>说一句题外话，虽然openwrt的功能不受限制，但是依然建议让其只提供和网络密切相关的服务，而不建议让其提供网盘、局域网文件共享等与网络相关性不大的服务。以保证openwrt 运行的稳定性，同时可以减少软路由的负担、降低包转发处理延迟。</p>\n<h1 id=\"1-硬件配置要求\"><a href=\"#1-硬件配置要求\" class=\"headerlink\" title=\"1. 硬件配置要求\"></a>1. 硬件配置要求</h1><p>软路由对安装的硬件有一定的配置要求。不同的固件版本对安装硬件的要求各不相同、但都会假设目标平台只是简单的路由设备。</p>\n<p>通常，512M的内存，1GB的固态硬盘（或1GB的其他闪存）即可充分保证openwrt的安装和运行。对于自己组建软路由硬件的玩家来说，这点配置要求很容易满足。</p>\n<table>\n<thead>\n<tr>\n<th>配置</th>\n<th>要求</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>CPU</td>\n<td>intel X64、ARM</td>\n</tr>\n<tr>\n<td>内存</td>\n<td>≥ 512GB</td>\n</tr>\n<tr>\n<td>硬盘</td>\n<td>≥ 1GB</td>\n</tr>\n<tr>\n<td>网口</td>\n<td>建议 ≥ 2个网口，通常2个即可。</td>\n</tr>\n</tbody></table>\n<h1 id=\"2-安装原理\"><a href=\"#2-安装原理\" class=\"headerlink\" title=\"2. 安装原理\"></a>2. 安装原理</h1><p>由于 openwrt是路由器操作系统，路由器本身是没有外接显示器的。所以 openwrt 默认支持的安装方式是”刷机固件“而不是像windows一样的图形界面引导。</p>\n<p>刷机过程中，不可以进行任何配置，直接将硬盘分区的镜像写入硬盘中。写入完成后，即可开机运行。</p>\n<h1 id=\"3-安装方法\"><a href=\"#3-安装方法\" class=\"headerlink\" title=\"3. 安装方法\"></a>3. 安装方法</h1><p>官方手册（<a href=\"https://openwrt.org/zh-cn/doc/howto/user.beginner\">官方安装手册链接</a> ）提供了安装方法，但是不够详细，而且官网你也不一定能访问。</p>\n<p>所以，这里提供三种较为常见的安装方法。</p>\n<h2 id=\"3-1-安装到内置硬盘\"><a href=\"#3-1-安装到内置硬盘\" class=\"headerlink\" title=\"3.1 安装到内置硬盘\"></a>3.1 安装到内置硬盘</h2><p>该方法最为常见，需要用户使用另一个系统（没错，需要启动另一个系统）启动你的软路由。从而在另一个系统中将镜像写入到软路由内置硬盘中。</p>\n<p>该方法需要使用安装到U盘上的windows系统，将 openwrt 系统镜像写入到软路由内置固态硬盘中。因此，对软路由硬件配置的要求其实由 windows PE系统决定，而不是 openwrt 系统。实测需要至少 1GB 的内存，相信这很容易满足。这通常会选择 <strong>微PE工具箱</strong></p>\n<h3 id=\"1-安装-微PE到-U盘\"><a href=\"#1-安装-微PE到-U盘\" class=\"headerlink\" title=\"1. 安装 微PE到 U盘\"></a>1. 安装 微PE到 U盘</h3><p>微PE系统（WePE）的制作在另一篇博客里有详细说明指导：<a href=\"/posts/v1-e0231701.html\">保姆级指导安装微PE-WePE-系统到U盘</a></p>\n<p>制作完成后，你就有了一个安装了 WePE 工具箱的 windows PE 操作系统 U盘了。</p>\n<h3 id=\"2-将配置文件放入-WePE-U盘数据分区\"><a href=\"#2-将配置文件放入-WePE-U盘数据分区\" class=\"headerlink\" title=\"2. 将配置文件放入 WePE U盘数据分区\"></a>2. 将配置文件放入 WePE U盘数据分区</h3><p>这里要将我们要写入的 openwrt 镜像（iso镜像）、用于写入 iso 镜像的写盘工具一起放入U盘中。从而在使用WePE进入 windows PE 系统后使用。</p>\n<h4 id=\"a-openwrt-系统镜像\"><a href=\"#a-openwrt-系统镜像\" class=\"headerlink\" title=\"a. openwrt 系统镜像\"></a>a. openwrt 系统镜像</h4><p>为了方便大家学习，这里提供了一个功能较少的可安装在 intel 或 amd <strong>X64架构</strong> CPU上的 openwrt 镜像（大概 400多兆字节）。大家可以使用Bt下载工具（不包括迅雷）下载使用。</p>\n<p><a href=\"http://blog-file.webcdn.top/torrents/openwrt-scolate-20210213-Lite%E6%98%A5%E8%8A%82%E7%89%88.zip.torrent\">OpenWRT Bt下载</a></p>\n<p><a href=\"magnet:?xt=urn:btih:e669885c3eae996b7b6fd66e7d75cfe0b2b56b63&dn=openwrt-scolate-20210213-Lite%E6%98%A5%E8%8A%82%E7%89%88.zip\">OpenWRT 镜像下载 磁力链接</a></p>\n<p>下载后解压，文件夹内有如下三个文件</p>\n<p><img src=\"https://raw.githubusercontent.com/ryjer/imgbed/master/images/20210721000535-openwrt-20210213.png\" alt=\"安装包内容\"></p>\n<p>其中，红框标识的 <strong>.img</strong> 文件是用于传统 BIOS 启动的硬盘镜像。绿框标识的 <strong>-efi.img</strong> 标识的是使用现代 EFI方式启动的硬盘镜像，你可以任选一个，以EFI方式开机会较快。这里建议使用下面那个EFI版本的镜像，把他复制到 微PE U盘的<strong>数据分区</strong>，这个分区的特征是刚安装完 微PE后是 <strong>空的</strong>，且容量较大。我已经将 physdiskwrite.exe 和 openwrt 镜像复制到该分区的，其截图如下</p>\n<p><img src=\"https://raw.githubusercontent.com/ryjer/imgbed/master/images/20210720235608-WePE.png\" alt=\"WePE 分区\"></p>\n<h4 id=\"b-iso-写盘工具\"><a href=\"#b-iso-写盘工具\" class=\"headerlink\" title=\"b. iso 写盘工具\"></a>b. iso 写盘工具</h4><p>将 iso 镜像写入硬盘的工具有很多，但能够在 windows PE 这个残缺版windows中运行的却没有几个。</p>\n<p>这里推荐使用 <strong>physdiskwrite</strong>，这是一个不依赖任何windows库的独立命令行工具。可以在Windows PE这样的精简版 windows中正常运行。其下载官网是 <a href=\"https://m0n0.ch/wall/physdiskwrite.php\">m0n0wall - physdiskwrite</a>，其隶属于 m0n0wall 项目（一个防火墙），原本是为了将 m0n0wall 防火墙安装到嵌入式设备中而编写的。打开下载页面后，其页面如下</p>\n<p><img src=\"https://raw.githubusercontent.com/ryjer/imgbed/master/images/20210720234916-phydiskwrite-download.png\" alt=\"phydiskwrite 下载页\"></p>\n<p>点击红框内链接即可下载该命令行工具。你可能不知道什么是命令行，但这不影响接下来的使用，请放心</p>\n<p>如果你访问不了这个网站，我还准备了Bt下载方式。不过这个网站一般不会出什么问题，建议大家还是尽量去官网下载</p>\n<p><a href=\"http://blog-file.webcdn.top/torrents/physdiskwrite-0.5.3.zip.torrent\">physdiskwrite BT下载</a></p>\n<p><a href=\"magnet:?xt=urn:btih:O6LDQY5LEBGGYKESOJ5TFO65HBP6XVYR&dn=physdiskwrite-0.5.3.zip&tr=udp%3A%2F%2Ftracker.publicbt.com%3A80%2Fannounce&tr=udp%3A%2F%2Ftracker.getip.top%3A6969%2Fannounce&tr=http%3A%2F%2Ftracker.netmap.top%3A6969%2Fannounce&tr=http%3A%2F%2Ftracker.getip.top%3A6969%2Fannounce&tr=http%3A%2F%2Fbt.rghost.net%2Fannounce&tr=http%3A%2F%2Fcarbon-bonsai-621.appspot.com%2Fannounce&tr=http%3A%2F%2Fexplodie.org%3A6969%2Fannounce&tr=http%3A%2F%2Fgooger.cc%3A1337%2Fannounce&tr=http%3A%2F%2Fh4.trakx.nibba.trade%2Fannounce&tr=http%3A%2F%2Fkinorun.com%2Fannounce.php&tr=http%3A%2F%2Fmilanesitracker.tekcities.com%2Fannounce&tr=http%3A%2F%2Fnyaa.tracker.wf%3A7777%2Fannounce&tr=http%3A%2F%2Fopenbittorrent.com%2Fannounce&tr=http%3A%2F%2Fopentracker.xyz%2Fannounce&tr=http%3A%2F%2Fshare.camoe.cn%3A8080%2Fannounce&tr=http%3A%2F%2Fsiambit.com%2Fannounce.php&tr=http%3A%2F%2Ft.nyaatracker.com%2Fannounce&tr=http%3A%2F%2Ftorrent-team.net%2Fannounce.php&tr=http%3A%2F%2Ftorrent.nwps.ws%2Fannounce&tr=http%3A%2F%2Ftorrentzilla.org%2Fannounce&tr=http%3A%2F%2Ftorrentzilla.org%2Fannounce.php&tr=http%3A%2F%2Ftr.cili001.com%3A8070%2Fannounce&tr=http%3A%2F%2Ftracker-cdn.moeking.me%3A2095%2Fannounce&tr=http%3A%2F%2Ftracker.files.fm%3A6969%2Fannounce&tr=http%3A%2F%2Ftracker.gbitt.info%2Fannounce&tr=http%3A%2F%2Ftracker.ipv6tracker.org%2Fannounce&tr=http%3A%2F%2Ftracker.ipv6tracker.ru%2Fannounce&tr=http%3A%2F%2Ftracker.tfile.me%2Fannounce&tr=http%3A%2F%2Ftracker.trackerfix.com%2Fannounce&tr=http%3A%2F%2Ftracker1.bt.moack.co.kr%2Fannounce&tr=http%3A%2F%2Fvps02.net.orel.ru%2Fannounce&tr=http%3A%2F%2Fwww.shnflac.net%2Fannounce.php&tr=http%3A%2F%2Fwww.zone-torrent.net%2Fannounce.php&tr=https%3A%2F%2Fcarbon-bonsai-621.appspot.com%2Fannounce&tr=https%3A%2F%2Fmytracker.fly.dev%2Fannounce&tr=https%3A%2F%2Fopentracker.xyz%2Fannounce&tr=https%3A%2F%2Ftr.torland.ga%2Fannounce&tr=https%3A%2F%2Ftracker.lilithraws.cf%2Fannounce&tr=https%3A%2F%2Ftracker.nitrix.me%2Fannounce&tr=https%3A%2F%2Ftracker.tamersunion.org%2Fannounce&tr=https%3A%2F%2Ftrakx.herokuapp.com%2Fannounce&tr=udp%3A%2F%2F6ahddutb1ucc3cp.ru%3A6969%2Fannounce&tr=udp%3A%2F%2F9.rarbg.com%3A2730%2Fannounce&tr=udp%3A%2F%2F9.rarbg.com%3A2810%2Fannounce&tr=udp%3A%2F%2F9.rarbg.me%3A2710%2Fannounce&tr=udp%3A%2F%2F9.rarbg.to%3A2710%2Fannounce&tr=udp%3A%2F%2Fbt.yui.cat%3A55268%2Fannounce&tr=udp%3A%2F%2Fbubu.mapfactor.com%3A6969%2Fannounce&tr=udp%3A%2F%2Fcode2chicken.nl%3A6969%2Fannounce&tr=udp%3A%2F%2Fdiscord.heihachi.pw%3A6969%2Fannounce&tr=udp%3A%2F%2Fedu.uifr.ru%3A6969%2Fannounce&tr=udp%3A%2F%2Fengplus.ru%3A6969%2Fannounce&tr=udp%3A%2F%2Fexodus.desync.com%3A6969%2Fannounce&tr=udp%3A%2F%2Fexplodie.org%3A6969%2Fannounce&tr=udp%3A%2F%2Ffe.dealclub.de%3A6969%2Fannounce&tr=udp%3A%2F%2Fipv6.tracker.zerobytes.xyz%3A16661%2Fannounce&tr=udp%3A%2F%2Fmail.realliferpg.de%3A6969%2Fannounce&tr=udp%3A%2F%2Fmovies.zsw.ca%3A6969%2Fannounce&tr=udp%3A%2F%2Fmts.tvbit.co%3A6969%2Fannounce&tr=udp%3A%2F%2Fopen.demonii.com%3A1337%2Fannounce&tr=udp%3A%2F%2Fopen.stealth.si%3A80%2Fannounce&tr=udp%3A%2F%2Fopentor.org%3A2710%2Fannounce&tr=udp%3A%2F%2Fopentracker.i2p.rocks%3A6969%2Fannounce&tr=udp%3A%2F%2Fp4p.arenabg.com%3A1337%2Fannounce&tr=udp%3A%2F%2Fretracker.hotplug.ru%3A2710%2Fannounce&tr=udp%3A%2F%2Fretracker.lanta-net.ru%3A2710%2Fannounce&tr=udp%3A%2F%2Fthetracker.org%3A80%2Fannounce&tr=udp%3A%2F%2Ftracker.0x.tf%3A6969%2Fannounce&tr=udp%3A%2F%2Ftracker.altrosky.nl%3A6969%2Fannounce&tr=udp%3A%2F%2Ftracker.army%3A6969%2Fannounce&tr=udp%3A%2F%2Ftracker.beeimg.com%3A6969%2Fannounce&tr=udp%3A%2F%2Ftracker.birkenwald.de%3A6969%2Fannounce&tr=udp%3A%2F%2Ftracker.blacksparrowmedia.net%3A6969%2Fannounce&tr=udp%3A%2F%2Ftracker.breizh.pm%3A6969%2Fannounce&tr=udp%3A%2F%2Ftracker.cyberia.is%3A6969%2Fannounce&tr=udp%3A%2F%2Ftracker.dler.org%3A6969%2Fannounce&tr=udp%3A%2F%2Ftracker.leech.ie%3A1337%2Fannounce&tr=udp%3A%2F%2Ftracker.lelux.fi%3A6969%2Fannounce&tr=udp%3A%2F%2Ftracker.loadbt.com%3A6969%2Fannounce&tr=udp%3A%2F%2Ftracker.moeking.me%3A6969%2Fannounce&tr=udp%3A%2F%2Ftracker.nrx.me%3A6969%2Fannounce&tr=udp%3A%2F%2Ftracker.ololosh.space%3A6969%2Fannounce&tr=udp%3A%2F%2Ftracker.openbittorrent.com%3A6969%2Fannounce&tr=udp%3A%2F%2Ftracker.opentrackr.org%3A1337%2Fannounce&tr=udp%3A%2F%2Ftracker.theoks.net%3A6969%2Fannounce&tr=udp%3A%2F%2Ftracker.torrent.eu.org%3A451%2Fannounce&tr=udp%3A%2F%2Ftracker.uw0.xyz%3A6969%2Fannounce&tr=udp%3A%2F%2Ftracker.zerobytes.xyz%3A1337%2Fannounce&tr=udp%3A%2F%2Ftracker0.ufibox.com%3A6969%2Fannounce&tr=udp%3A%2F%2Ftracker1.bt.moack.co.kr%3A80%2Fannounce&tr=udp%3A%2F%2Ftracker2.dler.com%3A80%2Fannounce&tr=udp%3A%2F%2Ftracker4.itzmx.com%3A2710%2Fannounce&tr=udp%3A%2F%2Ftracker6.lelux.fi%3A6969%2Fannounce&tr=udp%3A%2F%2Fudp-tracker.shittyurl.org%3A6969%2Fannounce&tr=udp%3A%2F%2Fvibe.sleepyinternetfun.xyz%3A1738%2Fannounce&tr=udp%3A%2F%2Fwassermann.online%3A6969%2Fannounce&tr=udp%3A%2F%2Fwww.torrent.eu.org%3A451%2Fannounce&tr=http%3A%2F%2F107.152.127.9%3A6969%2Fannounce&tr=http%3A%2F%2F1337.abcvg.info%3A80%2Fannounce&tr=http%3A%2F%2F159.69.65.157%3A6969%2Fannounce&tr=http%3A%2F%2F185.148.3.231%3A80%2Fannounce&tr=http%3A%2F%2F193.37.214.12%3A6969%2Fannounce&tr=http%3A%2F%2F212.6.3.67%3A80%2Fannounce&tr=http%3A%2F%2F51.79.71.167%3A80%2Fannounce&tr=http%3A%2F%2F51.81.46.170%3A6969%2Fannounce&tr=http%3A%2F%2F60-fps.org%3A80%2Fbt%3A80%2Fannounce.php&tr=http%3A%2F%2F78.30.254.12%3A2710%2Fannounce&tr=http%3A%2F%2F%5B2001%3A1b10%3A1000%3A8101%3A0%3A242%3Aac11%3A2%5D%3A6969%2Fannounce&tr=http%3A%2F%2F%5B2001%3A470%3A1%3A189%3A0%3A1%3A2%3A3%5D%3A6969%2Fannounce&tr=http%3A%2F%2F%5B2a04%3Aac00%3A1%3A3dd8%3A%3A1%3A2710%5D%3A2710%2Fannounce&tr=http%3A%2F%2Fall4nothin.net%3A80%2Fannounce.php&tr=http%3A%2F%2Falltorrents.net%3A80%2Fbt%3A80%2Fannounce.php&tr=http%3A%2F%2Fatrack.pow7.com%3A80%2Fannounce&tr=http%3A%2F%2Fbaibako.tv%3A80%2Fannounce&tr=http%3A%2F%2Fbig-boss-tracker.net%3A80%2Fannounce.php&tr=http%3A%2F%2Fbithq.org%3A80%2Fannounce.php&tr=http%3A%2F%2Fbt.3dmgame.com%3A2710%2Fannounce&tr=http%3A%2F%2Fbt.ali213.net%3A8000%2Fannounce&tr=http%3A%2F%2Fbt.edwardk.info%3A2710%2Fannounce&tr=http%3A%2F%2Fbt.okmp3.ru%3A2710%2Fannounce&tr=http%3A%2F%2Fbt.rghost.net%3A80%2Fannounce&tr=http%3A%2F%2Fbt.unionpeer.org%3A777%2Fannounce&tr=http%3A%2F%2Fbt.zlofenix.org%3A81%2Fannounce&tr=http%3A%2F%2Fbtx.anifilm.tv%3A80%2Fannounce.php&tr=http%3A%2F%2Fcarbon-bonsai-621.appspot.com%3A80%2Fannounce&tr=http%3A%2F%2Fconcen.org%3A6969%2Fannounce&tr=http%3A%2F%2Fdata-bg.net%3A80%2Fannounce.php&tr=http%3A%2F%2Fdatascene.net%3A80%2Fannounce.php&tr=http%3A%2F%2Ffinbytes.org%3A80%2Fannounce.php&tr=http%3A%2F%2Ffxtt.ru%3A80%2Fannounce&tr=http%3A%2F%2Fh4.trakx.nibba.trade%3A80%2Fannounce&tr=http%3A%2F%2Fkinorun.com%3A80%2Fannounce.php&tr=http%3A%2F%2Fmasters-tb.com%3A80%2Fannounce.php&tr=http%3A%2F%2Fmediaclub.tv%3A80%2Fannounce.php&tr=http%3A%2F%2Fmilanesitracker.tekcities.com%3A80%2Fannounce&tr=http%3A%2F%2Fmixfiend.com%3A6969%2Fannounce&tr=http%3A%2F%2Fmvgroup.org%3A2710%2Fannounce&tr=http%3A%2F%2Fns349743.ip-91-121-106.eu%3A80%2Fannounce&tr=http%3A%2F%2Fopen.acgnxtracker.com%3A80%2Fannounce&tr=http%3A%2F%2Fopen.acgtracker.com%3A1096%2Fannounce&tr=http%3A%2F%2Fopenbittorrent.com%3A80%2Fannounce&tr=http%3A%2F%2Fopentracker.i2p.rocks%3A6969%2Fannounce&tr=http%3A%2F%2Fopentracker.xyz%3A80%2Fannounce&tr=http%3A%2F%2Fp4p.arenabg.com%3A1337%2Fannounce&tr=http%3A%2F%2Fpow7.com%3A80%2Fannounce&tr=http%3A%2F%2Fproaudiotorrents.org%3A80%2Fannounce.php&tr=http%3A%2F%2Fretracker.hotplug.ru%3A2710%2Fannounce&tr=http%3A%2F%2Fretracker.spark-rostov.ru%3A80%2Fannounce&tr=http%3A%2F%2Fretracker.telecom.by%3A80%2Fannounce&tr=http%3A%2F%2Fsecure.pow7.com%3A80%2Fannounce&tr=http%3A%2F%2Fsiambit.com%3A80%2Fannounce.php&tr=http%3A%2F%2Ft.acg.rip%3A6699%2Fannounce&tr=http%3A%2F%2Ft.nyaatracker.com%3A80%2Fannounce&tr=http%3A%2F%2Ft.overflow.biz%3A6969%2Fannounce&tr=http%3A%2F%2Ft1.pow7.com%3A80%2Fannounce&tr=http%3A%2F%2Ft2.pow7.com%3A80%2Fannounce&tr=http%3A%2F%2Ftorrent-team.net%3A80%2Fannounce.php&tr=http%3A%2F%2Ftorrent.fedoraproject.org%3A6969%2Fannounce&tr=http%3A%2F%2Ftorrent.mp3quran.net%3A80%2Fannounce.php&tr=http%3A%2F%2Ftorrent.nwps.ws%3A80%2Fannounce&tr=http%3A%2F%2Ftorrent.resonatingmedia.com%3A6969%2Fannounce&tr=http%3A%2F%2Ftorrent.ubuntu.com%3A6969%2Fannounce&tr=http%3A%2F%2Ftorrents.linuxmint.com%3A80%2Fannounce.php&tr=http%3A%2F%2Ftorrentsmd.com%3A8080%2Fannounce&tr=http%3A%2F%2Ftorrenttracker.nwc.acsalaska.net%3A6969%2Fannounce&tr=http%3A%2F%2Ftorrentzilla.org%3A80%2Fannounce&tr=http%3A%2F%2Ftorrentzilla.org%3A80%2Fannounce.php&tr=http%3A%2F%2Ftr.kxmp.cf%3A80%2Fannounce&tr=http%3A%2F%2Ftracker.ali213.net%3A8080%2Fannounce&tr=http%3A%2F%2Ftracker.anirena.com%3A80%2Fannounce&tr=http%3A%2F%2Ftracker.birkenwald.de%3A6969%2Fannounce&tr=http%3A%2F%2Ftracker.bittor.pw%3A1337%2Fannounce&tr=http%3A%2F%2Ftracker.breizh.pm%3A6969%2Fannounce&tr=http%3A%2F%2Ftracker.bt4g.com%3A2095%2Fannounce&tr=http%3A%2F%2Ftracker.dler.org%3A6969%2Fannounce&tr=http%3A%2F%2Ftracker.etree.org%3A6969%2Fannounce&tr=http%3A%2F%2Ftracker.fdn.fr%3A6969%2Fannounce&tr=http%3A%2F%2Ftracker.frozen-layer.net%3A6969%2Fannounce&tr=http%3A%2F%2Ftracker.gbitt.info%3A80%2Fannounce&tr=http%3A%2F%2Ftracker.gigatorrents.ws%3A2710%2Fannounce&tr=http%3A%2F%2Ftracker.grepler.com%3A6969%2Fannounce&tr=http%3A%2F%2Ftracker.ipv6tracker.org%3A80%2Fannounce&tr=http%3A%2F%2Ftracker.ipv6tracker.ru%3A80%2Fannounce&tr=http%3A%2F%2Ftracker.lelux.fi%3A80%2Fannounce&tr=http%3A%2F%2Ftracker.minglong.org%3A8080%2Fannounce&tr=http%3A%2F%2Ftracker.noobsubs.net%3A80%2Fannounce&tr=http%3A%2F%2Ftracker.opentrackr.org%3A1337%2Fannounce&tr=http%3A%2F%2Ftracker.pow7.com%3A80%2Fannounce&tr=http%3A%2F%2Ftracker.shittyurl.org%3A80%2Fannounce&tr=http%3A%2F%2Ftracker.tambovnet.org%3A80%2Fannounce.php&tr=http%3A%2F%2Ftracker.tfile.me%3A80%2Fannounce&tr=http%3A%2F%2Ftracker.torrentbytes.net%3A80%2Fannounce.php&tr=http%3A%2F%2Ftracker.trackerfix.com%3A80%2Fannounce&tr=http%3A%2F%2Ftracker.uw0.xyz%3A6969%2Fannounce&tr=http%3A%2F%2Ftracker.xdvdz.com%3A2710%2Fannounce&tr=http%3A%2F%2Ftracker.zerobytes.xyz%3A1337%2Fannounce&tr=http%3A%2F%2Ftracker1.bt.moack.co.kr%3A80%2Fannounce&tr=http%3A%2F%2Ftracker2.dler.org%3A80%2Fannounce&tr=http%3A%2F%2Ftracker3.dler.org%3A2710%2Fannounce&tr=http%3A%2F%2Ftracker4.itzmx.com%3A2710%2Fannounce&tr=http%3A%2F%2Ftrk.publictracker.xyz%3A6969%2Fannounce&tr=http%3A%2F%2Fvps02.net.orel.ru%3A80%2Fannounce&tr=http%3A%2F%2Fwww.all4nothin.net%3A80%2Fannounce.php&tr=http%3A%2F%2Fwww.mvgroup.org%3A2710%2Fannounce&tr=http%3A%2F%2Fwww.shnflac.net%3A80%2Fannounce.php&tr=http%3A%2F%2Fwww.thetradersden.org%2Fforums%2Ftracker%3A80%2Fannounce.php&tr=http%3A%2F%2Fwww.tvnihon.com%3A6969%2Fannounce&tr=http%3A%2F%2Fwww.wareztorrent.com%3A80%2Fannounce&tr=http%3A%2F%2Fwww.worldboxingvideoarchive.com%3A80%2Fannounce.php&tr=http%3A%2F%2Fwww.xwt-classics.net%3A80%2Fannounce.php&tr=http%3A%2F%2Fwww.zone-torrent.net%3A80%2Fannounce.php&tr=https%3A%2F%2F1337.abcvg.info%3A443%2Fannounce&tr=https%3A%2F%2Fcarbon-bonsai-621.appspot.com%3A443%2Fannounce&tr=https%3A%2F%2Fmytracker.fly.dev%3A443%2Fannounce&tr=https%3A%2F%2Fopentracker.acgnx.se%3A443%2Fannounce&tr=https%3A%2F%2Fopentracker.xyz%3A443%2Fannounce&tr=https%3A%2F%2Ftr.torland.ga%3A443%2Fannounce&tr=https%3A%2F%2Ftracker.bt-hash.com%3A443%2Fannounce&tr=https%3A%2F%2Ftracker.coalition.space%3A443%2Fannounce&tr=https%3A%2F%2Ftracker.foreverpirates.co%3A443%2Fannounce&tr=https%3A%2F%2Ftracker.iriseden.eu%3A443%2Fannounce&tr=https%3A%2F%2Ftracker.iriseden.fr%3A443%2Fannounce&tr=https%3A%2F%2Ftracker.lelux.fi%3A443%2Fannounce&tr=https%3A%2F%2Ftracker.lilithraws.cf%3A443%2Fannounce&tr=https%3A%2F%2Ftracker.nanoha.org%3A443%2Fannounce&tr=https%3A%2F%2Ftracker.nitrix.me%3A443%2Fannounce&tr=https%3A%2F%2Ftracker.tamersunion.org%3A443%2Fannounce&tr=https%3A%2F%2Ftrakx.herokuapp.com%3A443%2Fannounce&tr=https%3A%2F%2Fw.wwwww.wtf%3A443%2Fannounce&tr=udp%3A%2F%2F103.196.36.31%3A6969%2Fannounce&tr=udp%3A%2F%2F104.244.72.77%3A1337%2Fannounce&tr=udp%3A%2F%2F109.248.43.36%3A6969%2Fannounce&tr=udp%3A%2F%2F119.28.134.203%3A6969%2Fannounce&tr=udp%3A%2F%2F144.76.35.202%3A6969%2Fannounce&tr=udp%3A%2F%2F144.76.82.110%3A6969%2Fannounce&tr=udp%3A%2F%2F148.251.53.72%3A6969%2Fannounce&tr=udp%3A%2F%2F149.28.47.87%3A1738%2Fannounce&tr=udp%3A%2F%2F159.69.208.124%3A6969%2Fannounce&tr=udp%3A%2F%2F167.179.77.133%3A1%2Fannounce&tr=udp%3A%2F%2F173.212.223.237%3A6969%2Fannounce&tr=udp%3A%2F%2F176.96.139.154%3A8080%2Fannounce&tr=udp%3A%2F%2F184.105.151.166%3A6969%2Fannounce&tr=udp%3A%2F%2F185.181.60.67%3A80%2Fannounce&tr=udp%3A%2F%2F185.183.158.105%3A6969%2Fannounce&tr=udp%3A%2F%2F185.21.216.185%3A6969%2Fannounce&tr=udp%3A%2F%2F185.8.156.2%3A6969%2Fannounce&tr=udp%3A%2F%2F185.92.223.36%3A6969%2Fannounce&tr=udp%3A%2F%2F195.201.94.195%3A6969%2Fannounce&tr=udp%3A%2F%2F199.217.118.72%3A6969%2Fannounce&tr=udp%3A%2F%2F205.185.121.146%3A6969%2Fannounce&tr=udp%3A%2F%2F208.83.20.20%3A6969%2Fannounce&tr=udp%3A%2F%2F209.141.59.16%3A6969%2Fannounce&tr=udp%3A%2F%2F212.1.226.176%3A2710%2Fannounce&tr=udp%3A%2F%2F213.108.129.160%3A6969%2Fannounce&tr=udp%3A%2F%2F45.154.253.10%3A6969%2Fannounce&tr=udp%3A%2F%2F45.76.92.209%3A6969%2Fannounce&tr=udp%3A%2F%2F46.148.18.252%3A2710%2Fannounce&tr=udp%3A%2F%2F5.181.49.163%3A6969%2Fannounce&tr=udp%3A%2F%2F5.196.68.239%3A6969%2Fannounce&tr=udp%3A%2F%2F51.15.2.221%3A6969%2Fannounce&tr=udp%3A%2F%2F52.58.128.163%3A6969%2Fannounce&tr=udp%3A%2F%2F62.168.229.166%3A6969%2Fannounce&tr=udp%3A%2F%2F65.21.48.148%3A6969%2Fannounce&tr=udp%3A%2F%2F67.224.119.27%3A6969%2Fannounce&tr=udp%3A%2F%2F78.30.254.12%3A2710%2Fannounce&tr=udp%3A%2F%2F82.65.37.128%3A6969%2Fannounce&tr=udp%3A%2F%2F88.99.142.4%3A8000%2Fannounce&tr=udp%3A%2F%2F89.36.216.8%3A6969%2Fannounce&tr=udp%3A%2F%2F91.121.145.207%3A6969%2Fannounce&tr=udp%3A%2F%2F91.149.192.31%3A6969%2Fannounce&tr=udp%3A%2F%2F91.216.110.52%3A451%2Fannounce&tr=udp%3A%2F%2F93.104.214.40%3A6969%2Fannounce&tr=udp%3A%2F%2F95.181.152.224%3A6969%2Fannounce&tr=udp%3A%2F%2F95.217.161.135%3A6969%2Fannounce&tr=udp%3A%2F%2F%5B2001%3A1b10%3A1000%3A8101%3A0%3A242%3Aac11%3A2%5D%3A6969%2Fannounce&tr=udp%3A%2F%2F%5B2001%3A470%3A1%3A189%3A0%3A1%3A2%3A3%5D%3A6969%2Fannounce&tr=udp%3A%2F%2F%5B2a03%3A7220%3A8083%3Acd00%3A%3A1%5D%3A451%2Fannounce&tr=udp%3A%2F%2F%5B2a04%3Aac00%3A1%3A3dd8%3A%3A1%3A2710%5D%3A2710%2Fannounce&tr=udp%3A%2F%2F%5B2a0f%3Ae586%3Af%3Af%3A%3A220%5D%3A6969%2Fannounce&tr=udp%3A%2F%2Fadmin.videoenpoche.info%3A6969%2Fannounce&tr=udp%3A%2F%2Fanidex.moe%3A6969%2Fannounce&tr=udp%3A%2F%2Fapp.icon256.com%3A8000%2Fannounce&tr=udp%3A%2F%2Fbt.100.pet%3A2711%2Fannounce&tr=udp%3A%2F%2Fbt2.54new.com%3A8080%2Fannounce&tr=udp%3A%2F%2Fcutiegirl.ru%3A6969%2Fannounce&tr=udp%3A%2F%2Finferno.demonoid.pw%3A3418%2Fannounce&tr=udp%3A%2F%2Fipv4.tracker.harry.lu%3A80%2Fannounce&tr=udp%3A%2F%2Fopen.publictracker.xyz%3A6969%2Fannounce&tr=udp%3A%2F%2Fpeerfect.org%3A6969%2Fannounce&tr=udp%3A%2F%2Fpow7.com%3A80%2Fannounce&tr=udp%3A%2F%2Fpublic.publictracker.xyz%3A6969%2Fannounce&tr=udp%3A%2F%2Fretracker.netbynet.ru%3A2710%2Fannounce&tr=udp%3A%2F%2Fretracker.nts.su%3A2710%2Fannounce&tr=udp%3A%2F%2Fretracker.sevstar.net%3A2710%2Fannounce&tr=udp%3A%2F%2Ft3.leech.ie%3A1337%2Fannounce&tr=udp%3A%2F%2Ftr.bangumi.moe%3A6969%2Fannounce&tr=udp%3A%2F%2Ftracker-de.ololosh.space%3A6969%2Fannounce&tr=udp%3A%2F%2Ftracker.bittor.pw%3A1337%2Fannounce&tr=udp%3A%2F%2Ftracker.dler.com%3A6969%2Fannounce&tr=udp%3A%2F%2Ftracker.eddie4.nl%3A6969%2Fannounce&tr=udp%3A%2F%2Ftracker.edkj.club%3A6969%2Fannounce&tr=udp%3A%2F%2Ftracker.filemail.com%3A6969%2Fannounce&tr=udp%3A%2F%2Ftracker.flashtorrents.org%3A6969%2Fannounce&tr=udp%3A%2F%2Ftracker.grepler.com%3A6969%2Fannounce&tr=udp%3A%2F%2Ftracker.halfchub.club%3A6969%2Fannounce&tr=udp%3A%2F%2Ftracker.kuroy.me%3A5944%2Fannounce&tr=udp%3A%2F%2Ftracker.monitorit4.me%3A6969%2Fannounce&tr=udp%3A%2F%2Ftracker.nighthawk.pw%3A4201%2Fannounce&tr=udp%3A%2F%2Ftracker.open-internet.nl%3A6969%2Fannounce&tr=udp%3A%2F%2Ftracker.pomf.se%3A80%2Fannounce&tr=udp%3A%2F%2Ftracker.sbsub.com%3A2710%2Fannounce&tr=udp%3A%2F%2Ftracker.sktorrent.net%3A6969%2Fannounce&tr=udp%3A%2F%2Ftracker.swateam.org.uk%3A2710%2Fannounce&tr=udp%3A%2F%2Ftracker.tiny-vps.com%3A6969%2Fannounce&tr=udp%3A%2F%2Ftracker.tricitytorrents.com%3A2710%2Fannounce&tr=udp%3A%2F%2Ftracker.vanitycore.co%3A6969%2Fannounce&tr=udp%3A%2F%2Ftracker2.christianbro.pw%3A6969%2Fannounce&tr=udp%3A%2F%2Ftracker2.dler.org%3A80%2Fannounce&tr=udp%3A%2F%2Fu.wwwww.wtf%3A1%2Fannounce&tr=udp%3A%2F%2Fvibe.community%3A6969%2Fannounce&tr=wss%3A%2F%2Ftracker.openwebtorrent.com%3A443%2Fannounce&xl=38102\">physdiskwrite 磁力链接</a></p>\n<p>下载下来后是一个压缩包，解压压缩包后打开文件夹，可见 <code>physdiskwrite.exe</code> 文件（如下图）。这就是我们要使用的工具本体</p>\n<p><img src=\"https://raw.githubusercontent.com/ryjer/imgbed/master/images/20210720235409-phydiskwrite.png\" alt=\"phydiskwrite.exe\"></p>\n<p>请将该文件复制到 微PE U盘的 <strong>数据分区</strong>。这个分区的特征是刚安装完 微PE后是 <strong>空的</strong>，且容量较大。我已经将 physdiskwrite.exe 和 openwrt 镜像复制到该分区的，其结果如下</p>\n<p><img src=\"https://raw.githubusercontent.com/ryjer/imgbed/master/images/20210720235608-WePE.png\" alt=\"WePE 分区\"></p>\n<p>复制完两个文件后，数据分区的内容应当包含如下图所示的两个文件。</p>\n<p><img src=\"https://raw.githubusercontent.com/ryjer/imgbed/master/images/20210721001227-openwrt-install.png\" alt=\"openwrt 刷写文件\"></p>\n<h3 id=\"3-使用-微PE启动软路由\"><a href=\"#3-使用-微PE启动软路由\" class=\"headerlink\" title=\"3. 使用 微PE启动软路由\"></a>3. 使用 微PE启动软路由</h3><p>弹出 微PE U盘，插入软路由 USB 接口中。再将电源、鼠标、键盘、显示器（别忘了显示器，我们需要操作window PE 系统）设备连接好。</p>\n<p>按下电源键开机，如果你软路由的内存固态硬盘已经安装过系统了，请进入BIOS 或 启动菜单，将U盘设定为第一启动项。</p>\n<p>然后就会以U盘内的 window PE 系统启动了，启动之后桌面如下</p>\n<p><img src=\"https://raw.githubusercontent.com/ryjer/imgbed/master/images/20210722220057-cc4644de7125c43c56068bc0c8967b0d-995eda00.png\" alt=\"微PE桌面\"></p>\n<h3 id=\"4-清除磁盘分区\"><a href=\"#4-清除磁盘分区\" class=\"headerlink\" title=\"4. 清除磁盘分区\"></a>4. 清除磁盘分区</h3><p>打开上图红框标示的 <code>分区工具 DiskGenius</code>，在左侧选中目标磁盘（这里是 Virtual Box 虚拟机内的截图），右键菜单选择 <code>删除所有分区(A)</code>。</p>\n<p><img src=\"https://raw.githubusercontent.com/ryjer/imgbed/master/images/20210721003914-WePE-diskgenius.png\" alt=\"删除所有分区\"></p>\n<p>然后确认</p>\n<p><img src=\"https://raw.githubusercontent.com/ryjer/imgbed/master/images/20210721004147-WePE-diskgenius.png\" alt=\"确认删除分区\"></p>\n<p>确认后，会“模拟”清除所有分区。其结果应当如下图所示，绿框中应当显示为 <strong>空闲</strong></p>\n<p><img src=\"https://raw.githubusercontent.com/ryjer/imgbed/master/images/20210721004453-WePE-diskgenius.png\" alt=\"删除分区结果\"></p>\n<p>到这里，都是模拟结果。你需要点击上图左上方红框所示的 <code>保存更改</code> 按钮，才能<strong>真正</strong>将模拟执行的结果保存。即真正删除所有分区。</p>\n<p><img src=\"https://raw.githubusercontent.com/ryjer/imgbed/master/images/20210721004845-WePE-diskgenius.png\" alt=\"确认保存\"></p>\n<p>点击 <code>是</code> 后，完成结果保存</p>\n<h3 id=\"5-写入镜像\"><a href=\"#5-写入镜像\" class=\"headerlink\" title=\"5. 写入镜像\"></a>5. 写入镜像</h3><p>首先，使用微PE U盘在WinPE系统中清空内存硬盘上的所有分区，以防止其他分区的干扰。</p>\n<p>最后，将U盘内地 opwnwrt 镜像写入内置硬盘。</p>\n<p>接下来，我使用图文详细介绍（保姆级介绍）如何进行安装。</p>\n<h1 id=\"4-IPv6-设置\"><a href=\"#4-IPv6-设置\" class=\"headerlink\" title=\"4. IPv6 设置\"></a>4. IPv6 设置</h1><p>参考链接 <a href=\"https://koolshare.cn/thread-165156-1-1.html\">关于LEDE软路由ipv6与外网访问的那些事（最详傻瓜级教程）</a></p>\n","categories":["openwrt"],"tags":["linux","刷机","软路由","openwrt","lede"]},{"title":"编辑 windows 10 环境变量","url":"/posts/a1ce50df27.html","content":"<p>原文链接：<a href=\"http://blog.ryjer.com/posts/a1ce50df27.html\">http://blog.ryjer.com/posts/a1ce50df27.html</a></p>\n<h1 id=\"1、介绍\"><a href=\"#1、介绍\" class=\"headerlink\" title=\"1、介绍\"></a>1、介绍</h1><p><strong>环境变量</strong> 是操作系统中的概念（无论是 Unix 、linux还是windows），环境变量在创建新进程的时候会自动继承到子进程中，从而使得几乎所有子进程都可以得到环境变量的<strong>值</strong>。</p>\n<p>用一种不严谨的说法就是，配置了系统的环境变量后，整个系统中的所有进程都可以读取到其内容。相当于一种 <strong>广播</strong> 信息，以便于整个系统的所有的进程读取使用。比如，可以使用环境变量告知系统的版本。</p>\n<span id=\"more\"></span>\n\n<h2 id=\"1-1-Path-变量由来\"><a href=\"#1-1-Path-变量由来\" class=\"headerlink\" title=\"1.1 Path 变量由来\"></a>1.1 Path 变量由来</h2><p>环境变量中最为著名的就是 <strong>Path</strong> 变量。要知道该变量的作用首先就要了解 Shell （或者是 windows 下的 <strong>命令提示符 CMD</strong> 或 <strong>PowerShell</strong>）是如何 <strong>寻找</strong> 一个命令对应的文件的。</p>\n<p>用户可以通过给出<strong>完整路径</strong>（比如：C:\\Windows\\system32\\ping.exe）来指明一个<strong>可执行文件</strong>（windows下的 .exe 拓展名文件），这样操作系统可以到指明的路径下直接定位该文件并运行。但是，一个系统中往往有众多的<strong>命令工具</strong>，如果每次都要输入完整的路径就会非常麻烦。所以，现代操作系统都会提供一种快速定位命令路径的方式：只需要将对应的<strong>可执行文件</strong>存放到统一的文件夹下，再将该文件夹的路径通过<strong>环境变量</strong> “广播” 到整个系统。</p>\n<p>于是，用户便可以直接输入命令的文件名（如：ping.exe），系统中的进程便会从<strong>“系统广播“</strong> 中读取统一的文件夹路径（如：C:\\Windows\\system32 文件夹），查找该文件夹下是否存在对应的可执行文件（即：C:\\Windows\\system32\\ <strong>ping.exe</strong> 是否存在）。如果存在，便打开该文件，不存在则报错。</p>\n<p>上面一直说的这个<strong>”统一文件夹“</strong>的环境变量就是 <strong>Path</strong> 环境变量。 </p>\n<p>后来，人们希望可以在多个路径下分别管理不同属性或权限的可执行文件工具，这就需要Path变量能够同时给出多个<strong>”路径“</strong>。</p>\n<h1 id=\"2、编辑环境变量\"><a href=\"#2、编辑环境变量\" class=\"headerlink\" title=\"2、编辑环境变量\"></a>2、编辑环境变量</h1><p>linux 和 Unix 的用户基本对处理环境变量非常熟悉，这里就不作说明了。</p>\n<h2 id=\"2-1-环境变量-面板\"><a href=\"#2-1-环境变量-面板\" class=\"headerlink\" title=\"2.1 环境变量 面板\"></a>2.1 环境变量 面板</h2><p>windows 下可以通过图形界面的方式编辑环境变量，windows 10 下的打开顺序为 <strong>此电脑 &gt; 属性 &gt; 高级系统设置 &gt; 环境变量</strong>。</p>\n<p><img src=\"https://raw.githubusercontent.com/ryjer/imgbed/master/images/20210513215156.png\" alt=\"此电脑-属性\"></p>\n<p>在<strong>属性</strong>主页，向下滚动可以看到<strong>相关设置</strong>，<strong>高级系统设置</strong>就在其中。</p>\n<p><img src=\"https://raw.githubusercontent.com/ryjer/imgbed/master/images/20210722220309-17bd5b130f107ce727b60c76df3da908-29a2d44d.png\" alt=\"系统属性\"></p>\n<p><img src=\"https://raw.githubusercontent.com/ryjer/imgbed/master/images/20210513215354.png\" alt=\"系统属性\"></p>\n<p>打开环境变量，就可以看到 <strong>环境变量</strong> 窗口。</p>\n<p><img src=\"https://raw.githubusercontent.com/ryjer/imgbed/master/images/20210513220236.png\" alt=\"环境变量窗口\"></p>\n<p>环境变量分为 <strong>用户变量</strong> 和 <strong>系统变量</strong> 两种。其中系统变量是整个操作系统中都可见的环境变量，而用户变量则只有本用户可见。考虑到windows系统绝大部分都在<strong>单用户</strong>模式下运行，因此一般不必计较他们的区别。</p>\n<h2 id=\"2-2-快速打开\"><a href=\"#2-2-快速打开\" class=\"headerlink\" title=\"2.2 快速打开\"></a>2.2 快速打开</h2><p>windows 10 提供了搜索功能，因此可以通过任务栏上的搜索栏快速打开 <strong>环境变量</strong> 窗口。</p>\n<p><img src=\"https://raw.githubusercontent.com/ryjer/imgbed/master/images/20210513221219.png\" alt=\"image-20210513221218543\"></p>\n<p>接下来的窗口顺序是相同的</p>\n<p><img src=\"https://raw.githubusercontent.com/ryjer/imgbed/master/images/20210513215354.png\" alt=\"系统属性\"></p>\n<p><img src=\"https://raw.githubusercontent.com/ryjer/imgbed/master/images/20210513220236.png\" alt=\"环境变量窗口\"></p>\n<h2 id=\"2-3-新建系统变量\"><a href=\"#2-3-新建系统变量\" class=\"headerlink\" title=\"2.3 新建系统变量\"></a>2.3 新建系统变量</h2><p>接下来以创建 JAVA_HOME 变量为例，在安装 java 开发环境 （JDK）时需要创建此变量。（我这里已经事先创建过了，不能创建同名变量）</p>\n<p>1、点击 <strong>新建</strong> 按键</p>\n<p><img src=\"https://raw.githubusercontent.com/ryjer/imgbed/master/images/20210513221837.png\" alt=\"新建 系统变量\"></p>\n<p>2、输入 变量名 和 变量值，然后点击<strong>确定</strong>。注意：此时环境变量仅仅是添加，并未保存生效</p>\n<p><img src=\"https://raw.githubusercontent.com/ryjer/imgbed/master/images/20210513222018.png\" alt=\"image-20210513222016840\"></p>\n<p>3、点击 环境变量 窗口的 <strong>确定</strong> 按键，保存更改。此时，刚刚添加的环境变量便<strong>生效</strong>了。</p>\n<p><img src=\"https://raw.githubusercontent.com/ryjer/imgbed/master/images/20210513222312.png\" alt=\"image-20210513222311004\"></p>\n<h2 id=\"2-4-编辑环境变量\"><a href=\"#2-4-编辑环境变量\" class=\"headerlink\" title=\"2.4 编辑环境变量\"></a>2.4 编辑环境变量</h2><p>当你需要对某个环境变量进行<strong>修改</strong>时，可以先 <strong>点击</strong> 选中该变量，然后点击 <strong>编辑</strong> 进入 编辑窗口进行编辑。 </p>\n<p><img src=\"https://raw.githubusercontent.com/ryjer/imgbed/master/images/20210513222646.png\" alt=\"编辑环境变量\"></p>\n<p><img src=\"https://raw.githubusercontent.com/ryjer/imgbed/master/images/20210513222715.png\" alt=\"image-20210513222712925\"></p>\n<p>编辑完后，点击确定。之后的操作与 新建变量中的 保存步骤相同。</p>\n<h1 id=\"3、编辑-Path-变量（数组变量）\"><a href=\"#3、编辑-Path-变量（数组变量）\" class=\"headerlink\" title=\"3、编辑 Path 变量（数组变量）\"></a>3、编辑 Path 变量（数组变量）</h1><p>在 Windows 中，对象 <strong>Path</strong> 变量这样的变量进行编辑与普通的单值环境变量不同。虽然他本质上也是 <strong>单值</strong>，但通过分号 ”;” 分割的方式“暗示”应当根据分隔符划分出多个值进行使用。</p>\n<p><img src=\"https://raw.githubusercontent.com/ryjer/imgbed/master/images/20210513223752.png\" alt=\"image-20210513223751116\"></p>\n<p>可以通过窗口右侧的 <strong>新建</strong> <strong>编辑</strong> 和 <strong>删除</strong> 等按键对其中的值进行操作。</p>\n<p><img src=\"https://raw.githubusercontent.com/ryjer/imgbed/master/images/20210513224409.png\" alt=\"多值变量\"></p>\n","categories":["windows","环境变量"],"tags":["windows","环境变量"]},{"title":"私有ip地址网段与掩码和掩位范围","url":"/posts/a19434a7d.html","content":"<blockquote>\n<p>私有ip地址（这里近谈ipv4私有ip）是网络地址的重要组成部分（真用起来发现真好用），ipv4 有三个主要的私有地址网段：</p>\n<p>A类地址网段：10.0.0.0/8             范围：10.0.0.0-10.255.255.255<br>B类地址网段：172.16.0.0/12      范围：172.16.0.0-172.31.255.255<br>C类地址网段：192.168.0.0/16    范围：192.168.0.0-192.168.255.255</p>\n</blockquote>\n<span id=\"more\"></span>\n\n<p>原文链接：<a href=\"http://blog.ryjer.com/posts/a19434a7d.html\">http://blog.ryjer.com/posts/a19434a7d.html</a></p>\n<h1 id=\"三大私有-ipv4-地址块\"><a href=\"#三大私有-ipv4-地址块\" class=\"headerlink\" title=\"三大私有 ipv4 地址块\"></a>三大私有 ipv4 地址块</h1><table>\n<thead>\n<tr>\n<th>类别</th>\n<th>地址块</th>\n<th>范围</th>\n<th>广播地址</th>\n<th>十进制掩码</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>A</td>\n<td>10.0.0.0/8</td>\n<td>10.0.0.0 ~ 10.255.255.255</td>\n<td>10.255.255.255</td>\n<td>255.0.0.0</td>\n</tr>\n<tr>\n<td>B</td>\n<td>172.16.0.0/12</td>\n<td>172.16.0.0 ~ 172.31.255.255</td>\n<td>172.31.255.255</td>\n<td>255.240.0.0</td>\n</tr>\n<tr>\n<td>C</td>\n<td>192.168.0.0/16</td>\n<td>192.168.0.0 ~ 192.168.255.255</td>\n<td>192.168.255.255</td>\n<td>255.255.255.0</td>\n</tr>\n</tbody></table>\n<p>可参考 IANA 官网相关页：<a href=\"https://www.iana.org/assignments/iana-ipv4-special-registry/iana-ipv4-special-registry.xhtml\">IANA IPv4 Special-Purpose Address Registry</a></p>\n<p>以上三个私有地址网段定义在 <strong>RFC1918</strong> 文档中：<a href=\"https://www.rfc-editor.org/rfc/rfc1918.html\">RFC 1918: Address Allocation for Private Internets (rfc-editor.org)</a></p>\n<h1 id=\"CIDR值与子网掩码\"><a href=\"#CIDR值与子网掩码\" class=\"headerlink\" title=\"CIDR值与子网掩码\"></a>CIDR值与子网掩码</h1><p>只列出常见的，请自行分8位后换算</p>\n<table>\n<thead>\n<tr>\n<th>CIDR值</th>\n<th>子网掩码</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><strong>/8</strong></td>\n<td>255.0.0.0</td>\n</tr>\n<tr>\n<td>/9</td>\n<td>255.128.0.0</td>\n</tr>\n<tr>\n<td>/10</td>\n<td>255.192.0.0</td>\n</tr>\n<tr>\n<td>/11</td>\n<td>255.224.0.0</td>\n</tr>\n<tr>\n<td><strong>/12</strong></td>\n<td>255.240.0.0</td>\n</tr>\n<tr>\n<td>/13</td>\n<td>255.248.0.0</td>\n</tr>\n<tr>\n<td>/14</td>\n<td>255.252.0.0</td>\n</tr>\n<tr>\n<td>/15</td>\n<td>255.254.0.0</td>\n</tr>\n<tr>\n<td><strong>/16</strong></td>\n<td>255.255.0.0</td>\n</tr>\n<tr>\n<td><strong>/24</strong></td>\n<td>255.255.255.0</td>\n</tr>\n</tbody></table>\n","categories":["网络","私有ip"],"tags":["网络","ip地址","掩码","CIDR"]},{"title":"windows10实现virtual box (vbox)虚拟机开机启动","url":"/posts/a13fbf58fb.html","content":"<blockquote>\n<p>日常经常使用 virtual box 中的 linux 虚拟机，但是每次开机后都要 手动打开 virtual box &gt; 点击虚拟机 &gt; 启动。重复而又繁琐</p>\n<p>因此，在网上搜索了一下设置 vbox虚拟机开机自动启动的方法，在这里进行记录备份</p>\n</blockquote>\n<span id=\"more\"></span>\n\n<p>原文链接：<a href=\"http://blog.ryjer.com/posts/a13fbf58fb.html\">http://blog.ryjer.com/posts/a13fbf58fb.html</a></p>\n<h1 id=\"一、有界面开机启动\"><a href=\"#一、有界面开机启动\" class=\"headerlink\" title=\"一、有界面开机启动\"></a>一、有界面开机启动</h1><p>这样开机后会启动一个带有界面的虚拟机，Linux虚拟机不建议这样使用，只建议 windows 等带有 GUI虚拟机使用</p>\n<h2 id=\"创建桌面快捷方式\"><a href=\"#创建桌面快捷方式\" class=\"headerlink\" title=\"创建桌面快捷方式\"></a>创建桌面快捷方式</h2><p><img src=\"https://raw.githubusercontent.com/ryjer/imgbed/master/images/20210813120513-c7bdd624dd01cf05e6970fb65f027363-7ae20c9c.png\" alt=\"image-20210813120509134\"></p>\n<p>然后，桌面上会多出如下 <strong>快捷方式</strong></p>\n<p><img src=\"https://raw.githubusercontent.com/ryjer/imgbed/master/images/20210813130128-2b0fa4a7d2d00947e37905ba01b2a481-9f6908e6.png\" alt=\"image-20210813130124998\"></p>\n<h2 id=\"添加到开机启动目录\"><a href=\"#添加到开机启动目录\" class=\"headerlink\" title=\"添加到开机启动目录\"></a>添加到开机启动目录</h2><p>windows 启动时，会自动运行 <code>C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\StartUp</code> 路径下的所有文件。所以，将上面的快捷方式复制到该目录下即可实现开机启动。</p>\n<p>（注意：添加开机自启动是高权限操作，需要管理员权限。比如下图的授权提示）</p>\n<p><img src=\"https://raw.githubusercontent.com/ryjer/imgbed/master/images/20210813131211-6c38545cdced8e5407128880e2c2bf72-6aa8f301.png\" alt=\"image-20210813131209370\"></p>\n<p>移动完成后，效果如下</p>\n<p><img src=\"https://raw.githubusercontent.com/ryjer/imgbed/master/images/20210813131443-fd070142fd11851af989a6c7f12c107a-defc65fd.png\" alt=\"image-20210813131441278\"></p>\n<p>然后你就可以重启系统测试一下了</p>\n<h1 id=\"二、无界面开机启动\"><a href=\"#二、无界面开机启动\" class=\"headerlink\" title=\"二、无界面开机启动\"></a>二、无界面开机启动</h1><p>建议不使用 GUI 的 Linux 服务器虚拟器采用此方式</p>\n<h2 id=\"原理\"><a href=\"#原理\" class=\"headerlink\" title=\"原理\"></a>原理</h2><p>我们将创建一个 **脚本 ** 来启动vbox虚拟机，而virtual box是支持 CLI 命令的。然后，像上面一样把这个脚本放到启动文件夹下即可</p>\n<h2 id=\"定位-virtual-box-安装目录\"><a href=\"#定位-virtual-box-安装目录\" class=\"headerlink\" title=\"定位 virtual box 安装目录\"></a>定位 virtual box 安装目录</h2><p>在桌面图标上 <code>右键</code> &gt; <code>打开文件所在的位置(l)</code>，就可以定位到安装目录了</p>\n<p><img src=\"https://raw.githubusercontent.com/ryjer/imgbed/master/images/20210813140142-494d1d46605f1a82bd579f933b9e33b0-3a03f651.png\" alt=\"image-20210813140139174\"></p>\n<p>安装目录打开如下</p>\n<p><img src=\"https://raw.githubusercontent.com/ryjer/imgbed/master/images/20210813140350-b8caaef2e9df13bd0b0a66dac5ccac11-04526554.png\" alt=\"image-20210813140331832\"></p>\n<p>该目录下有一个 <code>VBoxManage.exe</code> 程序，这就是我们的脚本要使用的程序</p>\n<p><img src=\"https://raw.githubusercontent.com/ryjer/imgbed/master/images/20210813140447-3da2eb13e928c5a53bc1afb0282d74b1-34189b8b.png\" alt=\"image-20210813140443776\"></p>\n<h2 id=\"创建脚本\"><a href=\"#创建脚本\" class=\"headerlink\" title=\"创建脚本\"></a>创建脚本</h2><p>首先，创建一个脚本程序，名字随意，拓展名为 <code>.bat</code></p>\n<p>我这里就命名为 <code>vboxstart.bat</code> ，我的脚本内容如下</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">@<span class=\"built_in\">echo</span> off</span><br><span class=\"line\">:: 无界面启动</span><br><span class=\"line\"><span class=\"built_in\">cd</span> /d <span class=\"string\">&quot;C:\\Program Files\\Oracle\\VirtualBox&quot;</span></span><br><span class=\"line\">VBoxManage.exe  startvm <span class=\"string\">&quot;CentOS_7.9&quot;</span> --<span class=\"built_in\">type</span> headless</span><br></pre></td></tr></table></figure>\n\n<p>解释一下，第1行 <code>@echo off</code></p>\n<p>第2行 <code>:: 无界面启动</code> 是注释，没什么用</p>\n<p>第3行 <code>cd /d &quot;C:\\Program Files\\Oracle\\VirtualBox&quot;</code> 为打开virtual box 安装文件夹，可在刚刚 <strong>定位 virtual box 安装目录</strong> 下打开的文件夹上面复制得到（如下图）。注意用双引号引起来</p>\n<p><img src=\"https://raw.githubusercontent.com/ryjer/imgbed/master/images/20210813141009-623f87edb68f6590a3de3ad57067fca1-4a7478c2.png\" alt=\"image-20210813141002020\"></p>\n<p>第4行为使用 <code>VBoxManage.exe</code> 启动虚拟机 <code>CentOS_7.9</code>，启动方式(<code>--type</code>)为无界面启动(<code>headless</code>) 。无界面启动是没有窗口的，适合启动 linux 虚拟机后使用 shell 工具连接登录</p>\n<h2 id=\"添加到开机启动文件夹\"><a href=\"#添加到开机启动文件夹\" class=\"headerlink\" title=\"添加到开机启动文件夹\"></a>添加到开机启动文件夹</h2><p>然后保存，移动到和上面一样的 <code>C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\StartUp</code> 文件夹下。</p>\n<p><img src=\"https://raw.githubusercontent.com/ryjer/imgbed/master/images/20210813141531-b65f81a1f568a6055a2663d61aae748c-edc8d569.png\" alt=\"image-20210813141528907\"></p>\n<h1 id=\"三、无窗口开机自启动\"><a href=\"#三、无窗口开机自启动\" class=\"headerlink\" title=\"三、无窗口开机自启动\"></a>三、无窗口开机自启动</h1><p>上面的方式在开机时会产生一个 cmd 窗口，很烦人。与预期中的 <strong>无感</strong> 不符，百度了好几篇文章，实测下面的能用</p>\n<h2 id=\"创建直接自启动vbs脚本\"><a href=\"#创建直接自启动vbs脚本\" class=\"headerlink\" title=\"创建直接自启动vbs脚本\"></a>创建直接自启动vbs脚本</h2><p>自启动脚本，这是一个 <code>vbs</code> 格式文件。</p>\n<p>随便起个名字放到上面的开机自启动文件夹内。我的名字是 <code>startscript.vbs</code></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">Set ws = CreateObject(<span class=\"string\">&quot;Wscript.Shell&quot;</span>) </span><br><span class=\"line\">ws.run <span class=\"string\">&quot;C:\\vm\\startvm.bat&quot;</span>,vbhide</span><br></pre></td></tr></table></figure>\n\n<p>该脚本会执行另一个脚本（第2行），要是你想的话，下面可以多加几行，格式参照第2行</p>\n<p>上面的是 <code>C:\\vm\\startvm.bat</code>。其内容如下</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">@<span class=\"built_in\">echo</span> off</span><br><span class=\"line\">:: 无界面启动</span><br><span class=\"line\"><span class=\"built_in\">cd</span> /d <span class=\"string\">&quot;C:\\Program Files\\Oracle\\VirtualBox&quot;</span></span><br><span class=\"line\">VBoxManage.exe  startvm <span class=\"string\">&quot;rocky8&quot;</span> --<span class=\"built_in\">type</span> headless</span><br></pre></td></tr></table></figure>\n\n<p>这个脚本被间接执行，真正完成以无界面模式打开虚拟机 <code>rocky8</code> 的操作</p>\n","categories":["windows","开机自启"],"tags":["linux","virtual box","windows","开机启动"]}]